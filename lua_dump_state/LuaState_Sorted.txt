 ACTIVATION_TIMER=0
 ADJUSTAIM_AIM=0
 ADJUSTAIM_HIDE=1
 AHC_BASIC=0
 AHC_CHAT=8
 AHC_DOG=7
 AHC_FOLLOW=9
 AHT_HOLD=2
 AHT_PRESS=0
 AHT_RELEASE=1
 AI = {
	 AbortAction()
	 AddAggressiveTarget()
	 AddCombatClass()
	 AddCoverEntity()
	 AddFormationPoint()
	 AddFormationPointFixed()
	 AddPersonallyHostile()
	 AgentLookAtPos()
	 AllowLowerBodyToTurn()
	 Animation()
	 AssignPFPropertiesToPathType()
	 AssignPathTypeToSOUser()
	 AutoDisable()
	 BeginGoalPipe()
	 BeginGroup()
	 BehaviorEvent()
	 BreakEvent()
	 CanFireInStance()
	 CanMelee()
	 CanMoveStraightToPoint()
	 ChangeFormation()
	 ChangeMovementAbility()
	 ChangeParameter()
	 CheckForFriendlyAgentsAroundPoint()
	 CheckMeleeDamage()
	 CheckVehicleColision()
	 ClearAnimationTag()
	 ClearMovementContext()
	 ClearPotentialTargets()
	 ClearTempTarget()
	 ConstrainPointInsideGenericShape()
	 CreateFormation()
	 CreateGoalPipe()
	 CreateGroupFormation()
	 CreateStimulusEvent()
	 CreateStimulusEventInRange()
	 CreateTempGenericShapeBox()
	 DebugReportHitDamage()
	 DestroyAllTPSQueries()
	 DistanceToGenericShape()
	 DropTarget()
	 EnableCoverFire()
	 EnableFire()
	 EnableUpdateLookTarget()
	 EnableWeaponAccessory()
	 EndGoalPipe()
	 EndGroup()
	 Error()
	 EvalHidespot()
	 EvalPeek()
	 Event()
	 ExecuteAction()
	 FindObjectOfType()
	 FindStandbySpotInShape()
	 FindStandbySpotInSphere()
	 FreeSignal()
	 GetAIObjectPosition()
	 GetAlertness()
	 GetAnchor()
	 GetAttentionTargetAIType()
	 GetAttentionTargetDirection()
	 GetAttentionTargetDistance()
	 GetAttentionTargetEntity()
	 GetAttentionTargetOf()
	 GetAttentionTargetPosition()
	 GetAttentionTargetThreat()
	 GetAttentionTargetType()
	 GetAttentionTargetViewDirection()
	 GetBeaconPosition()
	 GetBehaviorBlackBoard()
	 GetBehaviorVariable()
	 GetBiasedDirection()
	 GetCurrentHideAnchor()
	 GetDirLabelToPoint()
	 GetDirectAnchorPos()
	 GetDistanceAlongPath()
	 GetDistanceToClosestGroupMember()
	 GetEnclosingGenericShapeOfType()
	 GetEnclosingSpace()
	 GetExtraPriority()
	 GetFactionOf()
	 GetFlyingVehicleFlockingPos()
	 GetFormationLookingPoint()
	 GetFormationPointClass()
	 GetFormationPointPosition()
	 GetFormationPosition()
	 GetForwardDir()
	 GetGroupAlertness()
	 GetGroupAveragePosition()
	 GetGroupCount()
	 GetGroupMember()
	 GetGroupOf()
	 GetGroupScopeUserCount()
	 GetGroupScriptTable()
	 GetGroupTarget()
	 GetGroupTargetCount()
	 GetGroupTargetEntity()
	 GetGroupTargetThreat()
	 GetGroupTargetType()
	 GetHeliAdvancePoint()
	 GetLastUsedSmartObject()
	 GetLeader()
	 GetMemoryFireType()
	 GetNavigationType()
	 GetNearestEntitiesOfType()
	 GetNearestHidespot()
	 GetNearestPathOfTypeInRange()
	 GetNearestPointOnPath()
	 GetObjectBlackBoard()
	 GetObjectRadius()
	 GetParameter()
	 GetPathLoop()
	 GetPathSegNoOnPath()
	 GetPeakThreatLevel()
	 GetPeakThreatType()
	 GetPointOnPathBySegNo()
	 GetPosturePriority()
	 GetPotentialTargetCount()
	 GetPotentialTargetCountFromFaction()
	 GetPredictedPosAlongPath()
	 GetPreviousBehaviorName()
	 GetPreviousPeakThreatLevel()
	 GetPreviousPeakThreatType()
	 GetProbableTargetPosition()
	 GetReactionOf()
	 GetRefPointDirection()
	 GetRefPointPosition()
	 GetRefShapeName()
	 GetSmartObjectHelper()
	 GetSoundPerceptionDescriptor()
	 GetStance()
	 GetSubTypeOf()
	 GetTacticalPoints()
	 GetTargetSubType()
	 GetTargetType()
	 GetTotalLengthOfPath()
	 GetTypeOf()
	 GetUnitCount()
	 GoTo()
	 Hostile()
	 IgnoreCurrentHideObject()
	 IntersectsForbidden()
	 InvalidateHidespot()
	 IsAgentInAgentFOV()
	 IsAgentInTargetFOV()
	 IsAimReady()
	 IsCoverCompromised()
	 IsEnabled()
	 IsFireEnabled()
	 IsGoalPipe()
	 IsInCover()
	 IsLowHealthPauseActive()
	 IsLowOnAmmo()
	 IsMoving()
	 IsMovingInCover()
	 IsMovingToCover()
	 IsOutOfAmmo()
	 IsPersonallyHostile()
	 IsPointInFlightRegion()
	 IsPointInWaterRegion()
	 IsPointInsideGenericShape()
	 IsPunchableObjectValid()
	 IsTakingCover()
	 LoadBehaviors()
	 LoadGoalPipes()
	 LogComment()
	 LogEvent()
	 LogProgress()
	 MeleePunchableObject()
	 ModifySmartObjectStates()
	 NotifyGroup()
	 NotifyReinfDone()
	 NotifySurpriseEntityAction()
	 PlayCommunication()
	 ProcessBalancedDamage()
	 PushGoal()
	 PushLabel()
	 QueueBubbleMessage()
	 RecComment()
	 RegisterDamageRegion()
	 RegisterInterestedActor()
	 RegisterInterestingEntity()
	 RegisterTacticalPointQuery()
	 RegisterTargetTrack()
	 RemoveCoverEntity()
	 RemovePersonallyHostile()
	 RequestToStopMovement()
	 ResetAgentLookAtPos()
	 ResetAgentState()
	 ResetParameters()
	 ResetPersonallyHostiles()
	 ScaleFormation()
	 SequenceBehaviorReady()
	 SequenceInterruptibleBehaviorLeft()
	 SequenceNonInterruptibleBehaviorLeft()
	 SetAdjustPath()
	 SetAlarmed()
	 SetAnimationTag()
	 SetAssesmentMultiplier()
	 SetAttentiontarget()
	 SetBeaconPosition()
	 SetBehaviorTreeEvaluationEnabled()
	 SetBehaviorVariable()
	 SetCollisionAvoidanceRadiusIncrement()
	 SetContinuousMotion()
	 SetCoverCompromised()
	 SetEntitySpeedRange()
	 SetExtraPriority()
	 SetFactionOf()
	 SetFactionThreatMultiplier()
	 SetFireMode()
	 SetForcedNavigation()
	 SetFormationAngleThreshold()
	 SetFormationLookingPoint()
	 SetFormationPosition()
	 SetFormationUpdate()
	 SetFormationUpdateSight()
	 SetIgnorant()
	 SetInCover()
	 SetLastOpResult()
	 SetLeader()
	 SetMemoryFireType()
	 SetMovementContext()
	 SetPFBlockerRadius()
	 SetPFProperties()
	 SetPathAttributeToFollow()
	 SetPathToFollow()
	 SetPointListToFollow()
	 SetPosturePriority()
	 SetPostures()
	 SetReactionOf()
	 SetRefPointAtDefensePos()
	 SetRefPointDirection()
	 SetRefPointPosition()
	 SetRefPointRadius()
	 SetRefPointToGrenadeAvoidTarget()
	 SetRefShapeName()
	 SetRefpointToAnchor()
	 SetRefpointToPunchableObject()
	 SetSmartObjectState()
	 SetSoundPerceptionDescriptor()
	 SetSpeed()
	 SetStance()
	 SetTargetTrackClassThreat()
	 SetTempTargetPriority()
	 SetTerritoryShapeName()
	 SetUnitProperties()
	 SetUseSecondaryVehicleWeapon()
	 SetVehicleStickTarget()
	 Signal()
	 SmartObjectEvent()
	 SoundEvent()
	 StartModularBehaviorTree()
	 StopCommunication()
	 StopModularBehaviorTree()
	 ThrowGrenade()
	 TriggerCurrentTargetTrackPulse()
	 UnregisterInterestedActor()
	 UnregisterInterestingEntity()
	 UnregisterTargetTrack()
	 UpTargetPriority()
	 UpdateGlobalPerceptionScale()
	 UpdateTempTarget()
	 VisualEvent()
	 Warning()
 }
 AIALERTSTATUS_ACTION=3
 AIALERTSTATUS_READY=2
 AIALERTSTATUS_SAFE=0
 AIALERTSTATUS_UNSAFE=1
 AIANCHOR_BEHIND=128
 AIANCHOR_BEHIND_IN_RANGE=7
 AIANCHOR_FARTHEST=6
 AIANCHOR_HIDE_FROM_REFPOINT=10
 AIANCHOR_LEFT_TO_REFPOINT=8
 AIANCHOR_NEAREST=0
 AIANCHOR_NEAREST_FACING_AT=4
 AIANCHOR_NEAREST_IN_FRONT=1
 AIANCHOR_NEAREST_TO_REFPOINT=5
 AIANCHOR_RANDOM_IN_RANGE=2
 AIANCHOR_RANDOM_IN_RANGE_FACING_AT=3
 AIANCHOR_RIGHT_TO_REFPOINT=9
 AIANCHOR_SEES_TARGET=64
 AIANIM_ACTION=2
 AIANIM_SIGNAL=1
 AIEVENT_AGENTDIED=5
 AIEVENT_CLEAR=15
 AIEVENT_CLEARACTIVEGOALS=22
 AIEVENT_DISABLE=9
 AIEVENT_DRIVER_IN=23
 AIEVENT_DRIVER_OUT=24
 AIEVENT_DROPBEACON=17
 AIEVENT_ENABLE=8
 AIEVENT_FORCEDNAVIGATION=25
 AIEVENT_ONVISUALSTIMULUS=2
 AIEVENT_PATHFINDOFF=12
 AIEVENT_PATHFINDON=11
 AIEVENT_SLEEP=6
 AIEVENT_USE=19
 AIEVENT_WAKEUP=7
 AIFAF_INCLUDE_DEVALUED=4
 AIFAF_INCLUDE_DISABLED=8
 AIFAF_VISIBLE_FROM_REQUESTER=1
 AIFO_CHOOSE_RANDOM=4
 AIFO_FACING_TARGET=1
 AIFO_NONOCCUPIED=2
 AIFO_NONOCCUPIED_REFPOINT=8
 AIFO_NO_DEVALUE=32
 AIFO_USE_BEACON_AS_FALLBACK_TGT=16
 AIGOALPIPE_DONT_RESET_AG=16
 AIGOALPIPE_HIGHPRIORITY=4
 AIGOALPIPE_KEEP_LAST_SUBPIPE=32
 AIGOALPIPE_KEEP_ON_TOP=64
 AIGOALPIPE_LOOP=0
 AIGOALPIPE_NOTDUPLICATE=2
 AIGOALPIPE_RUN_ONCE=1
 AIGOALPIPE_SAMEPRIORITY=8
 AILASTOPRES_LOOKAT=2
 AILASTOPRES_USE=1
 AILOOKMOTIVATION_DOUBLETAKE=3
 AILOOKMOTIVATION_GLANCE=1
 AILOOKMOTIVATION_LOOK=0
 AILOOKMOTIVATION_STARTLE=2
 AIMOVEABILITY_MAXFLIGHTHEIGHT=3
 AIMOVEABILITY_MINFLIGHTHEIGHT=2
 AIMOVEABILITY_OPTIMALFLIGHTHEIGHT=1
 AIMOVEABILITY_TELEPORTENABLE=4
 AIMOVEABILITY_USEPREDICTIVEFOLLOWING=5
 AIOBJECTFILTER_INCLUDEINACTIVE=8
 AIOBJECTFILTER_NOGROUP=4
 AIOBJECTFILTER_SAMEFACTION=1
 AIOBJECTFILTER_SAMEGROUP=2
 AIOBJECT_2D_FLY=80
 AIOBJECT_ACTOR=5
 AIOBJECT_ALIENTICK=46
 AIOBJECT_ATTRIBUTE=11
 AIOBJECT_BOAT=60
 AIOBJECT_CAR=50
 AIOBJECT_DUMMY=0
 AIOBJECT_GLOBALALERTNESS=94
 AIOBJECT_GRENADE=150
 AIOBJECT_GUNFIRE=42
 AIOBJECT_HELICOPTER=40
 AIOBJECT_HELICOPTERCRYSIS2=41
 AIOBJECT_INFECTED=45
 AIOBJECT_MOUNTEDWEAPON=90
 AIOBJECT_NAV_SEED=15
 AIOBJECT_NONE=200
 AIOBJECT_ORDER=96
 AIOBJECT_PLAYER=100
 AIOBJECT_RPG=151
 AIOBJECT_SNDSUPRESSOR=14
 AIOBJECT_TARGET=9
 AIOBJECT_VEHICLE=6
 AIOBJECT_WAYPOINT=12
 AIPARAM_ACCURACY=3
 AIPARAM_AIM_TURNSPEED=22
 AIPARAM_ATTACKRANGE=2
 AIPARAM_CLOAKED=30
 AIPARAM_CLOAK_SCALE=16
 AIPARAM_COMBATCLASS=12
 AIPARAM_COMMRANGE=7
 AIPARAM_FACTION=9
 AIPARAM_FACTIONHOSTILITY=10
 AIPARAM_FIRE_TURNSPEED=23
 AIPARAM_FORGETTIME_MEMORY=19
 AIPARAM_FORGETTIME_SEEK=18
 AIPARAM_FORGETTIME_TARGET=17
 AIPARAM_FOVPRIMARY=5
 AIPARAM_FOVSECONDARY=6
 AIPARAM_FWDSPEED=8
 AIPARAM_GROUPID=4
 AIPARAM_INVISIBLE=13
 AIPARAM_LOOKCOMBAT_TURNSPEED=21
 AIPARAM_LOOKIDLE_TURNSPEED=20
 AIPARAM_MELEE_DISTANCE=24
 AIPARAM_MIN_ALARM_LEVEL=26
 AIPARAM_PERCEPTIONAUDIORANGE_AGGRESSIVE=31
 AIPARAM_PERCEPTIONAUDIORANGE_INTERESTING=33
 AIPARAM_PERCEPTIONAUDIORANGE_THREATENING=32
 AIPARAM_PERCEPTIONSCALE_AUDIO=15
 AIPARAM_PERCEPTIONSCALE_VISUAL=14
 AIPARAM_PERCEPTIONVISUALTIME_AGGRESSIVE=35
 AIPARAM_PERCEPTIONVISUALTIME_INTERESTING=37
 AIPARAM_PERCEPTIONVISUALTIME_NEARREACT=34
 AIPARAM_PERCEPTIONVISUALTIME_THREATENING=36
 AIPARAM_PERCEPTIONVISUAL_CANFORGET=40
 AIPARAM_PERCEPTIONVISUAL_TARGETLONGMEMORYTIME=39
 AIPARAM_PERCEPTIONVISUAL_TARGETSTATIONARYTIME=38
 AIPARAM_PROJECTILE_LAUNCHDIST=27
 AIPARAM_SIGHTDELAY=28
 AIPARAM_SIGHTNEARRANGE=29
 AIPARAM_SIGHTRANGE=1
 AIPARAM_STRAFINGPITCH=11
 AIPATH_3D=7
 AIPATH_BOAT=5
 AIPATH_CAR=3
 AIPATH_DEFAULT=0
 AIPATH_HELI=6
 AIPATH_HUMAN=1
 AIPATH_HUMAN_COVER=2
 AIPATH_HUNTER=10
 AIPATH_SCOUT=8
 AIPATH_TANK=4
 AIPATH_TROOPER=9
 AIPROX_SIGNAL_ON_OBJ_DISABLE=1
 AIPROX_VISIBLE_TARGET_ONLY=2
 AIREADIBILITY_INTERESTING=5
 AIREADIBILITY_LOST=20
 AIREADIBILITY_NOPRIORITY=1
 AIREADIBILITY_NORMAL=30
 AIREADIBILITY_SEEN=10
 AISIGNAL_ALLOW_DUPLICATES=10
 AISIGNAL_DEFAULT=1
 AISIGNAL_INCLUDE_DISABLED=0
 AISIGNAL_NOTIFY_ONLY=9
 AISIGNAL_PROCESS_NEXT_UPDATE=3
 AISOUND_COLLISION=1
 AISOUND_COLLISION_LOUD=2
 AISOUND_EXPLOSION=6
 AISOUND_GENERIC=0
 AISOUND_MOVEMENT=3
 AISOUND_MOVEMENT_LOUD=4
 AISOUND_WEAPON=5
 AISYSEVENT_DISABLEMODIFIER=1
 AISpawner = {
	 CreateDummy()
	 Editor = {
		 DisplayArrow=1
		 Icon=SpawnPoint.bmp
		 Model=Editor/Objects/Particles.cgf
	 }
	 Event_AutoDisableOff()
	 Event_AutoDisableOn()
	 Event_Disable()
	 Event_Enable()
	 Event_Limit()
	 FindSpawnProtoUnitId()
	 FindSpawnReinfPoint()
	 FlowEvents = {
		 Inputs = {
			 AutoDisableOff = {
				 [02]=bool
				 [01]()
			 }
			 AutoDisableOn = {
				 [02]=bool
				 [01]()
			 }
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Limit=bool
		 }
	 }
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 Properties = {
		 Limit=4
		 NumUnits=2
		 bDoVisCheck=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bLimitStop=1
		 bSaved_by_game=true
	 }
	 RemoveDummy()
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 SpawnInitially()
	 SpawnUnit()
	 UnitDown()
	 isEnabled=0
	 spawnedIdsSize=0
	 totalUnitsCounter=0
	 unitsCounter=0
 }
 AITARGET_BEACON=6
 AITARGET_ENEMY=4
 AITARGET_FRIENDLY=5
 AITARGET_GRENADE=7
 AITARGET_MEMORY=2
 AITARGET_NONE=0
 AITARGET_RPG=8
 AITARGET_SOUND=1
 AITARGET_VISUAL=3
 AITHREAT_AGGRESSIVE=4
 AITHREAT_INTERESTING=2
 AITHREAT_NONE=0
 AITHREAT_SUSPECT=1
 AITHREAT_THREATENING=3
 AITSR_NONE=0
 AITSR_SEE_CLOAKED=2
 AITSR_SEE_STUNT_ACTION=1
 AIUSEOP_PLANTBOMB=1
 AIUSEOP_RPG=3
 AIUSEOP_VEHICLE=2
 AIWEPA_COMBAT_LIGHT=2
 AIWEPA_LASER=1
 AIWEPA_PATROL_LIGHT=4
 AI_ADJUST_SPEED=131072
 AI_BACKOFF_FROM_TARGET=2048
 AI_BREAK_ON_LIVE_TARGET=4096
 AI_CHECK_SLOPE_DISTANCE=262144
 AI_COLLISION_AVOIDANCE_RAGDOLL_AGENT_MODE_BOUNDINGBOXBONE=1
 AI_COLLISION_AVOIDANCE_RAGDOLL_AGENT_MODE_DEFAULT=0
 AI_CONSTANT_SPEED=8192
 AI_JUMP_CHECK_COLLISION=1
 AI_JUMP_MOVING_TARGET=8
 AI_JUMP_ON_GROUND=2
 AI_JUMP_RELATIVE=4
 AI_LOOKAT_CONTINUOUS=1
 AI_LOOKAT_USE_BODYDIR=2
 AI_LOOK_FORWARD=4
 AI_MOVE_BACKLEFT=256
 AI_MOVE_BACKRIGHT=128
 AI_MOVE_BACKWARD=8
 AI_MOVE_FORWARD=64
 AI_MOVE_LEFT=32
 AI_MOVE_RIGHT=16
 AI_MOVE_TOWARDS_GROUP=512
 AI_NOGROUP=-1
 AI_RANDOM_ORDER=8192
 AI_REG_ATTENTIONTARGET=3
 AI_REG_COVER=4
 AI_REG_LASTOP=1
 AI_REG_NONE=0
 AI_REG_PATH=5
 AI_REG_REFPOINT=2
 AI_REQUEST_PARTIAL_PATH=1024
 AI_RGT_ANY=0
 AI_RGT_EMP_GRENADE=4
 AI_RGT_FLASHBANG_GRENADE=2
 AI_RGT_FRAG_GRENADE=3
 AI_RGT_GRUNT_GRENADE=5
 AI_RGT_SMOKE_GRENADE=1
 AI_STOP_ON_ANIMATION_START=32768
 AI_USE_HIDESPOTS=16384
 AI_USE_TARGET_MOVEMENT=65536
 AI_USE_TIME=16384
 AREA_BOX=1
 AREA_CYLINDER=4
 AREA_GEOMETRY=2
 AREA_SHAPE=3
 AREA_SPHERE=0
 AREA_SPLINE=5
 ATTACHMENT_KEEP_TRANSFORMATION=1
 AVOIDANCE_ALL=65535
 AVOIDANCE_DAMAGE_REGION=256
 AVOIDANCE_DEFAULT=65535
 AVOIDANCE_NONE=0
 AVOIDANCE_PLAYERS=4
 AVOIDANCE_PUPPETS=2
 AVOIDANCE_PUSHABLE_OBSTACLES=32
 AVOIDANCE_STATIC_OBSTACLES=16
 AVOIDANCE_VEHICLES=1
 Action()
 ActionMapManager = {
	 EnableActionMap()
	 EnableActionMapManager()
	 GetDefaultActionEntity()
	 InitActionMaps()
	 IsFilterEnabled()
	 LoadControllerLayoutFile()
	 LoadFromXML()
	 SetActionListener()
	 SetDefaultActionEntity()
 }
 ActionTrigger = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 GetLinkedSmartObject()
	 GetOwner()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsLegal()
	 IsLegalHold()
	 IsLegalImpl()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnNPCStateSearchDone()
	 OnPropertyChange()
	 OnReset()
	 OnResourcesHosted()
	 OnResourcesHostingInterrupted()
	 OnSave()
	 OnSpawn()
	 OnTriggerPoint()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=@ui_hud_use_item
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=Stance
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=sitting
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=None
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Actor = {
	 CreateActor()
 }
 AddAction()
 AddInteractorAction()
 AddWeapon()
 Alchemy = {
	 GetDisableReason()
	 GetFlagTextFor()
	 GetUsableFor()
	 IsCrossCenteringEnabled()
	 IsUsableByHold()
	 IsUsableEnabledFor()
	 IsUsableVisibleFor()
	 OnUse()
	 ResetTable()
	 StartAlchemy()
 }
 AlchemyItem = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 GetActions()
	 GetUsableName()
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnInit()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUse()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 alchemy_type=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractableThroughCollision=false
		 bInteractiveCollisionClass=false
		 bSaved_by_game=false
		 bUpdateOnlyByScript=false
		 object_Model=
		 sWH_AI_EntityCategory=
		 slot_name=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetInteractiveCollisionType()
	 bUseableMsgChanged=0
	 nUserId=0
 }
 AlchemyTable = {
	 Client = {
		 OnLevelLoaded()
	 }
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnEnablePhysics()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 BellowsIdleTimeout=0.5
		 BellowsUseCountToDistill=2
		 CameraLimitAngleDown=-60
		 CameraLimitAngleLeft=-75
		 CameraLimitAngleRight=95
		 CameraLimitAngleUp=20
		 FireSound=Sounds/environment:special/alchemy:fireplace
		 FlaskRise=Objects/props/alchemy/flask/potion_rise.cax
		 HerbsBow=Objects/props/alchemy/bowl/bowl_herbs.cgf
		 HerbsBowMilled=Objects/props/alchemy/bowl/bowl_herbs_crushed.cgf
		 HerbsMortar=Objects/props/alchemy/mortar/mortar_herbs.cgf
		 HerbsMortarMilled=Objects/props/alchemy/mortar/mortar_herbs_crushed.cgf
		 HourGlassAlembic=Objects/props/alchemy/sandglass/sandglass_sand.cax
		 HourGlassUnitTime=10
		 MortarFinishingMilledModel=Objects/manmade/task_specific_props/alchemy/mortar/mortar_gunpowder_crushed.cgf
		 MortarFinishingModel=Objects/manmade/task_specific_props/alchemy/mortar/mortar_gunpowder.cgf
		 MortarUseCount=1
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 PotFinish=Objects/props/alchemy/alchemy_pot/alchemy_pot_finish.cax
		 PotInsertBase=Objects/props/alchemy/alchemy_pot/alchemy_pot_start.cax
		 PotionPouring=Objects/props/alchemy/flask/potion_pouring.cax
		 StepsTolerance=2
		 StrongBoilFireIntensity=2
		 StrongBoilTimeout=10
		 WaitDuration=5
		 WaterSound=Sounds/environment:special/alchemy:boiling_water
		 WeakBoilTimeout=5
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bOnlyNPC=true
		 bSaved_by_game=true
		 fUseAngle=0.9
		 fUseDistance=3.25
		 guidSmartObjectType=
		 object_Model=Objects/props/alchemy/alchemist_table.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetInteractiveCollisionType()
	 SetupTrigger()
	 State = {
		 enteredBook=false
		 isUsedByPlayer=false
	 }
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 AnimChar = {
	 Client = {
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_BodyBlood()
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 BodyBlood = {
				 [02]=string
				 [01]()
			 }
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Body = {
			 bIsMortal=false
			 bVisorClosed=false
			 fBloodOverride=-1
			 fDirtOverride=-1
			 fScratchesOverride=-1
			 guidBodyPresetId=0
			 guidClothingPresetId=0
			 guidSubstituteBodyPresetId=0
			 guidWeaponPresetId=0
		 }
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bPhysicalize=false
			 bPushableByPlayers=true
			 bRigidBody=true
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bClothingRemoveHelmet=true
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=false
		 bUsable=false
		 characterDetail=0
		 esClothingConfig=male2
		 guidBeardHairOverrideId=0
		 object_Model=Objects/Characters/humans/male/skeleton/male.cdf
		 sWH_AI_EntityCategory=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 SetFromProperties()
	 SetupModel()
 }
 AnimDoor = {
	 BuildNPCAnimationName()
	 BuildObjectAnimationName()
	 Client = {
		 OnLevelLoaded()
	 }
	 Close()
	 DespawnSuspiciousVolume()
	 DisableLockpick()
	 DoLockOnMissingHomeArea()
	 DoPlayAnimation()
	 DoPlaySound()
	 DoStopSound()
	 DumpState()
	 Editor = {
		 Icon=Door.bmp
		 ShowBounds=1
	 }
	 EnableLockpick()
	 Event_Close()
	 Event_Hide()
	 Event_Lock()
	 Event_Open()
	 Event_UnHide()
	 Event_Unlock()
	 FlowEvents = {
		 Inputs = {
			 Close = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Lock = {
				 [02]=bool
				 [01]()
			 }
			 Open = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Unlock = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Close=bool
			 Hide=bool
			 Lock=bool
			 Open=bool
			 UnHide=bool
			 Unlock=bool
		 }
	 }
	 GenerateLockData()
	 GetActions()
	 GetLockDifficulty()
	 GetSuspiciousVolume()
	 IsAccessedFromFront()
	 IsInUse()
	 IsInteractive()
	 IsLocked()
	 IsOnKeySide()
	 IsOpen()
	 IsRightDoor()
	 IsUsable()
	 IsUsableMsgChanged()
	 Lock()
	 LockType=door
	 Lockpick()
	 NeedSerialize()
	 OnEnablePhysics()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 Open()
	 PhysicalizeThis()
	 ProduceAiSound()
	 Properties = {
		 Animation = {
			 anim_Close=Close
			 anim_Open=Open
		 }
		 Lock = {
			 bCanLockPick=true
			 bCanUnlockWithDynamicKey=true
			 bDoLockOnMissingHomeArea=true
			 bLockDifficultyOverride=false
			 bLockFancinessOverride=false
			 bLockInside=false
			 bLockOutside=false
			 bLockReversed=false
			 bLocked=false
			 bNeverLockByPassingNPC=true
			 bSendMessage=false
			 esLockFanciness=Common
			 esLockTypes=none/none
			 fKeepUnlockedFrom=7.5
			 fKeepUnlockedTo=19.5
			 fLockDifficulty=0.5
			 guidItemClassId=
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 Sounds = {
			 snd_Close=Sounds/environment:doors:door_wood_1_close
			 snd_Open=Sounds/environment:doors:door_wood_1_open
		 }
		 bActivatePortal=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=true
		 bNoCrimeDoorLink=false
		 bNoFriendlyFire=false
		 bSaved_by_game=true
		 esDoorAnimSet=
		 esNavCompoment=Door
		 fUseDistance=2
		 fUseLockpickAngle=0.8
		 fUseLockpickDistance=2
		 guidSmartObjectType=
		 object_Model=
		 sWH_AI_EntityCategory=Door
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 Server = {
		 OnUpdate()
	 }
	 SetInteractiveCollisionType()
	 SetLockedDueToPrivate()
	 SetPhysicalFlags()
	 SetShouldBeLockedOverride()
	 SetUnlockedDueExpected()
	 ShouldBeLocked()
	 SpawnSuspiciousVolume()
	 Unlock()
	 bLocked=false
	 bNeedUpdate=0
	 bNoAnims=0
	 bUseSameAnim=0
	 bUseableMsgChanged=0
	 lastAnim=
	 nDirection=-1
	 nSoundId=0
	 nUpdateAfterLoad=0
	 nUserId=0
 }
 AnimObjectBase = {
	 Client = {
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=true
			 bRigidBody=true
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=true
		 bUsable=false
		 object_Model=objects/default/primitive_pyramid.cgf
		 sWH_AI_EntityCategory=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 SetFromProperties()
	 SetupModel()
 }
 AnimalSpawner = {
	 Editor = {
		 Icon=pig.bmp
		 IconOnTop=0
	 }
	 Properties = {
		 AnimalCount=5
		 EntityClass=
		 RespawnDays=14
		 SpawnInFlock=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 guidSoul=
	 }
 }
 Archery = {
	 getArrows()
	 getMoneyBet()
	 getShootingRange()
	 shootmaster = {
		 aus_shootmaster = {
			 difficulty = {
				 advanced = {
					 arrows=13
					 bet=30
				 }
				 beginer = {
					 arrows=7
					 bet=10
				 }
				 expert = {
					 arrows=21
					 bet=70
				 }
			 }
			 shootingRange=q_archery_uzice
		 }
		 prib_shootmaster = {
			 difficulty = {
				 advanced = {
					 arrows=13
					 bet=30
				 }
				 beginer = {
					 arrows=7
					 bet=10
				 }
				 expert = {
					 arrows=21
					 bet=70
				 }
			 }
			 shootingRange=q_archery_pribyslavice
		 }
		 q_theresa_skao_shootmaster = {
			 difficulty = {
				 advanced = {
					 arrows=13
					 bet=30
				 }
				 beginer = {
					 arrows=7
					 bet=10
				 }
				 expert = {
					 arrows=21
					 bet=70
				 }
			 }
			 shootingRange=q_archery_skalice
		 }
		 rat_shootmaster = {
			 difficulty = {
				 advanced = {
					 arrows=13
					 bet=30
				 }
				 beginer = {
					 arrows=7
					 bet=10
				 }
				 expert = {
					 arrows=21
					 bet=70
				 }
			 }
			 shootingRange=q_archery_rataje
		 }
		 tal_shootmaster = {
			 difficulty = {
				 advanced = {
					 arrows=13
					 bet=30
				 }
				 beginer = {
					 arrows=7
					 bet=10
				 }
				 expert = {
					 arrows=21
					 bet=70
				 }
			 }
			 shootingRange=q_archery_mrchojedy
		 }
	 }
 }
 AreaBezierVolume = {
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
		 }
	 }
	 OnEnable()
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnSave()
	 OnSpawn()
	 Properties = {
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 type=AreaBezierVolume
 }
 AreaTrigger = {
	 CanTrigger()
	 Client = {
		 ClEnter()
		 ClLeave()
		 OnEnterArea()
		 OnLeaveArea()
	 }
	 Editor = {
		 Icon=AreaTrigger.bmp
		 IsRotatable=false
		 IsScalable=false
		 Model=Editor/Objects/T.cgf
	 }
	 Enable()
	 EnteredArea()
	 Event_Disable()
	 Event_Enable()
	 Event_Enter()
	 Event_Leave()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Enter = {
				 [02]=bool
				 [01]()
			 }
			 Leave = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
			 Enter=entity
			 Faction=string
			 IsInside=int
			 Leave=entity
			 Sender=entity
		 }
	 }
	 LeftArea()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 Properties = {
		 MultiplayerOptions = {
			 bNetworked=false
			 bPerPlayer=0
		 }
		 PlaySequence=
		 ScriptCommand=
		 bCameraOnly=0
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInVehicleOnly=0
		 bOnlyLocalPlayer=0
		 bOnlyPlayers=1
		 bSaved_by_game=true
		 bTriggerOnce=1
		 esFactionFilter=
	 }
	 Server = {
		 OnEnterArea()
		 OnLeaveArea()
	 }
	 Trigger()
	 __client_dispatch = {
		 [02]=ClLeave:Eb
		 [01]=ClEnter:Eb
		 ClEnter()
		 ClLeave()
		 __validated=false
	 }
	 __server_dispatch = {
		 __validated=false
	 }
 }
 AreaUnion = {
	 Editor = {
		 Icon=areaunion.bmp
		 IconOnTop=1
	 }
	 Properties = {
		 Label=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 sWH_AI_EntityCategory=
	 }
	 type=AreaUnion
 }
 AssignPFPropertiesToPathType()
 AudioAreaAmbience = {
	 CliSrv_OnInit()
	 Client = {
		 OnAudioListenerEnterArea()
		 OnAudioListenerEnterNearArea()
		 OnAudioListenerLeaveArea()
		 OnAudioListenerLeaveNearArea()
		 OnAudioListenerMoveNearArea()
		 OnAudioListenerProceedFadeArea()
		 OnBindThis()
		 OnHidden()
		 OnInit()
		 OnShutDown()
		 OnSoundDone()
		 OnUnBindThis()
		 OnUnHidden()
	 }
	 Editor = {
		 Icon=AudioAreaAmbience.bmp
		 Model=Editor/Objects/Sound.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Done=bool
		 }
	 }
	 OnLoad()
	 OnPostLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 Play()
	 Properties = {
		 audioEnvironmentEnvironment=
		 audioRTPCGlobalRtpc=
		 audioRTPCRtpc=
		 audioTriggerPlayTrigger=
		 audioTriggerStopTrigger=
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 eiSoundObstructionType=1
		 fEnvironmentDistance=5
		 fRtpcDistance=5
	 }
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 Stop()
	 UpdateFadeValue()
	 _DisableObstruction()
	 _LookupControlIDs()
	 _LookupObstructionSwitchIDs()
	 _SetObstruction()
	 _UpdateParameters()
	 _UpdateRtpc()
	 bIsHidden=false
	 bIsPlaying=false
	 bOriginalEnabled=true
	 fFadeOnUnregister=1
	 fFadeValue=0
	 nState=0
	 type=AudioAreaAmbience
 }
 AudioAreaEntity = {
	 CliSrv_OnInit()
	 Client = {
		 OnAudioListenerEnterArea()
		 OnAudioListenerEnterNearArea()
		 OnAudioListenerLeaveArea()
		 OnAudioListenerLeaveNearArea()
		 OnAudioListenerMoveNearArea()
		 OnAudioListenerProceedFadeArea()
		 OnBindThis()
		 OnInit()
		 OnShutDown()
		 OnUnBindThis()
	 }
	 Editor = {
		 Icon=AudioAreaEntity.bmp
		 Model=Editor/Objects/Sound.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 FadeValue=float
			 OnFarToNear=bool
			 OnInsideToNear=bool
			 OnNearToFar=bool
			 OnNearToInside=bool
		 }
	 }
	 OnLoad()
	 OnPostLoad()
	 OnPropertyChange()
	 OnSave()
	 OnSpawn()
	 Properties = {
		 audioEnvironmentEnvironment=
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 eiSoundObstructionType=1
		 fEnvironmentDistance=5
		 fFadeDistance=5
		 fRtpcDistance=5
	 }
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 UpdateFadeValue()
	 _ActivateOutput()
	 _DisableObstruction()
	 _LookupObstructionSwitchIDs()
	 _SetObstruction()
	 _UpdateParameters()
	 fFadeOnUnregister=1
	 fFadeValue=0
	 nState=0
	 type=AudioAreaEntity
 }
 AudioAreaRandom = {
	 CliSrv_OnInit()
	 Client = {
		 OnAudioListenerEnterArea()
		 OnAudioListenerEnterNearArea()
		 OnAudioListenerLeaveArea()
		 OnAudioListenerLeaveNearArea()
		 OnAudioListenerMoveNearArea()
		 OnAudioListenerProceedFadeArea()
		 OnBindThis()
		 OnHidden()
		 OnInit()
		 OnMove()
		 OnShutDown()
		 OnTimer()
		 OnUnBindThis()
		 OnUnHidden()
	 }
	 Editor = {
		 Icon=AudioAreaRandom.bmp
		 Model=Editor/Objects/Sound.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
	 }
	 OnLoad()
	 OnPostLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 Play()
	 Properties = {
		 audioRTPCRtpc=
		 audioTriggerPlayTrigger=
		 audioTriggerStopTrigger=
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bMoveWithEntity=false
		 bSaved_by_game=false
		 eiSoundObstructionType=1
		 fMaxDelay=2
		 fMinDelay=1
		 fRadiusRandom=10
		 fRtpcDistance=5
	 }
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 Stop()
	 UpdateFadeValue()
	 _GenerateOffset()
	 _LookupControlIDs()
	 _LookupObstructionSwitchIDs()
	 _SetObstruction()
	 _UpdateParameters()
	 _UpdateRtpc()
	 bHasMoved=false
	 bIsHidden=false
	 bIsPlaying=false
	 bOriginalEnabled=true
	 fFadeValue=0
	 nState=0
	 type=AudioAreaRandom
 }
 AudioTriggerSpot = {
	 Client = {
		 OnHidden()
		 OnInit()
		 OnMove()
		 OnShutDown()
		 OnSoundDone()
		 OnTimer()
		 OnUnHidden()
	 }
	 Editor = {
		 Icon=Sound.bmp
		 Model=Editor/Objects/Sound.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Done=bool
		 }
	 }
	 OnLoad()
	 OnPostLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnTransformFromEditorDone()
	 Play()
	 Properties = {
		 audioTriggerPlayTriggerName=
		 audioTriggerStopTriggerName=
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bPlayOnX=false
		 bPlayOnY=false
		 bPlayOnZ=false
		 bPlayRandom=false
		 bSaved_by_game=false
		 bSerializePlayState=true
		 bTriggerAreasOnMove=false
		 eiSoundObstructionType=1
		 fMaxDelay=2
		 fMinDelay=1
		 fRadiusRandom=10
	 }
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 Stop()
	 _GenerateOffset()
	 _Init()
	 _LookupObstructionSwitchIDs()
	 _LookupTriggerIDs()
	 _SetObstruction()
	 bHasMoved=false
	 bIsHidden=false
	 bIsPlaying=false
	 bOriginalEnabled=true
	 bWasPlaying=false
 }
 AudioUtils = {
	 LookupAudioEnvironmentID()
	 LookupObstructionSwitchAndStates()
	 LookupRtpcID()
	 LookupSwitchID()
	 LookupSwitchStateIDs()
	 LookupTriggerID()
	 PlayAudioTrigger()
	 PlayAudioTriggerWUID()
	 SetAudioTriggerParam()
	 SetAudioTriggerParamWUID()
	 sObstructionCalcSwitchName=ObstrOcclCalcType
	 sObstructionStateNames = {
		 [02]=SingleRay
		 [01]=Ignore
		 [03]=MultiRay
	 }
 }
 BEHAVIOR_FAILED=3
 BEHAVIOR_FINISHED=2
 BEHAVIOR_INTERRUPTED=1
 BEHAVIOR_STARTED=0
 BODYPOS_CROUCH=1
 BODYPOS_PRONE=2
 BODYPOS_RELAX=3
 BODYPOS_STAND=0
 BODYPOS_STEALTH=4
 BOOL=66
 BRANCH_ALWAYS=46
 Barber = {
	 Commit()
	 Create()
	 Destroy()
	 Revert()
	 TryBeard()
	 TryHair()
 }
 Barbershop = {
	 ChooseBeard()
	 ChooseHair()
	 Cleanup()
	 Create()
	 beardGUIDs = {
		 [04]=413b142e-40fb-074d-44b7-1fa4ea3de9b1
		 [01]=4f8c154f-dee8-8e81-627c-45972dba72a7
		 [03]=47bb7d4d-08fa-dbde-6781-8c9618000a96
		 [02]=40645b14-c22c-b264-bd6b-844193a30e80
		 [05]=4b8b7289-41e9-2785-a0b9-1651465445a5
	 }
	 chosenBeardGUID=
	 chosenHairGUID=
	 hairGUIDs = {
		 [02]=4595b124-5c14-1c0c-fc61-e9ee0de417b2
		 [04]=4bc51034-3ad5-0050-f5c1-ba11046ed4ba
		 [01]=4fc88899-0dbf-f14f-9a86-444e0f4c2185
		 [03]=4a2ee070-1f7c-1855-0e98-3ec5c2e9d9b2
	 }
 }
 BasicAI = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=1e+06
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathLookAhead=2
		 pathRadius=0.3
		 pathRegenIntervalDuringTrace=-1
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 walkSpeed=2
	 }
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Expose()
	 GetReturnToPoolWeight()
	 IsAIControlled()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 Properties = {
		 aicharacter_character=
		 bInvulnerable=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileModel=
		 guidSharedSoulId=
		 nModelVariations=0
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 ResetAIParameters()
	 Server = {
		 OnInit()
	 }
	 ai=1
 }
 BasicAIActions = {
	 ActorCanTalk()
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnStealthKill()
	 OnTalk()
	 TestActorCanTalk()
 }
 BasicAITable = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=1e+06
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathLookAhead=2
		 pathRadius=0.3
		 pathRegenIntervalDuringTrace=-1
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 walkSpeed=2
	 }
	 Properties = {
		 aicharacter_character=
		 bInvulnerable=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileModel=
		 guidSharedSoulId=
		 nModelVariations=0
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
 }
 BasicActor = {
	 AddLootAction()
	 GetDogActions()
	 InitialSetup()
	 InteractorPriority=2
	 IsChatUsable=0
	 IsDogUsable=1
	 OnDogRequest()
	 OnSpawn()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys
			 footstepEffect=footsteps
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 bIsDummy=false
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 physicMassMult=1
	 }
	 Reset()
	 ResetCommon()
	 ReviveInEditor()
	 SetActorModel()
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 BasicActorParams = {
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 BasicAnimal = {
	 AddAnimalLootAction()
	 AddLootAction()
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 InitialSetup()
	 InteractorPriority=2
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 OnButcher()
	 OnDogRequest()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys
			 footstepEffect=footsteps
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 bCanHoldInformation=false
		 bIsDummy=false
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 physicMassMult=1
	 }
	 Reset()
	 ResetCommon()
	 ReviveInEditor()
	 SetActorModel()
	 collisionClass=2.09715e+06
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 Battlement = {
	 Editor = {
		 Icon=
		 ShowBounds=1
	 }
	 ExportToGame()
	 IsClosed()
	 IsShapeOnly()
	 Properties = {
		 BattlementMerlonWidth=0
		 BattlementSlotWidth=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 esWallType=wall
		 vectorPoint0 = {
			 x=0
			 y=0
			 z=0
		 }
		 vectorPoint1 = {
			 x=0
			 y=0
			 z=0
		 }
	 }
	 ShapeMaxPoints()
	 ShapeMinPoints()
 }
 Bed = {
	 Client = {
		 OnInit()
		 OnLevelLoaded()
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetActions()
	 GetReadingQuality()
	 GetSleepQuality()
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 IsUsableByPlayer()
	 MarkUsedByNPC()
	 OnEnablePhysics()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Bed = {
			 esReadingQuality=none
			 esSleepQuality=low
		 }
		 Body = {
			 guidBodyPrestId=0
			 guidClothingPresetId=0
		 }
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=true
			 bRigidBody=true
		 }
		 Script = {
			 Misc=
			 esBedTypes=bench
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bInteractiveCollisionClass=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=false
		 bUsable=false
		 esFaction=
		 fUsabilityDistance=1.75
		 guidSmartObjectType=
		 object_Model=Objects/props/furniture/beds/bed_cottage_01.cgf
		 sSittingTagGlobal=sittingNoTable
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 Server = {
		 OnInit()
	 }
	 SetFromProperties()
	 SetInteractiveCollisionType()
	 SetupModel()
 }
 BedTrigger = {
	 CanSleep()
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 GetLinkedSmartObject()
	 GetOwner()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsLegal()
	 IsLegalHold()
	 IsLegalImpl()
	 IsLyingAction()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnNPCStateSearchDone()
	 OnPropertyChange()
	 OnReset()
	 OnResourcesHosted()
	 OnResourcesHostingInterrupted()
	 OnSave()
	 OnSpawn()
	 OnTriggerPoint()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=@ui_hud_use_item
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=Stance
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=sitting
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=None
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Birds = {
	 Animations = {
		 [01]=fly_loop
		 [02]=take_off
		 [05]=landing
		 [04]=idle_loop
		 [03]=walk_loop
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_AttractTo()
	 Event_Deactivate()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 AttractTo = {
				 [02]=Vec3
				 [01]()
			 }
			 Deactivate = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 AttractEnd=bool
			 Deactivate=bool
		 }
	 }
	 InitFlock()
	 MapVisMask=0
	 OnAttractPointReached()
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 bInvulnerable=true
			 gravity_at_death=-9.81
			 nCount=4
			 object_Model=objects/characters/animals/birds/boids_bird_a.cgf
		 }
		 Flocking = {
			 AttractDistMax=50
			 AttractDistMin=30
			 FactorAlign=1
			 FactorCohesion=2
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=false
		 }
		 Ground = {
			 FactorAlign=0
			 FactorCohesion=3
			 FactorOrigin=10
			 FactorSeparation=0.1
			 HeightOffset=0
			 OnGroundIdleDurationMax=3.2
			 OnGroundIdleDurationMin=1.6
			 OnGroundWalkDurationMax=6
			 OnGroundWalkDurationMin=4
			 WalkSpeed=0
			 WalkToIdleDuration=3
		 }
		 Movement = {
			 FactorAvoidLand=100
			 FactorHeight=0.6
			 FactorOrigin=1
			 FactorTakeOff=10
			 FlightTime=20
			 HeightMax=60
			 HeightMin=53
			 LandDecelerationHeight=5
			 MaxAnimSpeed=1
			 SpeedMax=2
			 SpeedMin=1
		 }
		 Options = {
			 AnimationDist=0
			 PickableMessage=
			 Radius=25
			 VisibilityDist=200
			 bActivate=true
			 bFollowPlayer=false
			 bNoLanding=true
			 bObstacleAvoidance=true
			 bPickableWhenAlive=false
			 bPickableWhenDead=true
			 bSpawnFromPoint=false
			 bStartOnGround=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Birds
 }
 BirdsTakeoff = {
	 ApplyPreset()
	 CacheResources()
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 EnteredSoundArea()
	 GetEditorModel()
	 IsDebugEnabled()
	 IsOffCooldown()
	 LeftSoundArea()
	 OnInit()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 Settings = {
			 Audio = {
				 snd_idle=
				 snd_scared=
			 }
			 ManualValues = {
				 ParticleEffect=
				 bIgnoreDaytimeCheck=false
				 bSpawnAwayFromPlayer=true
				 esBirdsTakeoffType=AwayFromPlayer
				 fMaxRandomSpread=1
				 fSpeedScale=1
				 iCooldownSeconds=240
			 }
			 esBirdsTakeoffPreset=None
		 }
		 bDebugEnabled=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=861d5258-0d30-4638-be5e-2c6f02b3d187
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 SpawnBirds()
	 _ParticleSlot=1
	 _SpawnParticle()
	 _playSound()
	 _stopSound()
	 bSoundIdleIsPlaying=false
	 iLastSpawnGameTime=-1
 }
 Blacksmithing = {
	 CanUse()
	 StartMinigame()
 }
 Boar = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_pig_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_pig_database.adb
	 CombatOpponentMnTag=oppPig
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_boar
			 footstepEffect=footsteps_boar
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=boar
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=objects/characters/animals/boar/boar.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.8
		 pos = {
			 x=0
			 y=0.15
			 z=0.6
		 }
		 posCarcass = {
			 x=0.25
			 y=0.1
			 z=0.25
		 }
		 radius=0.25
	 }
	 collisionClass=524288
	 defaultSoulArchetype=Boar
	 defaultSoulClass=pig
	 gameParams = {
		 backwardMultiplier=0.5
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 relaxed = {
				 heightCollider=0.4
				 heightPivot=0
				 name=relaxed
				 size = {
					 x=0.1
					 y=0
					 z=0.1
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=100
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=100
		 stiffness_scale=73
	 }
 }
 Boid = {
	 Client = {
		 OnHit()
	 }
	 GetUsableMessage()
	 IsUsable()
	 OnPickup()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 Server = {
		 OnHit()
	 }
	 type=Boid
 }
 Boids = {
	 CreateFlock()
	 EnableFlock()
	 FLOCK_BIRDS=0
	 FLOCK_BUGS=2
	 FLOCK_CHICKENS=3
	 FLOCK_FISH=1
	 FLOCK_FROGS=4
	 FLOCK_RATS=6
	 FLOCK_TURTLES=5
	 OnBoidHit()
	 SetAttractionPoint()
	 SetFlockParams()
	 SetFlockPercentEnabled()
 }
 Book = {
	 AnimClose=close
	 AnimOpen=open
	 AnimPageNext=list_next
	 AnimPagePrev=list_prev
	 ContentChanged=false
	 ContentImages=
	 ContentLayout=0
	 ContentScramble=1
	 ContentText=
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetLinkedSmartObject()
	 GetUsableMessage()
	 GetUsableName()
	 GfxName=GeneralBook
	 InteractorPriority=3
	 IsCrossCenteringEnabled()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 Model=objects/characters/assets/book/book_01.cdf
	 OnEnablePhysics()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 PageAnimationTransitionTime=0.4
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bIsDirectlyReadable=false
		 bNotPickable=false
		 bSaved_by_game=true
		 fUsabilityDistance=1.75
		 object_Model=
		 soclasses_SmartObjectClass=
	 }
	 RegisterAiListener()
	 Reset()
	 ResetChild()
	 SetInteractiveCollisionType()
	 SetUsable()
	 SetupTrigger()
	 SubMtlId=1
	 TexSlot=11
	 UnregisterAiListener()
	 Use()
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.1
	 nUserId=0
	 npcOnly=false
 }
 BreakableObject = {
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_Dead()
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hit()
	 Event_MakeInvulnerable()
	 Event_MakeVulnerable()
	 Event_OnBreak()
	 Event_OnFirstBreak()
	 Event_ResetHealth()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 MakeInvulnerable = {
				 [01]()
				 [02]=any
			 }
			 MakeVulnerable = {
				 [01]()
				 [02]=any
			 }
			 OnBreak = {
				 [02]=bool
				 [01]()
			 }
			 OnFirstBreak = {
				 [02]=bool
				 [01]()
			 }
			 ResetHealth = {
				 [01]()
				 [02]=any
			 }
		 }
		 Outputs = {
			 Dead=bool
			 Health=float
			 Hit=bool
			 OnBreak=bool
			 OnFirstBreak=bool
		 }
	 }
	 GetHealthRatio()
	 GetMaxHealth()
	 GetUsableMessage()
	 IsDead()
	 IsInvulnerable()
	 IsUsable()
	 OnLoad()
	 OnPhysicsBreak()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 Health = {
			 MaxHealth=500
			 bInvulnerable=false
			 bOnlyEnemyFire=true
		 }
		 PhysicsBreakable = {
			 GroundPlanes = {
				 negativeX=0
				 negativeY=0
				 negativeZ=0
				 positiveX=0
				 positiveY=0
				 positiveZ=0.05
			 }
			 crack_weaken=0.5
			 max_bend_torque=0.01
			 max_pull_force=0.01
			 max_push_force=0.01
			 max_shift_force=0.01
			 max_twist_torque=0.01
		 }
		 PhysicsBuoyancy = {
			 water_damping=1.5
			 water_density=1
			 water_resistance=0
		 }
		 PhysicsSimulation = {
			 damping=0
			 max_time_step=0.01
			 sleep_speed=0.04
		 }
		 UseMessage=
		 bExported_to_game=true
		 bExported_to_test=true
		 bPickable=false
		 bResting=0
		 bRigidBody=false
		 bSaved_by_game=true
		 bUsable=false
		 esFaction=
		 fDensity=5000
		 fMass=-1
		 nBreakableType=0
		 objModel=objects/default/primitive_box.cgf
	 }
	 RegisterWithAI()
	 ResetOnUsed()
	 Server = {
		 OnHit()
	 }
	 SetGroundPlane()
	 SetInvulnerability()
	 SetupHealthProperties()
 }
 Breakage = {
	 IsUsable()
 }
 CCCP()
 CHECKTYPE_MIN_DISTANCE=0
 CHECKTYPE_MIN_ROOMSIZE=1
 CHECK_TIMER=0
 CIPileBind = {
	 CanDeposit()
	 CanPackAndPick()
	 CanPickUp()
	 Deposit()
	 PickUp()
 }
 COVER_HIDE=0
 COVER_UNHIDE=1
 CRYPARTICLE_ONE_TIME_SPAWN=2
 CRYPARTICLE_RAIN_MODE=1
 Calendar = {
	 GetGameTime()
	 GetWorldDay()
	 GetWorldDayOfWeek()
	 GetWorldHourOfDay()
	 GetWorldTime()
	 GetWorldTimeRatio()
	 IsFakedTimeOfDay()
	 IsNightTimeOfDay()
	 IsWorldTimePaused()
	 SetFakeTimeOfDay()
	 SetWorldTime()
	 SetWorldTimeRatio()
	 UnfakeTimeOfDay()
 }
 CameraShake = {
	 Editor = {
		 Icon=shake.bmp
	 }
	 Event_Shake()
	 FlowEvents = {
		 Inputs = {
			 Shake = {
				 [02]=bool
				 [01]()
			 }
		 }
	 }
	 OnPropertyChange()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 fDuration=2
		 fFrequency=0.5
		 fRadius=10
		 fStrength=1
		 vector_Position = {
			 x=0
			 y=0
			 z=0
		 }
	 }
 }
 CameraSource = {
	 Editor = {
		 Icon=Camera.bmp
	 }
	 OnInit()
	 Properties = {
		 DialogueCamera = {
			 esDialogueCameraOverrideType=NoOverride
			 iDialogueContextId=-1
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
	 }
 }
 CanMount_Disable=0
 CanMount_DisableEncumbered=2
 CanMount_Enable=1
 CaptionObject = {
	 Editor = {
		 Icon=Comment.bmp
		 IconOnTop=1
	 }
	 GetActions()
	 GetUsableName()
	 IsCrossCenteringEnabled()
	 LoadModel()
	 OnLoad()
	 OnPropertyChange()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 Scale = {
			 x=1
			 y=1
			 z=1
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=objects/editor/box_nodraw.cgf
		 sFlagMessage=
		 sWH_AI_EntityCategory=
	 }
	 Reset()
	 bDiscovered=false
 }
 CarryItemPile = {
	 Editor = {
		 Icon=mine.bmp
	 }
	 GetActions()
	 OnDeposit()
	 OnPickUp()
	 Properties = {
		 audioSwitchPackSoundOverride=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 guidCarryItemPileId=0
		 guidItemClassId=0
		 guidSmartObjectType=
		 nCapacity=1
		 nNumberOfItems=0
		 sDepositAnimTagOverride=
		 sHintDeposit=@ui_deposit_item
		 sHintPackAndPick=@ui_packandpick_item
		 sHintPickup=@ui_pickup_item
		 sMaterialOverride=
		 sPickupAnimTagOverride=
		 vInteractBoxOffset = {
			 x=0
			 y=0
			 z=0
		 }
		 vInteractSize = {
			 x=0.5
			 y=0.5
			 z=0.5
		 }
	 }
 }
 CarryableItem = {
	 GetActions()
	 GetUsableName()
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 OnEnablePhysics()
	 OnLevelLoaded()
	 OnPickUp()
	 OnPropertyChange()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bSaved_by_game=true
	 }
	 SetInteractiveCollisionType()
	 Use()
	 npcOnly=false
 }
 CarryableItemBind = {
	 CanPickUp()
	 PickUp()
 }
 CartStash = {
	 AssignInventory()
	 Close()
	 DoPlayAnimation()
	 Editor = {
		 Icon=stash.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Close()
	 Event_Hide()
	 Event_Lock()
	 Event_Open()
	 Event_StartLockPicking()
	 Event_UnHide()
	 Event_Unlock()
	 FlowEvents = {
		 Inputs = {
			 Close = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Lock = {
				 [02]=bool
				 [01]()
			 }
			 Open = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Unlock = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Close=bool
			 Hide=bool
			 Lock=bool
			 Open=bool
			 UnHide=bool
			 Unlock=bool
		 }
	 }
	 GenerateLockData()
	 GetActions()
	 GetInventoryToOpen()
	 GetLockDifficulty()
	 GetUsableEvent()
	 IsUsable()
	 IsUsableHold()
	 IsUsableMsgChanged()
	 LoadOriginalModel()
	 LoadPhaseModel()
	 Lock()
	 LockType=cartChest
	 NeedSerialize()
	 OnClose()
	 OnInventoryClosed()
	 OnItemAdded()
	 OnItemRemoved()
	 OnLoad()
	 OnLockpicked()
	 OnOpen()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 Open()
	 PhysicalizeThis()
	 Properties = {
		 Animation = {
			 anim_Close=close
			 anim_Open=open
			 bOpenOnly=false
		 }
		 Database = {
			 bReadOnly=false
			 iMinimalShopItemPrice=0
			 nRestockPeriodDays=7
			 sGeneratedInventory=
			 sInventoryPreset=
		 }
		 Lock = {
			 bCanLockPick=true
			 bCanUnlockWithDynamicKey=true
			 bLockDifficultyOverride=false
			 bLockFancinessOverride=false
			 bLocked=false
			 bSendMessage=false
			 esLockFanciness=Common
			 fLockDifficulty=1
			 guidItemClassId=
		 }
		 Phase = {
			 esStashPhaseChangeEvent=Never
			 object_PhaseModel=
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 Script = {
			 Misc=
			 bAllowUsageInCombatDanger=true
			 bTutorial=false
			 fTutorialMaxThievery=15
			 fTutorialMaxThieveryOpenLimit=10
		 }
		 Sounds = {
			 snd_Close=
			 snd_Open=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractableThroughCollision=false
		 bOwnedByHome=true
		 bSaved_by_game=true
		 bSkipAngleCheck=false
		 esChestContextLabel=none
		 fUseAngle=0.7
		 fUseDistance=1.5
		 fUseLockpickAngle=0.8
		 fUseLockpickDistance=1.5
		 fUseZOffset=0
		 guidSmartObjectType=
		 object_Model=objects/manmade/common_furniture/chests/chest-rustic-a-wagon.cga
		 sOpenMessage=@ui_open_stash
		 sPickPlaceAnimTag=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 ResetAnimationWithActivation()
	 Server = {
		 OnUpdate()
	 }
	 SetBeingUsedByNPC()
	 SetBeingUsedByPlayer()
	 SetInteractive()
	 Unlock()
	 UsesStealUiPrompt()
	 __super = {
		 AssignInventory()
		 Close()
		 DoPlayAnimation()
		 Editor = {
			 Icon=stash.bmp
			 IconOnTop=1
			 ShowBounds=1
		 }
		 Event_Close()
		 Event_Hide()
		 Event_Lock()
		 Event_Open()
		 Event_StartLockPicking()
		 Event_UnHide()
		 Event_Unlock()
		 FlowEvents = {
			 Inputs = {
				 Close = {
					 [02]=bool
					 [01]()
				 }
				 Hide = {
					 [02]=bool
					 [01]()
				 }
				 Lock = {
					 [02]=bool
					 [01]()
				 }
				 Open = {
					 [02]=bool
					 [01]()
				 }
				 UnHide = {
					 [02]=bool
					 [01]()
				 }
				 Unlock = {
					 [02]=bool
					 [01]()
				 }
			 }
			 Outputs = {
				 Close=bool
				 Hide=bool
				 Lock=bool
				 Open=bool
				 UnHide=bool
				 Unlock=bool
			 }
		 }
		 GenerateLockData()
		 GetActions()
		 GetInventoryToOpen()
		 GetLockDifficulty()
		 GetUsableEvent()
		 IsUsable()
		 IsUsableHold()
		 IsUsableMsgChanged()
		 LoadOriginalModel()
		 LoadPhaseModel()
		 Lock()
		 LockType=chest
		 NeedSerialize()
		 OnClose()
		 OnInventoryClosed()
		 OnItemAdded()
		 OnItemRemoved()
		 OnLoad()
		 OnLockpicked()
		 OnOpen()
		 OnPropertyChange()
		 OnReset()
		 OnSave()
		 OnSpawn()
		 OnUsed()
		 OnUsedHold()
		 Open()
		 PhysicalizeThis()
		 Properties = {
			 Animation = {
				 anim_Close=close
				 anim_Open=open
				 bOpenOnly=false
			 }
			 Database = {
				 bReadOnly=false
				 iMinimalShopItemPrice=0
				 nRestockPeriodDays=7
				 sGeneratedInventory=
				 sInventoryPreset=
			 }
			 Lock = {
				 bCanLockPick=true
				 bCanUnlockWithDynamicKey=true
				 bLockDifficultyOverride=false
				 bLockFancinessOverride=false
				 bLocked=false
				 bSendMessage=false
				 esLockFanciness=Common
				 fLockDifficulty=1
				 guidItemClassId=
			 }
			 Phase = {
				 esStashPhaseChangeEvent=Never
				 object_PhaseModel=
			 }
			 Physics = {
				 Density=-1
				 Mass=-1
				 bPhysicalize=true
				 bPushableByPlayers=false
				 bRigidBody=true
			 }
			 Script = {
				 Misc=
				 bAllowUsageInCombatDanger=true
				 bTutorial=false
				 fTutorialMaxThievery=15
				 fTutorialMaxThieveryOpenLimit=10
			 }
			 Sounds = {
				 snd_Close=
				 snd_Open=
			 }
			 bExported_to_game=true
			 bExported_to_test=true
			 bInteractableThroughCollision=false
			 bOwnedByHome=true
			 bSaved_by_game=true
			 bSkipAngleCheck=false
			 esChestContextLabel=none
			 fUseAngle=0.7
			 fUseDistance=2.5
			 fUseLockpickAngle=0.8
			 fUseLockpickDistance=2
			 fUseZOffset=0
			 guidSmartObjectType=
			 object_Model=objects/characters/assets/chest/chest_fancy_b.cdf
			 sOpenMessage=@ui_open_stash
			 sPickPlaceAnimTag=
			 sWH_AI_EntityCategory=
			 soclass_SmartObjectHelpers=
		 }
		 Reset()
		 ResetAnimationWithActivation()
		 Server = {
			 OnUpdate()
		 }
		 SetBeingUsedByNPC()
		 SetBeingUsedByPlayer()
		 SetInteractive()
		 Unlock()
		 UsesStealUiPrompt()
		 bFirstUpdateAfterResetAnimation=false
		 bLocked=false
		 bNeedUpdate=0
		 bNoAnims=0
		 bOpenAfterUnlock=0
		 bOpened=0
		 bUseSameAnim=0
		 bUseableMsgChanged=0
		 fTutorialOpenCount=0
		 inventoryId=0
		 nDirection=-1
		 nSoundId=0
		 nUserId=0
		 objectPhaseChanged=false
	 }
	 bFirstUpdateAfterResetAnimation=false
	 bLocked=false
	 bNeedUpdate=0
	 bNoAnims=0
	 bOpenAfterUnlock=0
	 bOpened=0
	 bUseSameAnim=0
	 bUseableMsgChanged=0
	 fTutorialOpenCount=0
	 inventoryId=0
	 nDirection=-1
	 nSoundId=0
	 nUserId=0
	 objectPhaseChanged=false
 }
 CatHolder = {
	 Editor = {
		 Icon=cat.bmp
		 IconOnTop=0
	 }
	 Properties = {
		 Model=Objects/characters/animals/cat/cat.cdf
		 RunAfterSpawn=false
		 SpawnDayOfWeek=0
		 SpawnWeekLength=7
		 bExported_to_game=true
		 bExported_to_test=true
		 bLying=false
		 bSaved_by_game=true
		 esIdlePose=Sitting
	 }
 }
 CatWaypoint = {
	 Editor = {
		 Icon=Step.bmp
		 IconOnTop=0
	 }
	 Properties = {
		 bExported_to_game=false
		 bExported_to_test=true
		 bFollowTerrain=false
		 bIsJump=false
		 bSaved_by_game=true
	 }
 }
 CattleBull = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=1.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_cow_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_cow_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Cow
			 footstepEffect=footsteps_Cow
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=cattle_bull
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/cow/cow.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=1.6
		 pos = {
			 x=0
			 y=0.35
			 z=0.9
		 }
		 posCarcass = {
			 x=0.2
			 y=0.35
			 z=0.16
		 }
		 radius=0.35
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=CattleBull
	 defaultSoulClass=cattle_bull
	 gameParams = {
		 backwardMultiplier=0.5
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=500
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=500
		 stiffness_scale=73
	 }
	 simplifiedRootRotation=false
 }
 CattleCow = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=1.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_cow_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_cow_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 ProceduralContextLook = {
		 fadeInSeconds=1
		 fadeOutMinDistance=0
		 fadeOutSeconds=1
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Cow
			 footstepEffect=footsteps_Cow
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=cattle_cow
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/cow/cow.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=1.6
		 pos = {
			 x=0
			 y=0.35
			 z=0.9
		 }
		 posCarcass = {
			 x=0.2
			 y=0.35
			 z=0.16
		 }
		 radius=0.35
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=CattleCow
	 defaultSoulClass=cattle_cow
	 gameParams = {
		 backwardMultiplier=0.5
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=500
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=500
		 stiffness_scale=73
	 }
	 simplifiedRootRotation=false
 }
 Chair = {
	 Client = {
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=true
			 bRigidBody=true
		 }
		 Script = {
			 Misc=
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=false
		 bUsable=false
		 bUsable_by_player=true
		 object_Model=objects/props/furniture/chairs_benches/tripod_chair_01.cgf
		 sWH_AI_EntityCategory=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 SetFromProperties()
	 SetupModel()
 }
 CharacterAttachHelper = {
	 Client = {
		 OnBindThis()
		 OnUnBindThis()
	 }
	 DestroyAttachment()
	 Editor = {
		 Icon=Magnet.bmp
	 }
	 MakeAttachment()
	 OnBindThis()
	 OnInit()
	 OnPropertyChange()
	 OnShutDown()
	 OnStartGame()
	 OnUnBindThis()
	 Properties = {
		 BoneName=Bip01 Head
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 Server = {
		 OnBindThis()
		 OnUnBindThis()
	 }
 }
 ChatToAll=2
 ChatToTarget=0
 ChatToTeam=1
 Chickens = {
	 Animations = {
		 [08]=hen_run_fwd
		 [01]=hen_walk_fwd
		 [04]=hen_idle_03_eating
		 [06]=throw
		 [02]=hen_idle_01_look_around
		 [03]=hen_idle_02_look_around
		 [07]=rooster_crowing
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 SpecialModel=Data/objects/characters/animals/rooster/rooster.cdf
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=10
			 object_Model=objects/characters/animals/hen_v2/hen_v2.cdf
			 object_Model1=objects/characters/animals/hen_v2/hen_v2_brown.cdf
			 object_Model2=objects/characters/animals/hen_v2/hen_v2_black.cdf
			 object_Model3=objects/characters/animals/hen_v2/hen_v2_speckled.cdf
			 object_Model4=objects/characters/animals/hen_v2/hen_v2_white.cdf
		 }
		 Flocking = {
			 AttractDistMax=20
			 AttractDistMin=5
			 FactorAlign=1
			 FactorCohesion=1
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=15
			 FactorHeight=1
			 FactorOrigin=0.3
			 HeightMax=1
			 HeightMin=0
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=30
			 RunAnimationSpeed=2
			 RunThreshold=1.1
			 SpeedMax=0.4
			 SpeedMin=0.4
			 SpeedScared=2
			 WalkAnimationSpeed=0.4
		 }
		 Options = {
			 ActiveHoursBegin=4
			 ActiveHoursEnd=21
			 PickableMessage=
			 Radius=6
			 VisibilityDist=40
			 bActivate=true
			 bAvoidWater=true
			 bDisableOnRain=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bOwnedByHome=true
		 bRequiresOwner=true
		 bSaved_by_game=true
		 guidSmartObjectType=def0005e-0000-0000-0000-def00000005e
	 }
	 Sounds = {
		 [03]=b_hen_death
		 [01]=b_hen_idle
		 [02]=b_hen_scared
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 ChickensBrownLight = {
	 Animations = {
		 [08]=hen_run_fwd
		 [01]=hen_walk_fwd
		 [04]=hen_idle_03_eating
		 [06]=throw
		 [02]=hen_idle_01_look_around
		 [03]=hen_idle_02_look_around
		 [07]=rooster_crowing
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
			 }
			 Deactivate = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Deactivate=bool
		 }
	 }
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 SpecialModel=Data/objects/characters/animals/rooster/rooster.cdf
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=10
			 object_Model=objects/characters/animals/hen_v2/hen_v2.cdf
			 object_Model1=objects/characters/animals/hen_v2/hen_v2_brown.cdf
			 object_Model2=objects/characters/animals/hen_v2/hen_v2_black.cdf
			 object_Model3=objects/characters/animals/hen_v2/hen_v2_speckled.cdf
			 object_Model4=objects/characters/animals/hen_v2/hen_v2_white.cdf
		 }
		 Flocking = {
			 AttractDistMax=20
			 AttractDistMin=5
			 FactorAlign=1
			 FactorCohesion=1
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=15
			 FactorHeight=1
			 FactorOrigin=0.3
			 HeightMax=1
			 HeightMin=0
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=30
			 RunAnimationSpeed=2
			 RunThreshold=1.1
			 SpeedMax=0.4
			 SpeedMin=0.4
			 SpeedScared=2
			 WalkAnimationSpeed=0.4
		 }
		 Options = {
			 ActiveHoursBegin=4
			 ActiveHoursEnd=21
			 PickableMessage=
			 Radius=6
			 VisibilityDist=40
			 bActivate=true
			 bAvoidWater=true
			 bDisableOnRain=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bOwnedByHome=true
		 bRequiresOwner=true
		 bSaved_by_game=true
		 guidSmartObjectType=def0005e-0000-0000-0000-def00000005e
	 }
	 Sounds = {
		 [03]=b_hen_death
		 [01]=b_hen_idle
		 [02]=b_hen_scared
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 ChickensWhite = {
	 Animations = {
		 [08]=hen_run_fwd
		 [01]=hen_walk_fwd
		 [04]=hen_idle_03_eating
		 [06]=throw
		 [02]=hen_idle_01_look_around
		 [03]=hen_idle_02_look_around
		 [07]=rooster_crowing
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
			 }
			 Deactivate = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Deactivate=bool
		 }
	 }
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 SpecialModel=Data/objects/characters/animals/rooster/rooster.cdf
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=10
			 object_Model=objects/characters/animals/hen_v2/hen_v2_white.cdf
			 object_Model1=objects/characters/animals/hen_v2/hen_v2_brown.cdf
			 object_Model2=objects/characters/animals/hen_v2/hen_v2_black.cdf
			 object_Model3=objects/characters/animals/hen_v2/hen_v2_speckled.cdf
			 object_Model4=objects/characters/animals/hen_v2/hen_v2_white.cdf
		 }
		 Flocking = {
			 AttractDistMax=20
			 AttractDistMin=5
			 FactorAlign=1
			 FactorCohesion=1
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=15
			 FactorHeight=1
			 FactorOrigin=0.3
			 HeightMax=1
			 HeightMin=0
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=30
			 RunAnimationSpeed=2
			 RunThreshold=1.1
			 SpeedMax=0.4
			 SpeedMin=0.4
			 SpeedScared=2
			 WalkAnimationSpeed=0.4
		 }
		 Options = {
			 ActiveHoursBegin=4
			 ActiveHoursEnd=21
			 PickableMessage=
			 Radius=6
			 VisibilityDist=40
			 bActivate=true
			 bAvoidWater=true
			 bDisableOnRain=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bOwnedByHome=true
		 bRequiresOwner=true
		 bSaved_by_game=true
		 guidSmartObjectType=def0005e-0000-0000-0000-def00000005e
	 }
	 Sounds = {
		 [03]=b_hen_death
		 [01]=b_hen_idle
		 [02]=b_hen_scared
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 ChoppingBlock = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Eff2Spawn()
	 Event_EffPos()
	 Event_EffSpawn()
	 Event_LogEntityId()
	 Event_LogHide()
	 FlowEvents = {
		 Inputs = {
			 Effect2Spawn = {
				 [02]=void
				 [01]()
			 }
			 EffectPos = {
				 [02]=Vec3
				 [01]()
			 }
			 EffectSpawn = {
				 [02]=void
				 [01]()
			 }
			 LogEntityId = {
				 [02]=int
				 [01]()
			 }
			 LogHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 LogVisible=bool
		 }
	 }
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 PhysicalizeThis()
	 Properties = {
		 Cutting = {
			 Effect=particles_woodcutting.cutting.wood_split
			 Effect2=particles_woodcutting.cutting.wood_chip
			 pos = {
				 x=0
				 y=0
				 z=0
			 }
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=objects/props/misc/wood_stock_anim/wood_stock_anim.cgf
		 sWH_AI_EntityCategory=
	 }
	 Reset()
	 RunCuttingEffect()
	 RunCuttingEffect2()
	 m_upDir = {
		 x=1
		 y=0
		 z=0
	 }
 }
 Cloth = {
	 Editor = {
		 Icon=physicsobject.bmp
	 }
	 Event_WindOff()
	 Event_WindOn()
	 FlowEvents = {
		 Inputs = {
			 WindOff = {
				 [02]=bool
				 [01]()
			 }
			 WindOn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 WindOff=bool
			 WindOn=bool
		 }
	 }
	 LookForEntityToAttachTo()
	 OnDamage()
	 OnInit()
	 OnPropertyChange()
	 OnReset()
	 OnShutDown()
	 OnSpawn()
	 Properties = {
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 accuracy=0.05
		 air_resistance=1
		 attach_radius=0
		 bCollideWithPhysical=1
		 bCollideWithPlayers=1
		 bCollideWithStatics=1
		 bCollideWithTerrain=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bRigidCore=0
		 bSaved_by_game=true
		 collision_impulse_scale=1
		 damping=0.3
		 density=200
		 explosion_scale=0.003
		 fileModel=Objects/props/misc/cloth/cloth.cgf
		 friction=0
		 gravity = {
			 x=0
			 y=0
			 z=-9.8
		 }
		 hardness=20
		 impulse_scale=0.02
		 mass=5
		 mass_decay=0
		 max_collision_impulse=160
		 max_iters=20
		 max_safe_step=0.2
		 max_time_step=0.02
		 sleep_speed=0.01
		 thickness=0.06
		 water_resistance=600
		 wind = {
			 x=0
			 y=0
			 z=0
		 }
		 wind_event = {
			 x=0
			 y=10
			 z=0
		 }
		 wind_variance=0.2
	 }
	 Server = {
		 OnStartGame()
		 OnUnHidden()
	 }
	 id_attach_to=-1
	 id_part_attach_to=-1
 }
 Cloud = {
	 CreateCloud()
	 DeleteCloud()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Clouds.bmp
		 Model=Editor/Objects/Particles.cgf
	 }
	 Event_Hide()
	 Event_Show()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Show = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hide=bool
			 Show=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 Properties = {
		 Movement = {
			 bAutoMove=0
			 fFadeDistance=0
			 vector_SpaceLoopBox = {
				 x=2000
				 y=2000
				 z=2000
			 }
			 vector_Speed = {
				 x=0
				 y=0
				 z=0
			 }
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 fScale=1
		 file_CloudFile=Libs/Clouds/Default.xml
	 }
	 SetMovementProperties()
	 type=Cloud
 }
 CombatDebug = {
	 AddAllCombatPerks()
	 AddCombatPerks()
	 AddSkill()
	 AddStat()
	 DebugSkillKey()
	 DebugSwitchWeapons()
	 EnemyArmor=0
	 EnemyProfile=0
	 EnemyWeapon=0
	 IDEnemy=0
	 IDPlayer=0
	 MakeSpawnedTough()
	 PlayerArmor=0
	 PlayerProfile=0
	 PlayerWeapon=0
	 RemoveAllCombatPerks()
	 SetArmorProfile()
	 SetDef()
	 SetDefBack()
	 SetEnv()
	 SetHardcoreCVars()
	 SetSkillProfile()
	 Spawn()
	 SpawnBattle()
	 SpawnBattleOld()
	 SpawnEnemy()
	 SpawnFighters()
	 SpawnFriend()
	 StartLog()
	 StopLog()
	 TestCombat()
	 TestLock()
	 dbgSetV6()
 }
 Comment = {
	 Editor = {
		 Icon=Comment.bmp
		 Model=Editor/Objects/comment.cgf
	 }
	 Event_Hide()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hide=bool
			 UnHide=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnUpdate()
	 Properties = {
		 Text=This is a comment
		 bExported_to_game=true
		 bExported_to_test=true
		 bFixed=false
		 bHidden=false
		 bSaved_by_game=false
		 clrDiffuse = {
			 x=1
			 y=0.5
			 z=0
		 }
		 fMaxDist=100
		 fSize=1.2
		 nCharsPerLine=30
	 }
	 bNoUpdateInGame=1
	 fMaxDistSquared=0
	 hidden=false
	 lineCount=0
 }
 Concept = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bIncludeModConcepts=false
		 bSaved_by_game=true
		 fileConcept=
	 }
 }
 Constraint = {
	 Apply()
	 Editor = {
		 Icon=Magnet.bmp
		 ShowBounds=1
	 }
	 Event_ConstraintBroken()
	 FlowEvents = {
		 Inputs = {
			 ConstraintBroken = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 ConstraintBroken=bool
		 }
	 }
	 OnDestroy()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnTimer()
	 Properties = {
		 Limits = {
			 x_max=0
			 x_min=0
			 yz_max=0
		 }
		 bConstrainFully=1
		 bConstrainToLine=0
		 bConstrainToPlane=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bNoRotation=0
		 bNoSelfCollisions=1
		 bSaved_by_game=true
		 bUseEntityFrame=1
		 damping=0
		 max_bend_torque=0
		 max_pull_force=0
		 radius=0.03
	 }
	 numUpdates=0
 }
 CreateItemTable()
 Crime = {
	 BuildLockpickPromptStrName()
	 DetermineSuspiciousDealReaction()
	 GetSkillcheckLevelFromPrice()
	 GetStatusMultiplier()
	 ProduceAiSoundOnDudePosition()
	 SendCampTrespassChatResult()
	 SendCombatChatResult()
	 SendFriskChatResult()
	 SendFriskDialogResult()
	 SendOffenceChatAction()
	 SendResolveDialogResult()
	 SendSelfhelpChatResult()
	 SendSelfhelpResolveDialogResult()
	 SendSurrenderChatResult()
	 SendSurrenderDialogResult()
 }
 CrimeDebugger = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnReset()
	 OnUpdate()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=43c857b4-032b-844f-3d1b-3cc90d5a2382
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 SetDebugEnabled()
	 SetHighestPerceptionThreshold()
	 _getPerceptionIconPosition()
	 _getPerceptionIconString()
	 bPerceptionDebugEnabled=false
	 fHighestPerceptionThreshold=0
 }
 CryAction = {
	 ActivateEffect()
	 ActivateExtensionForGameObject()
	 AddAngleSignal()
	 AddRangeSignal()
	 AddTargetRangeSignal()
	 BanPlayer()
	 BindGameObjectToNetwork()
	 CacheItemGeometry()
	 CacheItemSound()
	 ClearEntityTags()
	 ClearStaticTag()
	 ConnectToServer()
	 CreateGameObjectForEntity()
	 DestroyRangeSignaling()
	 DisableSignalTimer()
	 DontSyncPhysics()
	 EnableRangeSignaling()
	 EnableSignalTimer()
	 ForceGameObjectUpdate()
	 GetClassName()
	 GetPlayerList()
	 GetServer()
	 GetServerTime()
	 GetWaterInfo()
	 HasAI()
	 IsChannelOnHold()
	 IsChannelSpecial()
	 IsClient()
	 IsGameObjectProbablyVisible()
	 IsGameStarted()
	 IsImmersivenessEnabled()
	 IsRMIServer()
	 IsServer()
	 LoadXML()
	 PauseGame()
	 Persistant2DText()
	 PersistantArrow()
	 PersistantEntityTag()
	 PersistantLine()
	 PersistantSphere()
	 PreLoadADB()
	 RefreshPings()
	 RegisterWithAI()
	 ResetRangeSignaling()
	 ResetSignalTimer()
	 ResetToNormalCamera()
	 SaveXML()
	 SendGameplayEvent()
	 SetAimQueryMode()
	 SetNetworkParent()
	 SetSignalTimerRate()
	 SetViewCamera()
	 SetViewCameraByAngles()
 }
 CutsceneHolder = {
	 Editor = {
		 Icon=CutsceneHolder.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esCutsceneName=
	 }
 }
 DIR_EAST=2
 DIR_NORTH=0
 DIR_SOUTH=1
 DIR_WEST=3
 Database = {
	 GetColumnInfo()
	 GetTableColumnData()
	 GetTableInfo()
	 GetTableLine()
	 LoadTable()
 }
 DatabaseUtils = {
	 LoadTable()
	 LoadTableColumn()
	 LoadTableColumnWithIndex()
	 LoadTableColumns()
	 LoadTableColumnsWithIndex()
	 RemapColumns()
	 RemapSingleColumn()
 }
 DeadBody = {
	 Client = {
		 OnInit()
	 }
	 Client_OnInit()
	 DeadBodyParams = {
		 damping=0.3
		 freefall_damping=0.1
		 lying_damping=1.5
		 lying_mode_ncolls=4
		 lying_sleep_speed=0.065
		 max_time_step=0.025
		 sleep_speed=0.025
	 }
	 Editor = {
		 Icon=DeadBody.bmp
		 IconOnTop=1
	 }
	 Event_Awake()
	 Event_Hide()
	 Event_Hit()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Awake = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Awake=bool
			 Hit=bool
			 Scanned=bool
		 }
	 }
	 HasBeenScanned()
	 OnHit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 PhysParams = {
		 eyeheight=1.7
		 height=1.8
		 lod=1
		 mass=80
		 radius=0.45
		 retain_joint_vel=0
		 sphereheight=1.2
		 stiffness_scale=0
	 }
	 PhysicalizeThis()
	 Properties = {
		 Buoyancy = {
			 water_damping=0
			 water_density=1000
			 water_resistance=1000
		 }
		 Mass=80
		 MaxTimeStep=0.025
		 PoseAnim=
		 Stiffness=0
		 TacticalInfo = {
			 LookupName=
			 bScannable=0
		 }
		 bCollidesWithPlayers=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bExtraStiff=0
		 bNoFriendlyFire=false
		 bPushableByPlayers=false
		 bResting=1
		 bSaved_by_game=true
		 lying_damping=1.5
		 object_Model=objects/characters/humans/male/skeleton/male.cdf
		 soclasses_SmartObjectClass=
	 }
	 Server = {
		 OnDamage()
		 OnHit()
		 OnInit()
	 }
	 Server_OnDamageDead()
	 Server_OnInit()
	 temp_ModelName=
	 type=DeadBody
 }
 DeadBody_Base_Human = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 OnEditorLayerLoaded()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fArm_left=0
				 fArm_right=0
				 fHead=0
				 fLeg_left=0
				 fLeg_right=0
				 fTorso=0
			 }
			 bLootableByPlayer=true
			 bRagdollOnly=false
			 bRagdollOnly_DontPosition=false
			 fAddDirt=0
		 }
	 }
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
 }
 DeadBody_Horse = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 OnEditorLayerLoaded()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fHead=0
				 fLegs=0
				 fTorso=0
			 }
			 bRagdollOnly=false
			 esDeadBody_Horse_Variant=horse_lyingOnLeftSide_01
			 fAddDirt=0
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
 }
 DeadBody_Human = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 OnEditorLayerLoaded()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fArm_left=0
				 fArm_right=0
				 fHead=0
				 fLeg_left=0
				 fLeg_right=0
				 fTorso=0
			 }
			 bLootableByPlayer=true
			 bRagdollOnly=false
			 bRagdollOnly_DontPosition=false
			 esDeadBody_Human_Variant=male_lyingOnBack_01
			 fAddDirt=0
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
 }
 DeadBody_WolfDog = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 OnEditorLayerLoaded()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fTorso=0
			 }
			 esDeadBody_WolfDog_Variant=wolfDog_lyingOnRightSide_01
			 fAddDirt=0
		 }
	 }
	 UpdateData()
	 UpdateGhosts()
	 unstanceName=
 }
 Debris = {
	 Client = {
		 OnPhysicsBreak()
	 }
	 CommonSwitchToMaterial()
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_Activate()
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_SwitchToMaterial1()
	 Event_SwitchToMaterial2()
	 Event_SwitchToMaterialOriginal()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 DisableUsable = {
				 [02]=bool
				 [01]()
			 }
			 EnableUsable = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 MakeInvulnerable = {
				 [02]=any
			 }
			 MakeVulnerable = {
				 [02]=any
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 ResetHealth = {
				 [02]=any
			 }
			 SwitchToMaterial1 = {
				 [02]=bool
				 [01]()
			 }
			 SwitchToMaterial2 = {
				 [02]=bool
				 [01]()
			 }
			 SwitchToMaterialOriginal = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 Dead=bool
			 DisableUsable=bool
			 EnableUsable=bool
			 Health=float
			 Hide=bool
			 Hit=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 OnDamage()
	 OnLoad()
	 OnPhysicsBreak()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 AI = {
			 bUsedAsDynamicObstacle=1
		 }
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 Buoyancy = {
				 water_damping=0
				 water_density=1000
				 water_resistance=1000
			 }
			 CGFPropsOverride = {
				 Constraint = {
					 constraint_collides=
					 constraint_damping=
					 constraint_limit=
					 constraint_maxang=
					 constraint_minang=
				 }
				 Deformable = {
					 explosion_scale=
					 hardness=
					 max_impulse=
					 max_stretch=
					 skin_dist=
					 stiffness=
					 thickness=
				 }
				 Joint = {
					 bend=
					 limit=
					 pull=
					 push=
					 shift=
					 twist=
				 }
				 player_can_break=
			 }
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 ForeignData = {
				 bMovingPlatform=0
			 }
			 Mass=-1
			 Simulation = {
				 bFixedDamping=0
				 bUseSimpleSolver=0
				 damping=0
				 max_time_step=0.02
				 sleep_speed=0.04
			 }
			 bActivateOnDamage=0
			 bCanBreakOthers=0
			 bPhysicalize=true
			 bPushableByPlayers=true
			 bResting=1
			 bRigidBody=true
			 bRigidBodyActive=true
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bDamagesPlayerOnCollisionSP=0
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=false
		 bSerialize=0
		 bUsable=false
		 guidSmartObjectType=
		 object_Model=objects/default/primitive_pyramid.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 Server = {
		 Activated = {
			 OnBeginState()
			 OnDamage()
			 OnPhysicsBreak()
		 }
		 Default = {
			 OnBeginState()
			 OnDamage()
			 OnPhysicsBreak()
		 }
	 }
	 SetFromProperties()
	 SetupModel()
	 States = {
		 [02]=Activated
		 [01]=Default
	 }
	 __super = {
		 Client = {
			 OnPhysicsBreak()
		 }
		 CommonSwitchToMaterial()
		 Editor = {
			 Icon=physicsobject.bmp
			 IconOnTop=1
		 }
		 Event_Activate()
		 Event_DisableUsable()
		 Event_EnableUsable()
		 Event_Hide()
		 Event_Ragdollize()
		 Event_Remove()
		 Event_SwitchToMaterial1()
		 Event_SwitchToMaterial2()
		 Event_SwitchToMaterialOriginal()
		 Event_UnHide()
		 Event_Used()
		 FlowEvents = {
			 Inputs = {
				 Activate = {
					 [02]=bool
					 [01]()
				 }
				 DisableUsable = {
					 [02]=bool
					 [01]()
				 }
				 EnableUsable = {
					 [02]=bool
					 [01]()
				 }
				 Hide = {
					 [02]=bool
					 [01]()
				 }
				 MakeInvulnerable = {
					 [02]=any
				 }
				 MakeVulnerable = {
					 [02]=any
				 }
				 Ragdollize = {
					 [02]=bool
					 [01]()
				 }
				 Remove = {
					 [02]=bool
					 [01]()
				 }
				 ResetHealth = {
					 [02]=any
				 }
				 SwitchToMaterial1 = {
					 [02]=bool
					 [01]()
				 }
				 SwitchToMaterial2 = {
					 [02]=bool
					 [01]()
				 }
				 SwitchToMaterialOriginal = {
					 [02]=bool
					 [01]()
				 }
				 UnHide = {
					 [02]=bool
					 [01]()
				 }
				 Used = {
					 [02]=bool
					 [01]()
				 }
			 }
			 Outputs = {
				 Activate=bool
				 Break=int
				 Dead=bool
				 DisableUsable=bool
				 EnableUsable=bool
				 Health=float
				 Hide=bool
				 Hit=bool
				 Ragdollized=bool
				 Remove=bool
				 UnHide=bool
				 Used=bool
			 }
		 }
		 GetUsableMessage()
		 IsRigidBody()
		 IsUsable()
		 OnDamage()
		 OnLoad()
		 OnPhysicsBreak()
		 OnPropertyChange()
		 OnReset()
		 OnSave()
		 OnSpawn()
		 OnUsed()
		 PhysicalizeThis()
		 Properties = {
			 AI = {
				 bUsedAsDynamicObstacle=1
			 }
			 DmgFactorWhenCollidingAI=1
			 MultiplayerOptions = {
				 bNetworked=false
			 }
			 Physics = {
				 Buoyancy = {
					 water_damping=0
					 water_density=1000
					 water_resistance=1000
				 }
				 CGFPropsOverride = {
					 Constraint = {
						 constraint_collides=
						 constraint_damping=
						 constraint_limit=
						 constraint_maxang=
						 constraint_minang=
					 }
					 Deformable = {
						 explosion_scale=
						 hardness=
						 max_impulse=
						 max_stretch=
						 skin_dist=
						 stiffness=
						 thickness=
					 }
					 Joint = {
						 bend=
						 limit=
						 pull=
						 push=
						 shift=
						 twist=
					 }
					 player_can_break=
				 }
				 CollisionFiltering = {
					 collisionIgnore = {
						 bT_collision_class_articulated=0
						 bT_collision_class_living=0
						 bT_collision_class_particle=0
						 bT_collision_class_soft=0
						 bT_collision_class_terrain=0
						 bT_collision_class_wheeled=0
						 bT_gcc_ai=0
						 bT_gcc_animal=0
						 bT_gcc_decoy_projectile=0
						 bT_gcc_horse=0
						 bT_gcc_horse_bridle=0
						 bT_gcc_ignore_z_correction=0
						 bT_gcc_interactive=0
						 bT_gcc_item=0
						 bT_gcc_ledge=0
						 bT_gcc_npc_ignored_type=0
						 bT_gcc_npc_reported_type=0
						 bT_gcc_player_body=0
						 bT_gcc_player_capsule=0
						 bT_gcc_player_ghostable_type=0
						 bT_gcc_player_type=0
						 bT_gcc_ragdoll=0
						 bT_gcc_rigid=0
						 bT_gcc_vehicle=0
					 }
					 collisionType = {
						 bT_collision_class_articulated=0
						 bT_collision_class_living=0
						 bT_collision_class_particle=0
						 bT_collision_class_soft=0
						 bT_collision_class_terrain=0
						 bT_collision_class_wheeled=0
						 bT_gcc_ai=0
						 bT_gcc_animal=0
						 bT_gcc_decoy_projectile=0
						 bT_gcc_horse=0
						 bT_gcc_horse_bridle=0
						 bT_gcc_ignore_z_correction=0
						 bT_gcc_interactive=0
						 bT_gcc_item=0
						 bT_gcc_ledge=0
						 bT_gcc_npc_ignored_type=0
						 bT_gcc_npc_reported_type=0
						 bT_gcc_player_body=0
						 bT_gcc_player_capsule=0
						 bT_gcc_player_ghostable_type=0
						 bT_gcc_player_type=0
						 bT_gcc_ragdoll=0
						 bT_gcc_rigid=0
						 bT_gcc_vehicle=0
					 }
				 }
				 Density=-1
				 ForeignData = {
					 bMovingPlatform=0
				 }
				 Mass=-1
				 Simulation = {
					 bFixedDamping=0
					 bUseSimpleSolver=0
					 damping=0
					 max_time_step=0.02
					 sleep_speed=0.04
				 }
				 bActivateOnDamage=0
				 bCanBreakOthers=0
				 bPhysicalize=true
				 bPushableByPlayers=true
				 bResting=1
				 bRigidBody=true
				 bRigidBodyActive=true
			 }
			 UseMessage=
			 bCanTriggerAreas=false
			 bDamagesPlayerOnCollisionSP=0
			 bExcludeCover=false
			 bExported_to_game=true
			 bExported_to_test=true
			 bHeavyObject=false
			 bInteractLargeObject=false
			 bMissionCritical=false
			 bPickable=false
			 bSaved_by_game=true
			 bSerialize=0
			 bUsable=false
			 guidSmartObjectType=
			 object_Model=objects/default/primitive_pyramid.cgf
			 sWH_AI_EntityCategory=
			 soclass_SmartObjectHelpers=
			 soclasses_SmartObjectClass=
		 }
		 ResetOnUsed()
		 Server = {
			 Activated = {
				 OnBeginState()
				 OnDamage()
				 OnPhysicsBreak()
			 }
			 Default = {
				 OnBeginState()
				 OnDamage()
				 OnPhysicsBreak()
			 }
		 }
		 SetFromProperties()
		 SetupModel()
		 States = {
			 [01]=Default
			 [02]=Activated
		 }
		 bRigidBodyActive=true
	 }
	 bRigidBodyActive=true
 }
 DebugUtils = {
	 CheckExp()
	 DistanceToPlayer()
	 FakeLoadedGameVersion()
	 FlyMode()
	 Log()
	 LogError()
	 LogWarning()
	 NavmeshCleaner()
	 RainOff()
	 RainOn()
	 UnlockAllCodexEntries()
	 WarnDeprecated()
 }
 DestroStash = {
	 AfterReset()
	 AfterShot()
	 AssignInventory()
	 CanBeUsed()
	 Client = {
		 OnHit()
	 }
	 Close()
	 DoPlaySound()
	 DoStopSound()
	 Editor = {
		 Icon=DestroStash.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Close()
	 Event_Hide()
	 Event_Open()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Close = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Open = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Close=bool
			 Hide=bool
			 Open=bool
			 UnHide=bool
		 }
	 }
	 GetActions()
	 GetSoundTriggerID()
	 IsUsable()
	 NeedSerialize()
	 OnInventoryClosed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 Open()
	 PhysicalizeThis()
	 Properties = {
		 Database = {
			 bReadOnly=true
			 guidInventoryDBId=0
			 nRestockPeriodDays=0
			 sInventoryPreset=
		 }
		 Lock = {
			 bCanLockPick=false
			 bCanUnlockWithDynamicKey=false
			 bLockDifficultyOverride=false
			 bLocked=false
			 bSendMessage=false
			 esLockFanciness=Common
			 fLockDifficulty=1
			 guidItemClassId=
		 }
		 ParticleEffect=
		 Physics = {
			 Density=-1
			 Mass=1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 Sounds = {
			 snd_Hit=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=objects/natural/animal/bird_nest.cgf
		 object_ShardModel=objects/natural/stones/stone_basalt_b.cgf
	 }
	 Reset()
	 SpawnShard()
	 StartParticleEffect()
	 bLocked=false
	 inventoryId=0
	 shot=0
 }
 DestroyableObject = {
	 ActivateDelayEffect()
	 AfterThrownTimer()
	 Base_OnUsed()
	 CacheResources()
	 CanBeMadeTargetable()
	 Client = {
		 Alive = {
			 OnBeginState()
			 OnPhysicsBreak()
		 }
		 ClActivateDelayEffect()
		 ClExplode()
		 ClUsedBy()
		 Dead = {
			 OnBeginState()
		 }
		 OnInit()
		 OnPhysicsBreak()
	 }
	 CommonInit()
	 DeactivateTacticalInfo()
	 Die()
	 Editor = {
		 Icon=explosion.bmp
		 IsScalable=false
	 }
	 Event_Dead()
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Explode()
	 Event_Hide()
	 Event_Hit()
	 Event_MakeInvulnerable()
	 Event_MakeVulnerable()
	 Event_Reset()
	 Event_ResetHealth()
	 Event_UnHide()
	 Event_Used()
	 Explode()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Explode = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 MakeInvulnerable = {
				 [01]()
				 [02]=any
			 }
			 MakeVulnerable = {
				 [01]()
				 [02]=any
			 }
			 Reset = {
				 [02]=bool
				 [01]()
			 }
			 ResetHealth = {
				 [01]()
				 [02]=any
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Break=int
			 Dead=bool
			 DisableUsable=bool
			 EnableUsable=bool
			 Explode=bool
			 Health=float
			 Hide=bool
			 Hit=bool
			 HitBy=entity
			 Reset=bool
			 Scanned=bool
			 UnHide=bool
			 Used=bool
			 UsedBy=entity
		 }
	 }
	 GetHealthRatio()
	 GetMaxHealth()
	 GetUsableMessage()
	 HasBeenScanned()
	 IsDead()
	 IsInvulnerable()
	 IsUsable()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 OnThrown()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 AutoAimTarget = {
			 AfterThrownTargetableTime=3
			 InnerRadiusVolumeFactor=0.35
			 OuterRadiusVolumeFactor=0.6
			 SnapRadiusVolumeFactor=1.25
			 bMakeTargetableOnThrown=0
		 }
		 Breakage = {
			 bSurfaceEffects=1
			 fExplodeImpulse=0
			 fLifeTime=10
		 }
		 DamageMultipliers = {
			 fBullet=1
			 fCollision=1
			 fProjectileClass=1
		 }
		 DestroyedSubObject=
		 DmgFactorWhenCollidingAI=1
		 Explosion = {
			 Damage=1000
			 Delay=0
			 DelayEffect = {
				 Params = {
					 AttachForm=none
					 AttachType=none
					 CountScale=1
					 Scale=1
					 SpawnPeriod=0
					 bCountPerUnit=false
					 bPrime=false
					 bSizePerUnit=0
				 }
				 ParticleEffect=
				 bHasDelayEffect=0
				 vOffset = {
					 x=0
					 y=0
					 z=0
				 }
				 vRotation = {
					 x=0
					 y=0
					 z=0
				 }
			 }
			 Direction = {
				 x=0
				 y=0
				 z=1
			 }
			 EffectScale=1
			 MinPhysRadius=2.5
			 MinRadius=5
			 ParticleEffect=explosions.grenade_air.explosion
			 PhysRadius=5
			 Pressure=1000
			 Radius=10
			 SoundRadius=0
			 vOffset = {
				 x=0
				 y=0
				 z=0
			 }
		 }
		 Health = {
			 MaxHealth=500
			 bInvulnerable=false
			 bOnlyEnemyFire=true
		 }
		 ModelSubObject=
		 Physics = {
			 Density=-1
			 MP = {
				 bDontSyncPos=0
			 }
			 Mass=100
			 Simulation = {
				 damping=0
				 max_time_step=0.02
				 sleep_speed=0.04
			 }
			 bActivateOnDamage=0
			 bCanBreakOthers=0
			 bPushableByPlayers=false
			 bRigidBody=true
			 bRigidBodyActive=true
			 bRigidBodyAfterDeath=1
		 }
		 Sounds = {
			 bStopSoundsOnDestroyed=1
			 fAISoundRadius=30
			 sound_Alive=
			 sound_Dead=
			 sound_Dying=
		 }
		 TacticalInfo = {
			 LookupName=
			 bScannable=0
		 }
		 UseMessage=
		 Vulnerability = {
			 bBullet=1
			 bCollision=1
			 bExplosion=1
			 bMelee=1
			 bOther=1
			 projectileClass=
		 }
		 bAutoGenAIHidePts=0
		 bExplode=1
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractLargeObject=false
		 bOnlyAllowPlayerToFullyDestroyObject=0
		 bPickable=false
		 bPlayerOnly=1
		 bSaved_by_game=true
		 bUsable=false
		 esFaction=
		 fDamageTreshold=0
		 object_Model=objects/default/primitive_sphere.cgf
		 object_ModelDestroyed=
		 soclasses_SmartObjectClass=
	 }
	 RegisterWithAI()
	 Reload()
	 RemoveEffect()
	 ResetOnUsed()
	 RestorePhysicalState()
	 SavePhysicalState()
	 Server = {
		 Alive = {
			 OnTimer()
		 }
		 Dead = {
			 OnBeginState()
		 }
		 OnHit()
		 OnInit()
		 OnTimer()
		 SvRequestUsedBy()
	 }
	 SetCurrentSlot()
	 SetInvulnerability()
	 SetupHealthProperties()
	 States = {
		 [02]=Dead
		 [01]=Alive
	 }
	 __client_dispatch = {
		 [03]=ClActivateDelayEffect:
		 [01]=ClExplode:
		 [02]=ClUsedBy:E
		 ClActivateDelayEffect()
		 ClExplode()
		 ClUsedBy()
		 __validated=false
	 }
	 __server_dispatch = {
		 [01]=SvRequestUsedBy:E
		 SvRequestUsedBy()
		 __validated=false
	 }
 }
 DetailMovementSmartObject = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 MovementDetails = {
			 esMovementSpeed=b_Walk
			 fContinualSuccessDistance=10
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 movementSpeed=Walk
 }
 DialogModule = {
	 AnalyzeRequest()
	 ForceDialog()
	 IsSoulInDialog()
	 ResetHaggle()
	 SetAIInteractionState()
	 SetPlayerInteractiveState()
 }
 DialogState()
 DialogTrigger = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
	 }
 }
 DialogUtils = {
	 DialogState()
	 EventChaseCheckItemsOnPlayer()
	 GetMoneySliderInputSelectedAmount()
	 HidePaymentAmount()
	 ImpressByPlayer()
	 MoneySliderSetupResultNpcLimitFail()
	 MoneySliderSetupResultPlayerLimitFail()
	 MoneySliderSetupResultSuccess()
	 PersuadeByPlayer()
	 ProcessPayment()
	 RequestPlayerMonologByMetarole()
	 SetupBribe()
	 SetupHaggle()
	 SetupMoneySlider()
	 ShopMoneyTransaction()
	 ShowPaymentAmount()
	 SimpleBribeTransaction()
	 SkillCheck()
	 ThreatenByPlayer()
	 dialogParticipant=
 }
 DialogueHolder = {
	 Editor = {
		 Icon=DialogueHolder.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
 }
 Dice = {
	 HoldDie()
	 OverrideNextThrow()
	 RollDie()
	 SetAIDifficulty()
	 SetAIRiskTaking()
	 SetAdvantage()
	 SetScore()
	 ToggleHoldDie()
 }
 DiceInteractor = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=0
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=false
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=objects/manmade/task_specific_props/entertainment/games/dice/dice_board.cgf
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetDiceAvailable()
	 SetupTrigger()
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 diceAvailable=true
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 DiceMinigameCup = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=0
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=false
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 object_Model=objects/manmade/task_specific_props/entertainment/games/dice/dice_cup_b.cgf
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetupTrigger()
	 __super = {
		 Editor = {
			 Icon=animobject.bmp
			 IconOnTop=1
			 ShowBounds=1
		 }
		 Event_Use()
		 Event_User()
		 FlowEvents = {
			 Inputs = {
				 Use = {
					 [02]=entityid
					 [01]()
				 }
				 User = {
					 [02]=entityid
					 [01]()
				 }
			 }
			 Outputs = {
				 OnUse=bool
			 }
		 }
		 GetUsableMessage()
		 IsUsable()
		 IsUsableMsgChanged()
		 LoadModel()
		 OnPropertyChange()
		 OnReset()
		 OnSpawn()
		 OnUsed()
		 PhysicalizeThis()
		 Properties = {
			 Physics = {
				 Density=-1
				 Mass=-1
				 bPhysicalize=true
				 bPushableByPlayers=false
				 bRigidBody=true
			 }
			 object_Model=
			 soclasses_SmartObjectClass=
		 }
		 Reset()
		 ResetChild()
		 SetupTrigger()
		 bUseTrigger=false
		 bUseableMsgChanged=0
		 fMinUseDistance=0.7
		 fUseAngle=0.7
		 nUserId=0
	 }
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 Dog = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 dashPossibleCheckDistance=12
		 dashPossibleCheckRequiredSpeedParam=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_dog_controllerdefs.xml
	 ActorCanTalk()
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_dog_database.adb
	 CombatOpponentMnTag=oppDog
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnBonding()
	 OnButcher()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 OnUsed()
	 OpponentMnTag=relatedDog
	 ProceduralContextLook = {
		 fadeInSeconds=1
		 fadeOutMinDistance=0
		 fadeOutSeconds=1
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Dog
			 footstepEffect=footsteps_Dog
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
			 esDefaultBehavior=none
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_CreateSituationSubsystem=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=dog
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/Dog/dog.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.55
		 pos = {
			 x=0
			 y=0.05
			 z=0.52
		 }
		 posCarcass = {
			 x=0.1
			 y=0.16
			 z=0.08
		 }
		 radius=0.13
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Dog
	 defaultSoulClass=dog
	 gameParams = {
		 animatedCharacterTurnSpeedSmoothingTime=0.2
		 inertia=0
		 inertiaAccel=0
		 lookFOV=180
		 stance = {
			 carryCorpse = {
				 heightCollider=0.4
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 combat = {
				 heightCollider=0.4
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=0
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 crouch = {
				 heightCollider=0.4
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=1
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=30
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=25
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=25
		 stiffness_scale=73
	 }
 }
 DogMarkingSpot = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
		 IconOnTop=1
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=false
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=99b89107-acd5-4d85-8930-7dd1f5f8c864
		 object_editorModel=objects/helpers/dog/dog_marking.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=dogMarkPoint
	 }
 }
 DummyTarget = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Combat = {
				 Run = {
					 [01]=2.5
					 [02]=2.3
					 [03]=6
				 }
				 Slow = {
					 [01]=0.8
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [03]=6.5
					 [02]=2.3
					 [01]=6.5
				 }
				 Walk = {
					 [03]=1.3
					 [01]=1.3
					 [02]=0.8
				 }
			 }
			 Cover = {
				 Run = {
					 [02]=7
					 [01]=7
					 [03]=7
				 }
				 Slow = {
					 [01]=1
					 [02]=1
					 [03]=1
				 }
				 Sprint = {
					 [02]=7
					 [01]=7
					 [03]=7
				 }
				 Walk = {
					 [02]=1.9
					 [03]=1.9
					 [01]=1.9
				 }
			 }
			 Crouch = {
				 Run = {
					 [02]=2.7
					 [03]=5.5
					 [01]=3.5
				 }
				 Slow = {
					 [02]=0.3
					 [03]=1.3
					 [01]=0.5
				 }
				 Walk = {
					 [01]=0.9
					 [02]=0.3
					 [03]=1.3
				 }
			 }
			 Prone = {
				 Run = {
					 [03]=0.5
					 [02]=0.4
					 [01]=0.5
				 }
				 Slow = {
					 [03]=0.5
					 [02]=0.4
					 [01]=0.4
				 }
				 Walk = {
					 [03]=0.5
					 [02]=0.4
					 [01]=0.5
				 }
			 }
			 Relaxed = {
				 Run = {
					 [03]=7.2
					 [02]=2
					 [01]=4.5
				 }
				 Slow = {
					 [03]=1.9
					 [01]=1
					 [02]=1
				 }
				 Walk = {
					 [03]=1.9
					 [01]=1.3
					 [02]=1
				 }
			 }
			 Stealth = {
				 Run = {
					 [02]=2.7
					 [03]=5.5
					 [01]=3.5
				 }
				 Slow = {
					 [01]=0.8
					 [02]=0.7
					 [03]=1
				 }
				 Walk = {
					 [01]=0.9
					 [02]=0.7
					 [03]=1
				 }
			 }
			 Swim = {
				 Run = {
					 [03]=4.3
					 [01]=3
					 [02]=2.9
				 }
				 Slow = {
					 [02]=0.6
					 [01]=0.5
					 [03]=0.7
				 }
				 Walk = {
					 [02]=0.6
					 [01]=0.6
					 [03]=0.7
				 }
			 }
		 }
		 aimTurnSpeed=-1
		 allowEntityClampingByAnimation=1
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 directionalScaleRefSpeedMax=8
		 directionalScaleRefSpeedMin=1
		 fireTurnSpeed=-1
		 lightAffectsSpeed=1
		 lookCombatTurnSpeed=50
		 lookIdleTurnSpeed=30
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=3
		 maxDecel=8
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_DEFAULT
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=2
	 }
	 AI_changeCoverInterval=7
	 AI_changeCoverLastTime=0
	 ActionController=Animations/Mannequin/ADB/kcd_male_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_male_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 NotifyRemoval()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 commrange=30
		 distanceToHideFrom=3
		 eiColliderMode=0
		 esBehaviorSelectionTree=CombatDummy
		 esClothingConfig=male2
		 esCommConfig=npc_default
		 esFaction=grunts
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 preferredCombatDistance=20
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 colliderEnergyScale=10
	 colliderRagdollScale=150
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 Dump = {
	 Dump()
	 FormatTerminal()
	 ListKeys()
	 Print()
 }
 ENTITYID=69
 ENTITY_FLAG_AI_HIDEABLE=-2.14748e+09
 ENTITY_FLAG_CALCBBOX_USEALL=2048
 ENTITY_FLAG_CALC_PHYSICS=128
 ENTITY_FLAG_CASTSHADOW=2
 ENTITY_FLAG_CLIENT_ONLY=256
 ENTITY_FLAG_EXTENDED_CAN_COLLIDE_WITH_MERGED_MESHES=8
 ENTITY_FLAG_EXTENDED_FORCE_UPDATE=1024
 ENTITY_FLAG_EXTENDED_NEEDS_MOVEINSIDE=4
 ENTITY_FLAG_GOOD_OCCLUDER=8
 ENTITY_FLAG_IGNORE_PHYSICS_UPDATE=8.38861e+06
 ENTITY_FLAG_MODIFIED_BY_PHYSICS=6.71089e+07
 ENTITY_FLAG_NOT_REGISTER_IN_SECTORS=64
 ENTITY_FLAG_NO_PROXIMITY=524288
 ENTITY_FLAG_NO_SAVE=32768
 ENTITY_FLAG_RAIN_OCCLUDER=1
 ENTITY_FLAG_SERVER_ONLY=512
 ENTITY_FLAG_TRIGGER_AREAS=16384
 ENTITY_FLAG_UPDATE_HIDDEN=2.09715e+06
 ENTITY_FLAG_VOLUME_SOUND=4096
 ENTITY_FLAG_WRITE_ONLY=32
 ENTITY_UPDATE_ALWAYS=6
 ENTITY_UPDATE_IN_RANGE=1
 ENTITY_UPDATE_NEVER=0
 ENTITY_UPDATE_PHYSICS=4
 ENTITY_UPDATE_PHYSICS_VISIBLE=5
 ENTITY_UPDATE_POT_VISIBLE=2
 ENTITY_UPDATE_SCRIPT=7
 ENTITY_UPDATE_VISIBLE=3
 EP_DISCARD=0
 EP_FOLD=1
 EST_BulletRain=3
 EST_Generic=0
 EST_Sound=2
 EST_Visual=1
 E_ACTORSTANCE_CARRYCORPSE=9
 E_ACTORSTANCE_COMBAT=0
 E_ACTORSTANCE_CROUCH=1
 E_ACTORSTANCE_INJURED=7
 E_ACTORSTANCE_NORMAL=3
 E_ACTORSTANCE_STONETHROWING=2
 E_MUF_CombatDanger=1
 E_MUF_Other=2
 E_MinigameType_Alchemy=3
 E_MinigameType_BattleArchery=10
 E_MinigameType_Blacksmithing=12
 E_MinigameType_Dice=7
 E_MinigameType_Distract=11
 E_MinigameType_HerbGathering=4
 E_MinigameType_HoleDigging=6
 E_MinigameType_LockPicking=5
 E_MinigameType_Pickpocketing=8
 E_MinigameType_Reading=2
 E_MinigameType_Sharpening=1
 E_MinigameType_StoneThrowing=9
 E_MinigameType_Undefined=0
 E_SkipTimeMessage_Combat=5
 E_SkipTimeMessage_Empty=0
 E_SkipTimeMessage_InCart=9
 E_SkipTimeMessage_LowFood=7
 E_SkipTimeMessage_LowHealth=6
 E_SkipTimeMessage_NotIdle=1
 E_SkipTimeMessage_OnHorse=11
 E_SkipTimeMessage_Overread=4
 E_SkipTimeMessage_Oversleep=3
 E_SkipTimeMessage_TenseCircumstance=8
 E_SkipTimeMessage_TimePause=2
 E_SkipTimeMessage_Trespass=10
 E_Urgency_Default=0
 E_Urgency_Fast=2
 E_Urgency_Instant=3
 E_Urgency_Slow=1
 Entity = {
	 Activate()
	 ActivateOutput()
	 ActivatePlayerPhysics()
	 AddConstraint()
	 AddImpulse()
	 AttachChild()
	 AttachSurfaceEffect()
	 AuxAudioProxiesMoveWithEntity()
	 AwakeCharacterPhysics()
	 AwakeEnvironment()
	 AwakePhysics()
	 BreakToPieces()
	 CalcWorldAnglesFromRelativeDir()
	 CancelSubpipe()
	 ChangeAttachmentMaterial()
	 CharacterUpdateAlways()
	 CharacterUpdateOnRender()
	 CheckCollisions()
	 CheckShaderParamCallbacks()
	 CloneMaterial()
	 CopySlotTM()
	 CountLinks()
	 CreateAuxAudioProxy()
	 CreateBBoxProxy()
	 CreateBoneAttachment()
	 CreateCameraProxy()
	 CreateDRSProxy()
	 CreateLink()
	 CreateRenderProxy()
	 CreateSkinAttachment()
	 Damage()
	 DeactivateParticleEmitter()
	 DeleteParticleEmitter()
	 DeleteThis()
	 DestroyAttachment()
	 DestroyBBoxProxy()
	 DestroyPhysics()
	 DetachAll()
	 DetachThis()
	 DisableAnimationEvent()
	 DrawSlot()
	 EnableBoneAnimation()
	 EnableBoneAnimationAll()
	 EnableInheritXForm()
	 EnableMaterialLayer()
	 EnablePhysics()
	 EnableProceduralFacialAnimation()
	 ExecuteAudioTrigger()
	 FadeGlobalDensity()
	 ForceCharacterUpdate()
	 ForwardTriggerEventsTo()
	 FreeAllSlots()
	 FreeSlot()
	 GetAIName()
	 GetAllAuxAudioProxiesID()
	 GetAngles()
	 GetAnimationLength()
	 GetAnimationSpeed()
	 GetAnimationTime()
	 GetArchetype()
	 GetAttachmentBone()
	 GetAttachmentCGF()
	 GetBBoxProxyBBox()
	 GetBoneAngularVelocity()
	 GetBoneDir()
	 GetBoneLocal()
	 GetBoneNameFromTable()
	 GetBonePos()
	 GetBoneVelocity()
	 GetCenterOfMassPos()
	 GetCharacter()
	 GetChild()
	 GetChildCount()
	 GetCurAnimation()
	 GetDefaultAuxAudioProxyID()
	 GetDirectionVector()
	 GetDistance()
	 GetEntityMaterial()
	 GetExplosionImpulse()
	 GetExplosionObstruction()
	 GetFlags()
	 GetFlagsExtended()
	 GetGUID()
	 GetGeomCachePrecachedTime()
	 GetGravity()
	 GetHelperAngles()
	 GetHelperDir()
	 GetHelperPos()
	 GetLink()
	 GetLinkName()
	 GetLinkTarget()
	 GetLocalAngles()
	 GetLocalBBox()
	 GetLocalPos()
	 GetLocalScale()
	 GetLodRatio()
	 GetMass()
	 GetMaterial()
	 GetMaterialFloat()
	 GetMaterialVec3()
	 GetName()
	 GetParent()
	 GetParentSlot()
	 GetPhysicalStats()
	 GetPos()
	 GetProjectedWorldBBox()
	 GetRawId()
	 GetScale()
	 GetSlotAngles()
	 GetSlotCount()
	 GetSlotHelperPos()
	 GetSlotPos()
	 GetSlotScale()
	 GetSlotWorldDir()
	 GetSlotWorldPos()
	 GetSpeed()
	 GetState()
	 GetSubmergedVolume()
	 GetTimeOfDayHour()
	 GetTimeSinceLastSeen()
	 GetTouchedPoint()
	 GetTouchedSurfaceID()
	 GetTriggerBBox()
	 GetUpdateRadius()
	 GetVelocity()
	 GetVelocityEx()
	 GetViewDistRatio()
	 GetVolume()
	 GetWorldAngles()
	 GetWorldBBox()
	 GetWorldBoundsCenter()
	 GetWorldDir()
	 GetWorldPos()
	 GetWorldScale()
	 GotoState()
	 HasFlags()
	 HasFlagsExtended()
	 Hide()
	 HideAllAttachments()
	 HideAttachment()
	 HideAttachmentMaster()
	 IgnorePhysicsUpdatesOnSlot()
	 InsertSubpipe()
	 IntersectRay()
	 InvalidateLocalBBox()
	 InvalidateTrigger()
	 IsActive()
	 IsAnimationRunning()
	 IsColliding()
	 IsEntityInside()
	 IsEntityInsideArea()
	 IsFromPool()
	 IsGarbage()
	 IsGeomCacheStreaming()
	 IsHidden()
	 IsInState()
	 IsPerInstanceStreamable()
	 IsPointInsideArea()
	 IsSlotCharacter()
	 IsSlotGeometry()
	 IsSlotLight()
	 IsSlotParticleEmitter()
	 IsSlotValid()
	 IsUsingPipe()
	 KillTimer()
	 LoadCharacter()
	 LoadCloud()
	 LoadFogVolume()
	 LoadGeomCache()
	 LoadLight()
	 LoadObject()
	 LoadObjectLattice()
	 LoadObjectWithFlags()
	 LoadParticleEffect()
	 LoadPrismObject()
	 LoadSubObject()
	 LoadVolumeObject()
	 MaterialFlashInvoke()
	 MultiplyWithSlotTM()
	 NetPresent()
	 NoBulletForce()
	 NoExplosionCollision()
	 PassParamsToPipe()
	 Physicalize()
	 PhysicalizeAttachment()
	 PhysicalizeSlot()
	 PlayFacialAnimation()
	 PreLoadParticleEffect()
	 ProcessBroadcastEvent()
	 RagDollize()
	 ReattachSoftEntityVtx()
	 RedirectAnimationToLayer0()
	 RegisterForAreaEvents()
	 RemoveAllLinks()
	 RemoveAuxAudioProxy()
	 RemoveDecals()
	 RemoveLink()
	 RenderAlways()
	 RenderShadow()
	 ReplaceMaterial()
	 ResetAnimation()
	 ResetAttachment()
	 ResetMaterial()
	 ResetPhysics()
	 SelectPipe()
	 SetAIName()
	 SetAngles()
	 SetAnimateOffScreenShadow()
	 SetAnimationBlendOut()
	 SetAnimationDrivenMotion()
	 SetAnimationEvent()
	 SetAnimationFlip()
	 SetAnimationKeyEvent()
	 SetAnimationSpeed()
	 SetAnimationTime()
	 SetAttachmentAngles()
	 SetAttachmentCGF()
	 SetAttachmentDir()
	 SetAttachmentEffect()
	 SetAttachmentLight()
	 SetAttachmentObject()
	 SetAttachmentPos()
	 SetAudioEnvironmentID()
	 SetAudioObstructionCalcType()
	 SetAudioProxyOffset()
	 SetAudioRtpcValue()
	 SetAudioSwitchState()
	 SetBBoxProxyBBox()
	 SetCharacterPhysicParams()
	 SetCloudMovementProperties()
	 SetColliderMode()
	 SetCurrentAudioEnvironments()
	 SetDefaultIdleAnimations()
	 SetDirectionVector()
	 SetEnvironmentFadeDistance()
	 SetFadeDistance()
	 SetFlags()
	 SetFlagsExtended()
	 SetGeomCacheDrawing()
	 SetGeomCacheParams()
	 SetGeomCachePlaybackTime()
	 SetGeomCacheStreaming()
	 SetLightColorParams()
	 SetLinkTarget()
	 SetLocalAngles()
	 SetLocalBBox()
	 SetLocalPos()
	 SetLocalScale()
	 SetLodRatio()
	 SetMaterial()
	 SetMaterialFloat()
	 SetMaterialVec3()
	 SetName()
	 SetParentSlot()
	 SetPhysicParams()
	 SetPos()
	 SetPublicParam()
	 SetRegisterInSectors()
	 SetScale()
	 SetScriptUpdateRate()
	 SetSelfAsLightCasterException()
	 SetSlotAngles()
	 SetSlotHud3D()
	 SetSlotPos()
	 SetSlotPosAndDir()
	 SetSlotScale()
	 SetSlotScaleAsymmetric()
	 SetSlotWorldTM()
	 SetStateClientside()
	 SetTimer()
	 SetTriggerBBox()
	 SetUpdatePolicy()
	 SetUpdateRadius()
	 SetVelocity()
	 SetVelocityEx()
	 SetViewDistRatio()
	 SetViewDistUnlimited()
	 SetVolumeObjectMovementProperties()
	 SetWorldAngles()
	 SetWorldPos()
	 SetWorldScale()
	 StartAnimation()
	 StopAnimation()
	 StopAudioTrigger()
	 ToGlobal()
	 ToLocal()
	 TriggerEvent()
	 UnSeenFrames()
	 UpdateAreas()
	 UpdateLightClipBounds()
	 UpdateSlotPhysics()
	 VectorToGlobal()
	 VectorToLocal()
 }
 EntityCommon = {
	 AddHeavyObjectProperty()
	 AddInteractLargeObjectProperty()
	 ApplyCollisionFiltering()
	 BroadcastEvent()
	 CompareEntitiesByName()
	 Derive()
	 DeriveOverride()
	 GetCollisionFiltering()
	 IsUsableForLockpick()
	 MakeAICoverEntity()
	 MakeCompareEntitiesByDistanceFromPoint()
	 MakeKillable()
	 MakePickable()
	 MakeRenderProxyOptions()
	 MakeSpawnable()
	 MakeTargetableByAI()
	 MakeThrownObjectTargetable()
	 MakeUninteractableFromScript()
	 MakeUsable()
	 OnEntityBookmarkCreated()
	 PhysicalizeRigid()
	 SetupCollisionFiltering()
	 TempPhysParams = {
		 density=0
		 mass=0
	 }
	 TempPhysicsFlags = {
		 flags=0
		 flags_mask=0
	 }
	 TempSimulationParams = {
		 max_time_step=0.02
	 }
 }
 EntityModule = {
	 AnimCharCopyVisual()
	 CanUseInventory()
	 GetEntityScriptMisc()
	 GetInventoryOwner()
	 GetSlotItemClassId()
	 IsInventoryReadOnly()
	 MakeParticleEffectActive()
	 MakeParticleEffectIdle()
	 SequenceEntitiesCopyVisual()
	 WillSleepingOnThisBedSave()
 }
 EntityNamed()
 EntityUtils = {
	 DumpEntities()
	 EntityNamed()
	 GetEntityCategory()
	 GetMiscProperty()
	 GetName()
	 GetScriptProperty()
	 GetScriptSoulData()
	 IsAnimal()
	 IsFemale()
	 Teleport()
 }
 Enum = {
	 FromIndex()
	 FromStr()
	 ListValues()
	 __index()
	 new()
 }
 EnumValue = {
	 ToIndex()
	 ToStr()
	 __le()
	 __lt()
 }
 EnvironmentLight = {
	 ActivateLight()
	 CacheResources()
	 Editor = {
		 AbsoluteRadius=1
		 ShowBounds=0
	 }
	 Event_Active()
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Active = {
				 [02]=bool
				 [01]()
			 }
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Active=bool
		 }
	 }
	 LoadLightToSlot()
	 OnInit()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyAnimated()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnUpdate()
	 Properties = {
		 BoxSizeX=10
		 BoxSizeY=10
		 BoxSizeZ=10
		 Color = {
			 clrDiffuse = {
				 x=1
				 y=1
				 z=1
			 }
			 fDiffuseMultiplier=1
			 fGIMultiplier=1
			 fSpecularMultiplier=1
			 fToDMulWeight=1
			 fVolumetricMultiplier=1
		 }
		 GenOffsetX=0
		 GenOffsetY=0
		 GenOffsetZ=0
		 Options = {
			 SortPriority=0
			 _texture_deferred_cubemap=
			 bAffectsThisAreaOnly=false
			 bAffectsVolumetricFogOnly=false
			 bDeferredClipBounds=false
			 bIgnoresVisAreas=false
			 bVolumetricFog=true
			 fAttenuationFalloffMax=0.3
			 fGiBiasMultiplier=1
		 }
		 OptionsAdvanced = {
			 bDynamic=true
			 texture_deferred_cubemap=
		 }
		 Projection = {
			 bBoxProject=false
			 fBoxHeight=10
			 fBoxLength=10
			 fBoxWidth=10
		 }
		 bActive=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
	 }
 }
 EnvironmentModule = {
	 BlendTimeOfDay()
	 CoverHole()
	 ForceImmediateWeatherUpdate()
	 GetRainIntensity()
	 MakeHole()
	 RebuildClouds()
 }
 EquipWeapon()
 Explosion = {
	 Editor = {
		 Icon=explosion.bmp
		 IconOnTop=1
	 }
	 Event_Activate()
	 Event_Deactivate()
	 Event_Explode()
	 Explode()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 Deactivate = {
				 [02]=bool
				 [01]()
			 }
			 Explode = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Deactivate=bool
			 Explode=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 Properties = {
		 Explosion = {
			 Damage=1000
			 Direction = {
				 x=0
				 y=0
				 z=1
			 }
			 EffectScale=1
			 MinPhysRadius=2.5
			 MinRadius=5
			 ParticleEffect=explosions.grenade_air.explosion
			 PhysRadius=5
			 Pressure=1000
			 Radius=10
		 }
		 bActive=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 soclasses_SmartObjectClass=
	 }
 }
 FIREMODE_AIM=4
 FIREMODE_AIM_SWEEP=14
 FIREMODE_BURST=1
 FIREMODE_BURST_DRAWFIRE=11
 FIREMODE_BURST_ONCE=15
 FIREMODE_BURST_SNIPE=13
 FIREMODE_BURST_WHILE_MOVING=9
 FIREMODE_CONTINUOUS=2
 FIREMODE_FORCED=3
 FIREMODE_KILL=8
 FIREMODE_MELEE=7
 FIREMODE_MELEE_FORCED=12
 FIREMODE_OFF=0
 FIREMODE_PANIC_SPREAD=10
 FIREMODE_SECONDARY=5
 FIREMODE_SECONDARY_SMOKE=6
 FLOAT=102
 FOREIGNFLAGS_MOVING_PLATFORM=128
 FX_TIMER=1
 FastTravel = {
	 Stop()
 }
 FastTravelCutsceneData = {
	 Editor = {
		 Icon=sequence.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esDisableRandomEvents=All
		 esFastTravelIcon=Player
	 }
 }
 FieldMouse = {
	 Animations = {
		 [01]=rat_run
		 [03]=rat_idle_var01
		 [02]=rat_idle
		 [07]=
		 [08]=rat_run_jump
		 [04]=rat_idle_var02
		 [06]=throw
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=3
			 object_Model=Objects/characters/animals/rat/rat.cdf
		 }
		 Flocking = {
			 AttractDistMax=10
			 AttractDistMin=0.1
			 FactorAlign=1
			 FactorCohesion=0.5
			 FactorSeparation=3
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=50000
			 FactorHeight=10
			 FactorOrigin=15
			 HeightMax=0
			 HeightMin=0
			 IgnoreTerrainElevation=false
			 IgnoreWallsBehindPlayer=false
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=50
			 RandomMovement=1
			 RunAnimationSpeed=2.5
			 RunThreshold=2.2
			 SpeedMax=1.8
			 SpeedMin=1.5
			 SpeedScared=2.7
			 WalkAnimationSpeed=2
		 }
		 Options = {
			 PickableMessage=
			 Radius=20
			 VisibilityDist=80
			 bActivate=true
			 bAvoidWater=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 Sounds = {
		 [02]=b_rat_scared
		 [01]=b_rat_idle
		 [03]=
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 FireplaceSmartObject = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEatItemClassId()
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Fireplace = {
			 bFullOnInit=true
			 esFireplaceCauldronType=goulash
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 cauldronType=goulash
 }
 Fish = {
	 Animations = {
		 [01]=fish_anim
	 }
	 BubblesEffect=
	 CacheResources()
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Fish.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 Deactivate = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Deactivate=bool
		 }
	 }
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 OnSpawnBubble()
	 OnSpawnSplash()
	 Properties = {
		 Boid = {
			 Mass=10
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=06be2a3d-4e05-4a78-85cd-33879cd669c9
			 nCount=5
			 object_Model=objects/characters/animals/fish/salmo_trutta.cdf
		 }
		 Flocking = {
			 AttractDistMax=20
			 AttractDistMin=5
			 FactorAlign=0
			 FactorCohesion=1
			 FactorSeparation=10
			 FieldOfViewAngle=250
			 bEnableFlocking=false
		 }
		 Movement = {
			 FactorAvoidLand=10
			 FactorHeight=1
			 FactorOrigin=0.2
			 FactorRandomAcceleration=2
			 HeightMax=20
			 HeightMin=1
			 MaxAnimSpeed=1.7
			 SpeedMax=0.9
			 SpeedMin=0.3
			 SpeedScared=10
		 }
		 Options = {
			 Radius=5
			 VisibilityDist=15
			 bActivate=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=false
			 bPickableWhenAlive=false
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 SplashEffect=
	 bubble_dir = {
		 x=0
		 y=0
		 z=1
	 }
	 bubble_pos = {
		 x=0
		 y=0
		 z=0
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Fish
 }
 Flash = {
	 Editor = {
		 Icon=Flash.bmp
	 }
	 Event_Stop()
	 Event_Strike()
	 FlowEvents = {
		 Inputs = {
			 Stop = {
				 [02]=bool
				 [01]()
			 }
			 Strike = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Stop=bool
			 Strike=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnSave()
	 OnShutDown()
	 OnUpdate()
	 Properties = {
		 Effects = {
			 SkyHighlightAtten=10
			 SkyHighlightMultiplier=1
			 color_SkyHighlightColor = {
				 x=0.8
				 y=0.8
				 z=1
			 }
			 sound_Sound=
		 }
		 Timing = {
			 fFadeInTime=0.1
			 fFadeOutTime=0.1
			 fFlashDuration=1
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 StopStrike()
	 TempPos = {
		 x=0
		 y=0
		 z=0
	 }
	 UpdateFlashParams()
	 _SkyHighlight = {
		 color = {
			 x=0
			 y=0
			 z=0
		 }
		 position = {
			 x=0
			 y=0
			 z=0
		 }
		 size=0
	 }
 }
 FlyMode_Off=0
 FlyMode_On=1
 FlyMode_OnNoCollisions=2
 Fog = {
	 CurFadeAmount=0
	 Editor = {
		 Icon=Fog.bmp
	 }
	 LastTime=0
	 OnEnterArea()
	 OnInit()
	 OnLeaveArea()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnTimer()
	 OnUpdate()
	 Properties = {
		 AtmosphereHeightModifier=0
		 FadeTime=1
		 GlobalDensityModifier=1
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 ResetValues()
	 SetFog()
	 type=FogController
 }
 FogVolume = {
	 CheckMove()
	 CreateFogVolume()
	 DeleteFogVolume()
	 Editor = {
		 Icon=FogVolume.bmp
		 Model=Editor/Objects/invisiblebox.cgf
		 ShowBounds=1
	 }
	 Event_Enabled()
	 Event_Fade()
	 Event_FadeTime()
	 Event_FadeValue()
	 Event_Hide()
	 Event_SetDensityNoiseOffset()
	 Event_SetDensityNoiseScale()
	 Event_SetGlobalDensity()
	 Event_SetWindInfluence()
	 Event_Show()
	 Fader = {
		 fadeTime=0
		 fadeToValue=0
	 }
	 FlowEvents = {
		 Inputs = {
			 AO_Enabled = {
				 [02]=bool
				 [01]()
			 }
			 EV_Density = {
				 [02]=float
				 [01]()
			 }
			 EV_DensityNoiseOffset = {
				 [02]=float
				 [01]()
			 }
			 EV_DensityNoiseScale = {
				 [02]=float
				 [01]()
			 }
			 EV_WindInfluence = {
				 [02]=float
				 [01]()
			 }
		 }
		 Outputs = {
			 Enabled=bool
		 }
	 }
	 InitFogVolumeProperties()
	 OnInit()
	 OnLoad()
	 OnPropertyAnimated()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 Properties = {
		 DensityNoiseFrequency = {
			 x=10
			 y=10
			 z=10
		 }
		 DensityNoiseOffset=1
		 DensityNoiseScale=1
		 DensityNoiseTimeFrequency=0
		 DensityOffset=0
		 EmissionIntensity=0
		 FallOffDirLati=90
		 FallOffDirLong=0
		 FallOffScale=1
		 FallOffShift=0
		 GlobalDensity=1
		 NearCutoff=0
		 RampEnd=50
		 RampInfluence=0
		 RampStart=0
		 Size = {
			 x=1
			 y=1
			 z=1
		 }
		 SoftEdges=1
		 WindInfluence=1
		 bActive=true
		 bAffectsThisAreaOnly=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bIgnoresVisAreas=false
		 bSaved_by_game=false
		 bUseGlobalFogColor=false
		 color_Color = {
			 x=1
			 y=1
			 z=1
		 }
		 color_Emission = {
			 x=1
			 y=1
			 z=1
		 }
		 eiVolumeType=0
		 fHDRDynamic=0
	 }
	 type=FogVolume
 }
 FoodProcessingTrigger = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 ShowFoodProcessingTutorials()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Framework = {
	 Expr()
	 IsValidWUID()
	 ScriptHandlerToString()
	 WUIDToMsg()
	 WUIDToString()
	 WUIDToUI()
 }
 Friendly=2
 GE_ADVANCE_POS=2
 GE_DEFEND_POS=4
 GE_GROUP_STATE=0
 GE_LEADER_COUNT=5
 GE_MOST_LOST_UNIT=6
 GE_MOVEMENT_SIGNAL=7
 GE_NEAREST_SEEK=8
 GE_SEEK_POS=3
 GE_UNIT_STATE=1
 GN_AVOID_CURRENT_POS=3
 GN_CLEAR_DEFEND_POS=2
 GN_INIT=0
 GN_MARK_DEFEND_POS=1
 GN_NOTIFY_ADVANCING=6
 GN_NOTIFY_ALERTED=11
 GN_NOTIFY_COVERING=7
 GN_NOTIFY_HIDING=9
 GN_NOTIFY_IDLE=13
 GN_NOTIFY_REINFORCE=15
 GN_NOTIFY_SEARCHING=14
 GN_NOTIFY_SEEKING=10
 GN_NOTIFY_UNAVAIL=12
 GN_NOTIFY_WEAK_COVERING=8
 GN_PREFER_ATTACK=4
 GN_PREFER_FLEE=5
 GROUP_ALL=1
 GROUP_ENABLED=2
 GROUP_MAX=4
 GS_ADVANCE=3
 GS_COVER=2
 GS_IDLE=0
 GS_SEARCH=5
 GS_SEEK=4
 GU_ALIEN_ASSAULT=6
 GU_ALIEN_ASSAULT_DEFEND=8
 GU_ALIEN_EVADE=9
 GU_ALIEN_MELEE=5
 GU_ALIEN_MELEE_DEFEND=7
 GU_HUMAN_CAMPER=0
 GU_HUMAN_COVER=1
 GU_HUMAN_LEADER=3
 GU_HUMAN_SNEAKER=2
 GU_HUMAN_SNEAKER_SPECOP=4
 Game = {
	 AddSaveLock()
	 AllowTutorials()
	 BlockTutorials()
	 CacheResource()
	 CreatePrefab()
	 DeletePrefab()
	 HideCurrentTutorial()
	 HideInfoText()
	 HidePrefab()
	 HideTutorial()
	 InventoryModeOnlyCodex()
	 IsDemo()
	 IsLoadingEngineSaveGame()
	 IsPlayer()
	 KeybindsRebindInput()
	 LogGameEvent()
	 MovePrefab()
	 QuickLoad()
	 QuickSave()
	 RemoveSaveLock()
	 ResetEntity()
	 ResetTutorial()
	 SaveGameViaResting()
	 SendInfoText()
	 SetPrefabPhase()
	 SetPrefabPhaseById()
	 ShadowplayStartStop()
	 ShowItemsTransfer()
	 ShowNotification()
	 ShowOverlayTutorial()
	 ShowStatCheckResult()
	 ShowTutorial()
	 SpawnPrefab()
 }
 GameToken = {
	 DumpAllTokens()
	 GetToken()
	 SetToken()
 }
 GameUtils = {
	 ConvertGameGuidToLyrGuid()
	 ConvertLyrGuidToGameGuid()
	 DisableSave()
	 EnableSave()
	 GetLocalVar()
	 HideHorseCutscene()
	 SetLocalVar()
 }
 GeomCache = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
	 }
	 Event_Hide()
	 Event_PrecacheTime()
	 Event_SetTime()
	 Event_Start()
	 Event_StartDrawing()
	 Event_StartStreaming()
	 Event_Stop()
	 Event_StopDrawing()
	 Event_StopStreaming()
	 Event_Unhide()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [01]()
				 [02]=any
			 }
			 PrecacheTime = {
				 [02]=float
				 [01]()
			 }
			 SetTime = {
				 [02]=float
				 [01]()
			 }
			 Start = {
				 [01]()
				 [02]=any
			 }
			 StartDrawing = {
				 [01]()
				 [02]=any
			 }
			 StartStreaming = {
				 [01]()
				 [02]=any
			 }
			 Stop = {
				 [01]()
				 [02]=any
			 }
			 StopDrawing = {
				 [01]()
				 [02]=any
			 }
			 StopStreaming = {
				 [01]()
				 [02]=any
			 }
			 Unhide = {
				 [01]()
				 [02]=any
			 }
		 }
		 Outputs = {
			 Precached=bool
		 }
	 }
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUpdate()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 bPhysicalize=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bLooping=false
		 bPlaying=false
		 bSaved_by_game=true
		 fStandInDistance=0
		 fStartTime=0
		 fStreamInDistance=0
		 geomcacheFile=EngineAssets/GeomCaches/default.cax
		 materialFirstFrameStandInMaterial=
		 materialLastFrameStandInMaterial=
		 materialStandInMaterial=
		 objectFirstFrameStandIn=
		 objectLastFrameStandIn=
		 objectStandIn=
	 }
	 SetFromProperties()
	 bPlaying=false
	 bPrecachedOutputTriggered=false
	 currentTime=0
	 precacheTime=0
 }
 GeomEntity = {
	 Client = {
		 OnInit()
		 OnLevelLoaded()
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_Dead()
	 Event_Hide()
	 Event_Hit()
	 Event_MakeInvulnerable()
	 Event_MakeVulnerable()
	 Event_Remove()
	 Event_ResetHealth()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 MakeInvulnerable = {
				 [01]()
				 [02]=any
			 }
			 MakeVulnerable = {
				 [01]()
				 [02]=any
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 ResetHealth = {
				 [01]()
				 [02]=any
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Break=int
			 Dead=bool
			 Health=float
			 Hide=bool
			 Hit=bool
			 Remove=bool
			 UnHide=bool
		 }
	 }
	 GetHealthRatio()
	 GetMaxHealth()
	 IsDead()
	 IsInvulnerable()
	 OnEnablePhysics()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 PhysicalizeThis()
	 Properties = {
		 Health = {
			 MaxHealth=500
			 bInvulnerable=false
			 bOnlyEnemyFire=true
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 RenderProxyOptions = {
			 bAnimateOffScreenShadow=false
		 }
		 Script = {
			 Misc=
		 }
		 bAlwaysLoaded=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bSaved_by_game=false
		 bUpdateOnlyByScript=false
		 esFaction=
		 guidSmartObjectType=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 RegisterWithAI()
	 Reset()
	 Server = {
		 OnHit()
		 OnInit()
	 }
	 SetInteractiveCollisionType()
	 SetInvulnerability()
	 SetRenderProxyOptions()
	 SetupHealthProperties()
 }
 GhostDummy = {
	 Client = {
		 OnPhysicsBreak()
	 }
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Ragdollize()
	 Event_Remove()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 OnEditorSetGameMode()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=1
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=true
			 bRigidBody=true
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bExcludeCover=false
		 bExported_to_game=false
		 bExported_to_test=false
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bMissionCritical=false
		 bPickable=false
		 bSaved_by_game=true
		 bUsable=false
		 object_Model=
		 sWH_AI_EntityCategory=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 SetFromProperties()
	 SetupModel()
	 UpdateGhost()
	 UpdateMaterial()
 }
 GhostsController = {
	 OnEditorLayerLoaded()
	 OnPropertyChange()
	 OnSpawn()
	 UpdateGhosts()
 }
 Grindstone = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnInventoryItemUsed()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 fSpeedMultiplier=1
		 guidSmartObjectType=
		 nDifficulty=1
		 object_Model=objects/characters/assets/grindstone/grindstone.cdf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetupTrigger()
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 HAS_Disabled=1
 HAS_Enabled=2
 HAS_Undefined=0
 HPS_Disabled=1
 HPS_Enabled=2
 HPS_Undefined=0
 HS_LEFT=1
 HS_RIGHT=0
 Hare = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/wh_hare_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_hare_database.adb
	 CombatOpponentMnTag=oppHare
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 OpponentMnTag=relatedHare
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Hare
			 footstepEffect=footsteps_Hare
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=hare
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/hare/hare.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.25
		 pos = {
			 x=0
			 y=0
			 z=0.2
		 }
		 posCarcass = {
			 x=0
			 y=0.12
			 z=0.05
		 }
		 radius=0.1
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Hare
	 defaultSoulClass=hare
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.5
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.625
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=1.5
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=1.5
		 stiffness_scale=73
	 }
 }
 Hazard = {
	 AddScreenEffect()
	 Client = {
		 Activated = {
			 OnTimer()
		 }
		 AddScreenEffect()
		 Deactivated = {
			 OnTimer()
		 }
		 DoFX()
		 InitFX()
		 OnInit()
		 RemoveScreenEffect()
	 }
	 DoFX()
	 Editor = {
		 Icon=hazard.bmp
		 Model=Editor/Objects/T.cgf
		 ShowBounds=1
	 }
	 Event_Activated()
	 Event_Deactivated()
	 FlowEvents = {
		 Inputs = {
			 Activated = {
				 [02]=bool
				 [01]()
			 }
			 Deactivated = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activated=bool
			 Deactivated=bool
			 Enter=bool
			 Leave=bool
		 }
	 }
	 HandleEntities()
	 HandleEntity()
	 InitFX()
	 IsEntityAlreadyInTable()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 Properties = {
		 Damage = {
			 bOnlyPlayer=1
			 eiHazardType=0
			 fDamage=50
		 }
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 RemoveScreenEffect()
	 Server = {
		 Activated = {
			 OnBeginState()
			 OnEndState()
			 OnEnterArea()
			 OnLeaveArea()
			 OnTimer()
		 }
		 Deactivated = {
			 OnBeginState()
			 OnEnterArea()
			 OnLeaveArea()
		 }
		 OnInit()
	 }
	 States = {
		 [02]=Deactivated
		 [03]=Turning
		 [01]=Activated
	 }
	 __client_dispatch = {
		 [03]=RemoveScreenEffect:E
		 [01]=DoFX:
		 [04]=InitFX:
		 [02]=AddScreenEffect:E
		 AddScreenEffect()
		 DoFX()
		 InitFX()
		 RemoveScreenEffect()
		 __validated=false
	 }
	 __server_dispatch = {
		 __validated=false
	 }
	 type=Trigger
 }
 Hen = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_hen_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_hen_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Hare
			 footstepEffect=footsteps_Hare
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=false
		 bWH_PerceptibleObject=false
		 bWH_PerceptorObject=false
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/hen/hen_brown_light.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.07
		 pos = {
			 x=0
			 y=0
			 z=0.25
		 }
		 radius=0.15
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Hen
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.5
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.625
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=0.7
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=0.7
		 stiffness_scale=73
	 }
 }
 Hole = {
	 ChangeModel()
	 CreateHole()
	 Editor = {
		 Icon=DeadBody.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 Script = {
			 bLegalToDig=false
		 }
		 bCanBeUsed=true
		 bCover=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bPreview=false
		 bSaved_by_game=true
		 bSendMessage=false
		 fUsabilityDistance=5
		 guidSmartObjectType=
		 nDiggingTime=6.5
		 object_Model=objects/characters/assets/grave_pit/grave_pit.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetInteractive()
	 SetupTrigger()
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nDepth=0
	 nUserId=0
 }
 HoleDigging = {
	 CheckPlayerAboveHole()
 }
 Horse = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [02]=2
					 [01]=2.3
					 [03]=2.6
				 }
				 Slow = {
					 [03]=1.3
					 [01]=1.2
					 [02]=0.9
				 }
				 Sprint = {
					 [02]=6.5
					 [01]=6.8
					 [03]=7.1
				 }
				 Walk = {
					 [01]=1.7
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceAgentMinRadius=0.8
		 collisionAvoidanceAgentRadius=1.25
		 collisionAvoidanceObstacleOffest = {
			 x=0
			 y=0.3
			 z=0
		 }
		 collisionAvoidanceObstacleRadius=0.5
		 collisionAvoidanceObstacleTravel=0.8
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=0.5
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_horse_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_horse_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetInspectableByPlayer()
	 GetMountableByPlayer()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsMountLegal()
	 IsUsable()
	 NotifyRemoval()
	 OnBonding()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnInspect()
	 OnLoad()
	 OnLoadAI()
	 OnLoot()
	 OnMount()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSaveAI()
	 OnSpawn()
	 OnStartle()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_horse
			 footstepEffect=footsteps_horse_mat
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bMountIsLegal=false
		 bNotPlayerInspectable=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=horse2
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/horse/horse.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 SetInspectableByPlayer()
	 SetMountIsLegal()
	 SetMountIsLegalFromAI()
	 SetMountableByPlayer()
	 SetMountableByPlayerDisabledFromAI()
	 UseMannequinAGState=true
	 actorCombatDimension = {
		 size = {
			 x=0.5
			 y=1.3
			 z=0
		 }
	 }
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=1
		 pos = {
			 x=0
			 y=0
			 z=1.15
		 }
		 posCarcass = {
			 x=0.18
			 y=0
			 z=0.22
		 }
		 radius=0.32
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Horse
	 defaultSoulClass=horse
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.3
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.4
					 y=0.4
					 z=0.2
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 inspectableByPlayer=true
	 maxMountDistance=1.75
	 mountIsLegalFromAI=false
	 mountableByPlayer=true
	 mountableByPlayerDisabledFromAI=false
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=30
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=480
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=90
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=480
		 neckMass=1
		 stiffness_scale=73
	 }
	 simplifiedRootRotation=false
 }
 Horsetraders = {
	 RemoveHaggleMetarole()
	 SetupHaggle()
 }
 Hostile=0
 IF_ACTIVE_GOALS=0
 IF_ACTIVE_GOALS_HIDE=1
 IF_CANNOT_HIDE=6
 IF_CAN_HIDE=5
 IF_CAN_MELEE=14
 IF_CAN_SHOOT_TARGET=13
 IF_CAN_SHOOT_TARGET_CROUCHED=40
 IF_COVER_COMPROMISED=35
 IF_COVER_FIRE_ENABLED=42
 IF_COVER_NOT_COMPROMISED=36
 IF_COVER_NOT_SOFT=38
 IF_COVER_SOFT=37
 IF_EXPOSED_TO_TARGET=34
 IF_FIRE_IS=8
 IF_HAS_FIRED=9
 IF_IS_HIDDEN=4
 IF_LASTOP_FAILED=44
 IF_LASTOP_SUCCEED=45
 IF_NAV_TRIANGULAR=20
 IF_NAV_WAYPOINT_HUMAN=19
 IF_NO_ENEMY_TARGET=15
 IF_NO_LASTOP=10
 IF_NO_PATH=2
 IF_PATH_LONGER=16
 IF_PATH_LONGER_RELATIVE=18
 IF_PATH_SHORTER=17
 IF_PATH_STILL_FINDING=3
 IF_RANDOM=43
 IF_SEES_LASTOP=11
 IF_SEES_TARGET=12
 IF_STANCE_IS=7
 IF_TARGET_DIST_GREATER=23
 IF_TARGET_DIST_LESS=21
 IF_TARGET_IN_RANGE=24
 IF_TARGET_LOST_TIME_LESS=29
 IF_TARGET_LOST_TIME_MORE=28
 IF_TARGET_MOVED=33
 IF_TARGET_MOVED_SINCE_START=32
 IF_TARGET_OUT_OF_RANGE=25
 INT16=115
 INT32=105
 INT8=98
 INVALID_AUDIO_ENVIRONMENT_ID=0000000000000000
 INVALID_WUID=0000000000000000
 ImpressByPlayer()
 IndulgenceBoxTrigger = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsPenanceMeaningful()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@kajicna_p_slozit_odpustek_VfYM
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 IngameCutsceneData = {
	 Editor = {
		 Icon=sequence.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esGameProfile=
		 esSequenceName=
	 }
 }
 InteractionTrigger = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 InteractiveObjectEx = {
	 AbortUse()
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Reset()
	 Event_UnHide()
	 Event_Use()
	 Event_Used()
	 Event_UserId()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Reset = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Use = {
				 [02]=bool
				 [01]()
			 }
			 UserId = {
				 [02]=entity
				 [01]()
			 }
		 }
		 Outputs = {
			 Aborted=bool
			 Disabled=bool
			 Enabled=bool
			 Finished=bool
			 Hide=bool
			 Reset=bool
			 Started=bool
			 UnHide=bool
			 UsedBy=entity
		 }
	 }
	 GetUsableMessage()
	 IsUsable()
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnUsed()
	 Properties = {
		 Interaction = {
			 Interaction=OpenElevatorDoor
			 InteractionAngle=70
			 InteractionRadius=1.5
			 bRemoveDecalsOnUse=0
			 bStartInteractionOnExplosion=0
			 object_Model=Objects/prototype/ElevatorDoors/AnimatedElevatorDoors.cga
		 }
		 Physics = {
			 bRigidBody=false
		 }
		 UseMessage=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 bUsable=false
	 }
	 ResetOnUsed()
	 StopUse()
	 type=InteractiveObjectEx
	 userId=0000000000000000
 }
 InventoryDummyDog = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=1e+06
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathLookAhead=2
		 pathRadius=0.3
		 pathRegenIntervalDuringTrace=-1
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 walkSpeed=2
	 }
	 ActionController=Animations/Mannequin/ADB/inv_dog_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/inv_dog_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys
			 footstepEffect=footsteps
		 }
		 ControlProfile=2
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=true
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=dog
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=objects/characters/animals/dog/dog.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Dog
	 defaultSoulClass=dog
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 enabled=0
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 InventoryDummyHorse = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [02]=2
					 [01]=2.3
					 [03]=2.6
				 }
				 Slow = {
					 [03]=1.3
					 [01]=1.2
					 [02]=0.9
				 }
				 Sprint = {
					 [02]=6.5
					 [01]=6.8
					 [03]=7.1
				 }
				 Walk = {
					 [01]=1.7
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceAgentMinRadius=0.8
		 collisionAvoidanceAgentRadius=1.25
		 collisionAvoidanceObstacleOffest = {
			 x=0
			 y=0.3
			 z=0
		 }
		 collisionAvoidanceObstacleRadius=0.5
		 collisionAvoidanceObstacleTravel=0.8
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=0.5
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/inv_horse_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/inv_horse_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetInspectableByPlayer()
	 GetMountableByPlayer()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsMountLegal()
	 IsUsable()
	 NotifyRemoval()
	 OnBonding()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnInspect()
	 OnLoad()
	 OnLoadAI()
	 OnLoot()
	 OnMount()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSaveAI()
	 OnSpawn()
	 OnStartle()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_horse
			 footstepEffect=footsteps_horse_mat
		 }
		 ControlProfile=2
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=true
		 bMountIsLegal=false
		 bNotPlayerInspectable=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=horse2
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/horse/horse.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 SetInspectableByPlayer()
	 SetMountIsLegal()
	 SetMountIsLegalFromAI()
	 SetMountableByPlayer()
	 SetMountableByPlayerDisabledFromAI()
	 UseMannequinAGState=true
	 actorCombatDimension = {
		 size = {
			 x=0.5
			 y=1.3
			 z=0
		 }
	 }
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=1
		 pos = {
			 x=0
			 y=0
			 z=1.15
		 }
		 posCarcass = {
			 x=0.18
			 y=0
			 z=0.22
		 }
		 radius=0.32
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Horse
	 defaultSoulClass=horse
	 gameParams = {
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.3
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.4
					 y=0.4
					 z=0.2
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 inspectableByPlayer=true
	 maxMountDistance=1.75
	 mountIsLegalFromAI=false
	 mountableByPlayer=true
	 mountableByPlayerDisabledFromAI=false
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=30
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=480
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=90
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 enabled=0
		 flags=0
		 mass=480
		 neckMass=1
		 stiffness_scale=73
	 }
	 simplifiedRootRotation=false
 }
 InventoryDummyPlayer = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=6
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=3.5
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1
	 }
	 ActionController=Animations/Mannequin/ADB/inv_male_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/inv_male_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitInventoryDummyPlayer()
	 InitialSetup()
	 InteractorPriority=2
	 InventoryDummyPlayer_OnInit()
	 InventoryDummyPlayer_OnReset()
	 InventoryDummyPlayer_Reset()
	 InventoryDummyPlayer_ResetCommon()
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=2
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=true
		 bSaved_by_game=true
		 bSpawner=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=male2
		 esCommConfig=npc_default
		 esFaction=Civilians
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 defaultSoulArchetype=NPC
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 enabled=0
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 InventoryDummyPlayerFemale = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=6
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=3.5
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1
	 }
	 ActionController=Animations/Mannequin/ADB/wh_female_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_female_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitInventoryDummyPlayer()
	 InitialSetup()
	 InteractorPriority=2
	 InventoryDummyPlayer_OnInit()
	 InventoryDummyPlayer_OnReset()
	 InventoryDummyPlayer_Reset()
	 InventoryDummyPlayer_ResetCommon()
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=2
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=true
		 bSaved_by_game=true
		 bSpawner=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=female2
		 esCommConfig=npc_default
		 esFaction=Civilians
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/female/skeleton/female.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 defaultSoulArchetype=NPC_Female
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 enabled=0
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 InventoryWeapon = {
	 Category=approved
	 Implementation()
	 Inputs = {
		 [04] = {
			 [01]=DrawWeapon
			 [02]=bool
		 }
		 [01] = {
			 [01]=t_Activate
			 [02]=bool
		 }
		 [03] = {
			 [02]=string
			 [01]=ItemGUID
		 }
		 [02] = {
			 [02]=entityid
			 [01]=Entity
		 }
	 }
 }
 IsAnimal()
 IsFemale()
 IsInt()
 IsNumber()
 IsStr()
 IsTable()
 ItemManager = {
	 AddOnEquipBuff()
	 GetItem()
	 GetItemName()
	 GetItemOwner()
	 GetItemUIName()
	 IsItemOversized()
	 RemoveItem()
 }
 ItemSystem = {
	 GetPackItemByIndex()
	 GetPackNumItems()
	 GetPackPrimaryItem()
	 GiveItem()
	 GiveItemPack()
	 Reset()
	 SerializePlayerLTLInfo()
	 SetActorItem()
	 SetActorItemByName()
 }
 ItemUtils = {
	 AddMoneyToInventory()
	 CheckMoneyAmount()
	 CreateInvItem()
	 DeliverItemByPlayer()
	 GiveItem()
	 GiveItemToPlayer()
	 HasItem()
	 IsItemInInventory()
	 IsNullWeaponGuid()
	 MoneyTransaction()
	 RemoveInvItem()
	 RemoveMoneyFromInventory()
	 itemIDs = {
		 berans_chalice=b16db2b4-788a-4a04-8b9a-6ecfebcfc8ec
		 black_feather=c5b24e5e-69f0-4ed9-bc74-96c3de9dc677
		 bloodSack=76bada6c-15b5-4109-9857-0a261162849c
		 boar_tooth=a4f0f4c8-dc3f-4cb2-be89-f0f56fbb09fa
		 cizeks_dagger=67ef62fd-7d5a-4235-b68e-eede03cd9c99
		 dlc4_matej_die=c56c54b5-b113-41ce-a250-b4eb137909bc
		 dog_skin=c0dd0e15-8cb8-4342-9a4b-eb3d217421c9
		 lockpick=8d76f58e-a521-4205-a7e8-9ac077eee5f0
		 monasteryKey=56be1ad5-676e-4b6d-9d6d-e94f3164a90c
		 money=5ef63059-322e-4e1b-abe8-926e100c770e
		 necronomicon_treasure=7becbe4a-c4b4-448e-bb12-5a383da1db31
		 newhomes_prib_report=f37ae0ba-bdad-44e9-8f85-027cacf963a8
		 newhomes_rat_report=9036ea9d-c80a-4e0b-b0a1-09eb15efc449
		 raven_feather=2bf46965-a851-4602-8282-cbefe7f24945
		 wolf_teeth=7b1c57a3-54fd-441f-8cad-21157bd1a85b
	 }
 }
 JUMP_ANIM_FLY=0
 JUMP_ANIM_LAND=1
 JointGen = {
	 Editor = {
		 DisplayArrow=1
		 Icon=Shake.bmp
	 }
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 Properties = {
		 Impulse=1000
		 bExported_to_game=true
		 bExported_to_test=true
		 bForceEntityPieces=0
		 bHierarchical=1
		 bSaved_by_game=true
		 file_Material=
		 minSize=0.0003
		 object_BreakTemplate=objects/broken_cube.cgf
		 offset = {
			 x=0
			 y=0
			 z=0
		 }
		 radius=0.05
		 scale=1
	 }
 }
 KettleActionTrigger = {
	 CanEat()
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetEatItemClassId()
	 GetHint()
	 GetHintHold()
	 GetLinkedSmartObject()
	 GetOwner()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsKettleVirtuallyEmpty()
	 IsLegal()
	 IsLegalHold()
	 IsLegalImpl()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnNPCStateSearchDone()
	 OnPropertyChange()
	 OnReset()
	 OnResourcesHosted()
	 OnResourcesHostingInterrupted()
	 OnSave()
	 OnSpawn()
	 OnTriggerPoint()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=@ui_hud_use_item
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=Stance
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=sitting
			 sActionTags=
			 sAnimationResourceOverride=
			 sPersistentKettleStateVariable=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=None
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsWineBarrel=false
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 guidWineItemGuid=da94ed8b-5b3b-4e2f-8c85-34ea3d0090ea
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 LAS_ATTACK_CHAIN=10
 LAS_ATTACK_CHASE=16
 LAS_ATTACK_CIRCLE=2
 LAS_ATTACK_COORDINATED_FIRE1=11
 LAS_ATTACK_COORDINATED_FIRE2=12
 LAS_ATTACK_FLANK=3
 LAS_ATTACK_FLANK_HIDE=4
 LAS_ATTACK_FOLLOW_LEADER=5
 LAS_ATTACK_FRONT=9
 LAS_ATTACK_FUNNEL=6
 LAS_ATTACK_HIDE=14
 LAS_ATTACK_HIDE_COVER=8
 LAS_ATTACK_LEAPFROG=7
 LAS_ATTACK_ROW=1
 LAS_ATTACK_SWITCH_POSITIONS=15
 LAS_ATTACK_USE_SPOTS=13
 LAS_DEFAULT=0
 LAS_SEARCH_COVER=18
 LAS_SEARCH_DEFAULT=17
 LA_ATTACK=3
 LA_FOLLOW=5
 LA_HIDE=1
 LA_HOLD=2
 LA_NONE=0
 LA_SEARCH=4
 LA_USE=6
 LA_USE_VEHICLE=7
 LODArea = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 connecting_outside=false
	 }
	 type=LODArea
 }
 Ladder = {
	 Editor = {
		 Icon=ladder.bmp
		 IconOnTop=1
	 }
	 GetActions()
	 IsUsable()
	 OnLoad()
	 OnPropertyChange()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 Movement = {
			 movementAcceleration=5
			 movementInertiaDecayRate=5.5
			 movementSettleSpeed=0.8
			 movementSpeedDownwards=2.25
			 movementSpeedUpwards=2.5
		 }
		 Offsets = {
			 bShowHelpers=false
			 getOnDistanceAwayBottom=0
			 getOnDistanceAwayTop=0.85
			 verticalDistanceBetweenRungs=0.25
		 }
		 ViewLimits = {
			 horizontalViewLimit=30
			 verticalDownViewLimit=-45
			 verticalUpViewLimit=45
		 }
		 bDrawWeaponOntop=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=true
		 bSaved_by_game=false
		 bTopBlocked=false
		 bTopOnPalisade=false
		 bUsable=true
		 bUseOnlyFromFront=true
		 esLadderType=Ladder
		 esNavCompoment=Ladder
		 fileModel=objects/manmade/common_fixtures/ladders/ladder.cgf
		 guidSmartObjectType=
		 height=3.7
		 sWH_AI_EntityCategory=Ladder
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 Server = {
		 OnUpdate()
	 }
	 SetInteractiveCollisionType()
	 SetUsable()
 }
 Lamp = {
	 Cleanup()
	 FlowEvents = {
		 Inputs = {
			 ModelReset = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 ModelReset=bool
		 }
	 }
	 GetActions()
	 GetUsableName()
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 ModelReset()
	 OnDestroy()
	 OnEnablePhysics()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bSaved_by_game=true
		 sWH_AI_EntityCategory=
	 }
	 Properties2 = {
		 Helper=slt_particle
		 LightSource=Lights.Standard.Light_Lantern
		 ParticleEffect=WH_Particels.fires.candle
	 }
	 SetInteractiveCollisionType()
	 TurnLightOn()
	 Use()
	 npcOnly=false
 }
 LayerProfile = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esGameProfile=
	 }
 }
 LedgeObject = {
	 Editor = {
		 Icon=ledge.bmp
		 ShowBounds=1
	 }
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
			 StartUse=entity
		 }
	 }
	 IsClosed()
	 IsShapeOnly()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 MainSide = {
			 bEndCrouched=false
			 bEndFalling=false
			 bUsableByMarines=true
			 esLedgeType=Vault
		 }
		 OppositeSide = {
			 bEndCrouched=false
			 bEndFalling=false
			 bUsableByMarines=true
			 esLedgeType=Vault
		 }
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsThin=true
		 bIsWindow=false
		 bLedgeDoubleSide=true
		 bLedgeFlipped=false
		 bSaved_by_game=false
		 fCornerEndAdjustAmount=0.5
		 fCornerMaxAngle=130
	 }
	 ShapeMaxPoints()
	 ShapeMinPoints()
	 StartUse()
 }
 LedgeObjectStatic = {
	 Editor = {
		 Icon=ledge.bmp
		 ShowBounds=1
	 }
	 ExportToGame()
	 IsClosed()
	 IsShapeOnly()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 MainSide = {
			 bEndCrouched=false
			 bEndFalling=false
			 bUsableByMarines=true
			 esLedgeType=Vault
		 }
		 OppositeSide = {
			 bEndCrouched=false
			 bEndFalling=false
			 bUsableByMarines=true
			 esLedgeType=Vault
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsThin=true
		 bIsWindow=false
		 bLedgeDoubleSide=true
		 bLedgeFlipped=false
		 bSaved_by_game=false
		 fCornerEndAdjustAmount=0.5
		 fCornerMaxAngle=130
	 }
	 ShapeMaxPoints()
	 ShapeMinPoints()
 }
 LevelHolder = {
	 Editor = {
		 Icon=LevelHolder.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 iLevelId=-1
	 }
 }
 Light = {
	 ActivateLight()
	 CacheResources()
	 Editor = {
		 AbsoluteRadius=1
		 Icon=Light.bmp
		 IsScalable=false
		 ShowBounds=0
	 }
	 Event_Active()
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Active = {
				 [02]=bool
				 [01]()
			 }
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Active=bool
		 }
	 }
	 GetLightDesc()
	 InitTodActiveTable()
	 LoadLightToSlot()
	 NotifySwitchOnOffFromParent()
	 OnInit()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyAnimated()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSysSpecLightChanged()
	 Properties = {
		 Color = {
			 clrDiffuse = {
				 x=1
				 y=1
				 z=1
			 }
			 fDiffuseMultiplier=1
			 fGIMultiplier=1
			 fSpecularMultiplier=1
			 fVolumetricMultiplier=1
		 }
		 Options = {
			 bAffectsThisAreaOnly=true
			 bAffectsVolumetricFogOnly=false
			 bAmbient=false
			 bCutsceneLight=false
			 bFakeLight=false
			 bIgnoresVisAreas=false
			 bVolumetricFog=true
			 esGIMode=None
			 fFogRadialLobe=0
			 fVerticalClipDistanceDownward=0
			 fVerticalClipDistanceUpward=0
			 file_deferred_clip_geom=
		 }
		 Projector = {
			 bSpotShadow=false
			 bSpotShadowBack=false
			 bSpotShadowBottom=false
			 bSpotShadowLeft=false
			 bSpotShadowRight=false
			 bSpotShadowTop=false
			 fProjectorFov=90
			 fProjectorNearPlane=0
			 texture_Texture=
		 }
		 Radius=10
		 Shadows = {
			 bDisableShadowCutoff=false
			 bScreenSpaceShadowsFallbackWH=false
			 fShadowAutoBiasScale=1
			 fShadowBias=1
			 fShadowJitterWH=0
			 fShadowResolutionScale=1
			 fShadowSlopeBias=1
			 fShadowUpdateMinRadius=10
			 fShadowUpdateRatio=1
			 nCastShadows=0
			 nShadowMinResPercent=0
		 }
		 Shape = {
			 bAreaLight=false
			 bAreaPhysicalAttenuation=false
			 fFadeInRadius=0
			 fNearClip=0
			 fPlaneHeight=1
			 fPlaneWidth=1
			 fWallChamferHorizontal=45
			 fWallChamferVertical=45
			 fWallThickness=0
			 fWindowMarginHorizontal=0
			 fWindowMarginVertical=0
		 }
		 Style = {
			 _fTimeScrubbed=0
			 bAttachToSun=false
			 bFlareEnable=true
			 bTimeScrubbingInTrackView=false
			 esLightAnimType=LoopConstantSeed
			 fAnimationSpeed=1
			 fFlareFOV=360
			 flare_Flare=
			 lightanimation_LightAnimation=
			 nAnimationPhase=0
			 nLightStyle=0
		 }
		 bActive=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 fAttenuationBulbSize=0.05
		 sToDActive=
		 sWH_AI_EntityCategory=
	 }
	 SetColorParams()
	 UpdateLightTOD()
 }
 LightSlot=1
 Lightning = {
	 CacheResources()
	 Editor = {
		 Icon=Lightning.bmp
		 Model=Editor/Objects/Particles.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 Event_Strike()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Strike = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Strike=bool
		 }
	 }
	 GetValueWithVariation()
	 LoadLightToSlot()
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 OnStartGame()
	 OnTimer()
	 OnUpdate()
	 Properties = {
		 Audio = {
			 audioRTPCDistanceRtpc=
			 audioRTPCIntensityRtpc=lightning_intensity
			 audioTriggerPlayTrigger=lightning
			 audioTriggerStopTrigger=
			 fSpeedOfSoundScale=1
		 }
		 Effects = {
			 LightIntensity=0
			 LightRadius=0
			 ParticleEffect=WH_Particels.weather.lightning_1
			 ParticleScale=0.5
			 ParticleScaleVariation=0.2
			 SkyHighlightAtten=0.2
			 SkyHighlightMultiplier=1
			 SkyHighlightVerticalOffset=1000
			 color_SkyHighlightColor = {
				 x=0.8
				 y=0.8
				 z=1
			 }
		 }
		 Timing = {
			 fDelay=20
			 fDelayVariation=0.8
			 fLightningDuration=0.5
		 }
		 bActive=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bRelativeToPlayer=1
		 bSaved_by_game=true
		 fDistance=2000
		 fDistanceVariation=0.5
	 }
	 ScheduleNextStrike()
	 StopStrike()
	 TempPos = {
		 x=0
		 y=0
		 z=0
	 }
	 UpdateLightningParams()
	 _KillAllAudioTimers()
	 _LightTable = {
		 diffuse_color = {
			 x=1
			 y=1
			 z=1
		 }
		 specular_color = {
			 x=1
			 y=1
			 z=1
		 }
	 }
	 _LookupControlIDs()
	 _SkyHighlight = {
		 color = {
			 x=0
			 y=0
			 z=0
		 }
		 position = {
			 x=0
			 y=0
			 z=0
		 }
		 size=0
	 }
	 _StrikeCount=0
	 nAudioTimerMinID=2
	 nNumAuxAudioProxies=4
	 nNumThunder=1
 }
 LoadAllScripts()
 LocationPoint = {
	 Editor = {
		 Icon=TagPoint.bmp
	 }
	 OnInit()
	 OnReset()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 guidLocationId=
	 }
	 type=LocationPoint
 }
 Lockpickable = {
	 DoPlaySound()
	 DoStopSound()
	 Editor = {
		 Icon=lockpickable.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Hide()
	 Event_Lock()
	 Event_UnHide()
	 Event_Unlock()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Lock = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Unlock = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hide=bool
			 Lock=bool
			 UnHide=bool
			 Unlock=bool
		 }
	 }
	 GetActions()
	 GetLockDifficulty()
	 GetUsableEvent()
	 IsUsable()
	 IsUsableHold()
	 IsUsableMsgChanged()
	 Lock()
	 LockType=pillory
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Lock = {
			 bCanLockPick=true
			 bLocked=true
			 bSendMessage=false
			 esLockFanciness=Common
			 fLockDifficulty=0.1
			 guidItemClassId=
		 }
		 Phase = {
			 bChangeAfterPlayerInteract=false
			 object_ModelAfterInteract=
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractableThroughCollision=false
		 bOwnedByHome=true
		 bSaved_by_game=true
		 bSkipAngleCheck=false
		 fUseAngle=0.3
		 fUseDistance=1.5
		 fUseLockpickAngle=0.8
		 fUseLockpickDistance=1.5
		 fUseSlotRotationAngle=0
		 fUseXOffset=0
		 fUseYOffset=0
		 fUseZOffset=0
		 guidSmartObjectType=
		 object_Model=Objects/manmade/food/food/egg.cgf
		 sPickPlaceAnimTag=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 SetBeingUsedByNPC()
	 SetBeingUsedByPlayer()
	 SetInteractive()
	 Unlock()
	 bLocked=false
	 bNeedUpdate=0
	 bUseableMsgChanged=0
	 nSoundId=0
	 nUserId=0
 }
 LuaUtils = {
	 IsInt()
	 IsNumber()
	 IsStr()
	 IsTable()
	 NativeToStr()
	 NumberToBool()
	 Pick()
	 StrToNative()
 }
 MFT_Always=2
 MFT_Disabled=0
 MFT_UseCoverFireTime=1
 MFX_INVALID_EFFECTID=0
 MKS_Disabled=1
 MKS_Enabled=2
 MKS_Undefined=0
 MO_ACTIVATED=3
 MO_COMPLETED=1
 MO_DEACTIVATED=0
 MO_FAILED=2
 MTL_LAYER_CLOAK=4
 MTL_LAYER_FROZEN=1
 MTL_LAYER_WET=2
 MaterialEffects = {
	 ExecuteEffect()
	 GetEffectId()
	 GetEffectIdByLibName()
	 PrintEffectIdByMatIndex()
 }
 MergeInternal()
 Minigame = {
	 CanStartReadingMinigame()
	 CanUseMinigame()
	 GetBookStudyProgress()
	 StartDice()
	 StartDiceByName()
	 StartDiceWithScore()
	 StartHerbGathering()
	 StartHoleDigging()
	 StartLockPicking()
	 WasBookOpened()
 }
 MissileWeapon = {
	 GetActions()
	 GetUsableName()
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 OnEnablePhysics()
	 OnLevelLoaded()
	 OnPropertyChange()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bSaved_by_game=true
	 }
	 SetInteractiveCollisionType()
	 Use()
	 __super = {
		 GetActions()
		 GetUsableName()
		 InteractorPriority=2
		 IsCrossCenteringEnabled()
		 OnEnablePhysics()
		 OnLevelLoaded()
		 OnPropertyChange()
		 OnUsed()
		 OnUsedHold()
		 PhysicalizeThis()
		 Properties = {
			 Script = {
				 Misc=
			 }
			 bExported_to_game=true
			 bExported_to_test=true
			 bInteractiveCollisionClass=false
			 bSaved_by_game=true
		 }
		 SetInteractiveCollisionType()
		 Use()
		 npcOnly=false
	 }
	 npcOnly=false
 }
 MissionObjective = {
	 Activated = {
		 OnBeginState()
		 OnEndState()
	 }
	 Completed = {
		 OnBeginState()
	 }
	 Deactivated = {
		 OnBeginState()
	 }
	 Editor = {
		 Icon=TagPoint.bmp
		 Model=Editor/Objects/T.cgf
	 }
	 Event_Activate()
	 Event_Completed()
	 Event_Deactivate()
	 Event_Failed()
	 Event_SilentActivate()
	 Event_SilentDeactivate()
	 Failed = {
		 OnBeginState()
	 }
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 Completed = {
				 [02]=bool
				 [01]()
			 }
			 Deactivate = {
				 [02]=bool
				 [01]()
			 }
			 Failed = {
				 [02]=bool
				 [01]()
			 }
			 SilentActivate = {
				 [02]=bool
				 [01]()
			 }
			 SilentDeactivate = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activated=bool
			 Completed=bool
			 Deactivated=bool
			 Failed=bool
		 }
	 }
	 OnDestroy()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsPathHelper=0
		 bSaved_by_game=true
		 bShowOnRadar=1
		 mission_MissionID=
		 sTrackedEntityName=
	 }
	 Reset()
	 States = {
		 [04]=Completed
		 [01]=Deactivated
		 [03]=Failed
		 [02]=Activated
	 }
 }
 Movie = {
	 AbortSequence()
	 PauseSequences()
	 PlaySequence()
	 ResumeSequences()
	 StopAllCutScenes()
	 StopAllSequences()
	 StopSequence()
 }
 MovingSmartObjectHolder = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bMovingSmartObject=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 MusicCutscene = {
	 Editor = {
		 Icon=AudioAreaEntity.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
	 }
 }
 NAVMASK_SURFACE=198
 NAV_FLIGHT=16
 NAV_FREE_2D=256
 NAV_ROAD=64
 NAV_SMARTOBJECT=128
 NAV_TRIANGULAR=2
 NAV_UNSET=1
 NAV_VOLUME=32
 NAV_WAYPOINT_3DSURFACE=8
 NAV_WAYPOINT_HUMAN=4
 NOT=256
 NO_ATTACH=2
 NPC = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Alerted = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [02]=1.4
					 [01]=1.4
					 [03]=1.4
				 }
			 }
			 Combat = {
				 Run = {
					 [01]=4.5
					 [03]=4.5
					 [02]=4.5
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [01]=6
					 [02]=6
					 [03]=6
				 }
				 Walk = {
					 [01]=1.7
					 [03]=1.7
					 [02]=1.7
				 }
			 }
			 Crouch = {
				 Run = {
					 [02]=2
					 [01]=2
					 [03]=2
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=2
					 [01]=2
					 [03]=2
				 }
				 Walk = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
			 }
			 HighCover = {
				 Run = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Slow = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
				 Sprint = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Walk = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
			 }
			 LowCover = {
				 Run = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Slow = {
					 [01]=0.9
					 [03]=0.9
					 [02]=0.9
				 }
				 Sprint = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Walk = {
					 [01]=0.9
					 [03]=0.9
					 [02]=0.9
				 }
			 }
			 Relaxed = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [02]=0.6
					 [03]=0.6
					 [01]=0.6
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [01]=1.1
					 [02]=1.1
					 [03]=1.1
				 }
			 }
			 Swim = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [01]=1
					 [02]=1
					 [03]=1
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [01]=1
					 [02]=1
					 [03]=1
				 }
			 }
		 }
		 aimTurnSpeed=-1
		 allowEntityClampingByAnimation=1
		 avoidanceAbilities=65535
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 directionalScaleRefSpeedMax=8
		 directionalScaleRefSpeedMin=1
		 distanceToCover=0.5
		 effectiveCoverHeight=0.55
		 effectiveHighCoverHeight=1.75
		 fireTurnSpeed=-1
		 inCoverRadius=0.075
		 lightAffectsSpeed=1
		 lookCombatTurnSpeed=50
		 lookIdleTurnSpeed=30
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=0.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.25
		 pathRegenIntervalDuringTrace=1
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=1
		 pushableObstacleAvoidanceRadius=0.4
		 pushableObstacleWeakAvoidance=true
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=2
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_male_controllerdefs.xml
	 ActorCanTalk()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_male_database.adb
	 CombatOpponentMnTag=oppMale
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsableMsgChanged()
	 NotifyRemoval()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 OpponentMnTag=relatedMale
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.08
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_CreateSituationSubsystem=true
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 eiSoundObstructionType=2
		 esBehaviorSelectionTree=
		 esClothingConfig=male2
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 perInstanceStreamingPriority=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 collisionDamageThreshold=2
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 lookFOV=180
		 minimumAngleForTurnWithoutDelay=20
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 lastCanTalkHintFlag=true
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 NPC_Female = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Alerted = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [02]=1.4
					 [01]=1.4
					 [03]=1.4
				 }
			 }
			 Combat = {
				 Run = {
					 [01]=4.5
					 [03]=4.5
					 [02]=4.5
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [01]=6
					 [02]=6
					 [03]=6
				 }
				 Walk = {
					 [01]=1.7
					 [03]=1.7
					 [02]=1.7
				 }
			 }
			 Crouch = {
				 Run = {
					 [02]=2
					 [01]=2
					 [03]=2
				 }
				 Slow = {
					 [01]=0.8
					 [03]=0.8
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=2
					 [01]=2
					 [03]=2
				 }
				 Walk = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
			 }
			 HighCover = {
				 Run = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Slow = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
				 Sprint = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Walk = {
					 [03]=1.3
					 [01]=1.3
					 [02]=1.3
				 }
			 }
			 LowCover = {
				 Run = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Slow = {
					 [01]=0.9
					 [03]=0.9
					 [02]=0.9
				 }
				 Sprint = {
					 [02]=1.8
					 [01]=1.8
					 [03]=1.8
				 }
				 Walk = {
					 [01]=0.9
					 [03]=0.9
					 [02]=0.9
				 }
			 }
			 Relaxed = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [02]=0.6
					 [03]=0.6
					 [01]=0.6
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [01]=1.1
					 [02]=1.1
					 [03]=1.1
				 }
			 }
			 Swim = {
				 Run = {
					 [02]=3.5
					 [01]=3.5
					 [03]=3.5
				 }
				 Slow = {
					 [01]=1
					 [02]=1
					 [03]=1
				 }
				 Sprint = {
					 [02]=5
					 [03]=5
					 [01]=5
				 }
				 Walk = {
					 [01]=1
					 [02]=1
					 [03]=1
				 }
			 }
		 }
		 aimTurnSpeed=-1
		 allowEntityClampingByAnimation=1
		 avoidanceAbilities=65535
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 directionalScaleRefSpeedMax=8
		 directionalScaleRefSpeedMin=1
		 distanceToCover=0.5
		 effectiveCoverHeight=0.55
		 effectiveHighCoverHeight=1.75
		 fireTurnSpeed=-1
		 inCoverRadius=0.075
		 lightAffectsSpeed=1
		 lookCombatTurnSpeed=50
		 lookIdleTurnSpeed=30
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=0.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.25
		 pathRegenIntervalDuringTrace=-1
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=1
		 pushableObstacleAvoidanceRadius=0.4
		 pushableObstacleWeakAvoidance=true
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=2
	 }
	 ActionController=Animations/Mannequin/ADB/wh_female_controllerdefs.xml
	 ActorCanTalk()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_female_database.adb
	 CombatOpponentMnTag=oppFemale
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsableMsgChanged()
	 NotifyRemoval()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 OpponentMnTag=relatedFemale
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.01
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_CreateSituationSubsystem=true
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 eiSoundObstructionType=2
		 esBehaviorSelectionTree=
		 esClothingConfig=female2
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/female/skeleton/female.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 perInstanceStreamingPriority=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 defaultSoulArchetype=NPC_Female
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 lookFOV=180
		 minimumAngleForTurnWithoutDelay=20
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.5
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.5
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.5
				 }
			 }
		 }
	 }
	 lastCanTalkHintFlag=true
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 NPC_NAI = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=6
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=3.5
		 sprintSpeed=6.4
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_male_controllerdefs.xml
	 ActorCanTalk()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_male_database.adb
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitNPC_NAI()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 NPC_NAI_OnInit()
	 NPC_NAI_OnReset()
	 NPC_NAI_Reset()
	 NPC_NAI_ResetCommon()
	 NotifyRemoval()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_npc
			 footstepEffect=footsteps_npc
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=male2
		 esCommConfig=npc_default
		 esFaction=Civilians
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 voiceType=enemy
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 defaultSoulArchetype=NPC
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 NULL_ENTITY=0000000000000000
 NavigationSeedPoint = {
	 Editor = {
		 Icon=Seed.bmp
	 }
	 OnInit()
	 type=NavigationSeedPoint
 }
 NavigationUtils = {
	 DotProduct()
	 GetChasingPoint()
	 GetChasingPointInOpposingQuadrant()
	 GetChasingPointOpposingTwoQuadrants()
	 GetSurroundingChasingPoint()
 }
 Negotiation = {
	 CalcAcceptableTolerance()
	 CalcDominance()
	 CalcImpatienceIncMod()
	 CalcPriceRatio()
	 CalcReaction()
	 CalcStep()
	 CheckImpatienceOverLimit()
	 GetMerchantMoney()
	 GetPlayerMoney()
	 HasSecondChance()
	 Init()
	 InitControls()
	 InitDominance()
	 OpenWithBaseProposition()
	 ReactToPlayerProposition()
	 RecalcIntermediateValues()
	 RecalcPlayerSellsValue()
	 Round()
	 SpendSecondChance()
	 UpdateUiState()
	 new()
 }
 NegotiationOrientation = {
 }
 NegotiationProposition = {
	 GetImpatience()
	 GetPrice()
	 new()
 }
 NegotiationReactionKind = {
	 Accept = {
		 index=1
	 }
	 Counter = {
		 index=2
	 }
	 Mock = {
		 index=3
	 }
	 Refuse = {
		 index=4
	 }
 }
 NegotiationReason = {
	 Bathhouse = {
		 index=5
	 }
	 Bribe = {
		 index=2
	 }
	 Haggle = {
		 index=1
	 }
	 Sleepover = {
		 index=3
	 }
	 Trainer = {
		 index=4
	 }
 }
 NegotiationUtils = {
	 PlayTransactionSound()
	 SetupNegotiation()
 }
 Nest = {
	 AfterReset()
	 AfterShot()
	 AssignInventory()
	 CanBeUsed()
	 Client = {
		 OnHit()
	 }
	 Close()
	 DoPlaySound()
	 DoStopSound()
	 Editor = {
		 Icon=Stash.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Close()
	 Event_Hide()
	 Event_Open()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Close = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Open = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Close=bool
			 Hide=bool
			 Open=bool
			 UnHide=bool
		 }
	 }
	 GetActions()
	 GetSoundTriggerID()
	 IsUsable()
	 NeedSerialize()
	 OnInventoryClosed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 Open()
	 PhysicalizeThis()
	 Properties = {
		 Database = {
			 bReadOnly=false
			 guidInventoryDBId=0
			 nRestockPeriodDays=0
			 sInventoryPreset=inventory_birdNest
		 }
		 Lock = {
			 bCanLockPick=false
			 bCanUnlockWithDynamicKey=false
			 bLockDifficultyOverride=false
			 bLocked=false
			 bSendMessage=false
			 esLockFanciness=Common
			 fLockDifficulty=1
			 guidItemClassId=
		 }
		 ParticleEffect=
		 Physics = {
			 Density=-1
			 Mass=1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 Sounds = {
			 snd_Birds=a_l_poi_birdnest
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 isShootingTarget=true
		 object_Model=Objects/natural/animal/bird_nest.cgf
	 }
	 Reset()
	 StartParticleEffect()
	 __super = {
		 AssignInventory()
		 Client = {
			 OnHit()
		 }
		 Close()
		 DoPlaySound()
		 DoStopSound()
		 Editor = {
			 Icon=Stash.bmp
			 IconOnTop=1
			 ShowBounds=1
		 }
		 Event_Close()
		 Event_Hide()
		 Event_Open()
		 Event_UnHide()
		 FlowEvents = {
			 Inputs = {
				 Close = {
					 [02]=bool
					 [01]()
				 }
				 Hide = {
					 [02]=bool
					 [01]()
				 }
				 Open = {
					 [02]=bool
					 [01]()
				 }
				 UnHide = {
					 [02]=bool
					 [01]()
				 }
			 }
			 Outputs = {
				 Close=bool
				 Hide=bool
				 Open=bool
				 UnHide=bool
			 }
		 }
		 GetSoundTriggerID()
		 IsUsable()
		 NeedSerialize()
		 OnInventoryClosed()
		 OnPropertyChange()
		 OnReset()
		 OnSave()
		 OnSpawn()
		 OnUsed()
		 Open()
		 PhysicalizeThis()
		 Properties = {
			 Database = {
				 bReadOnly=false
				 guidInventoryDBId=0
				 nRestockPeriodDays=0
				 sInventoryPreset=
			 }
			 Lock = {
				 bCanLockPick=false
				 bCanUnlockWithDynamicKey=false
				 bLockDifficultyOverride=false
				 bLocked=false
				 bSendMessage=false
				 esLockFanciness=Common
				 fLockDifficulty=1
				 guidItemClassId=
			 }
			 ParticleEffect=
			 Physics = {
				 Density=-1
				 Mass=1
				 bPhysicalize=true
				 bPushableByPlayers=false
				 bRigidBody=true
			 }
			 object_Model=Objects/natural/animal/bird_nest.cgf
		 }
		 Reset()
		 StartParticleEffect()
		 bLocked=false
		 inventoryId=0
		 shot=0
	 }
	 bLocked=false
	 inventoryId=0
	 shot=0
 }
 Net = {
	 DelegateAuthority()
	 Expose()
 }
 Neutral=1
 NullAI = {
	 AIMovementAbility = {
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=1e+06
		 maxDecel=1e+06
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathLookAhead=2
		 pathRadius=0.3
		 pathRegenIntervalDuringTrace=-1
		 resolveStickingInTrace=1
		 runSpeed=4
		 sprintSpeed=6.4
		 walkSpeed=2
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_male_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_male_database.adb
	 AnimationGraph=
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitNullAI()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 NotifyRemoval()
	 NullAI_OnInit()
	 NullAI_OnReset()
	 NullAI_OnSpawn()
	 NullAI_Reset()
	 NullAI_ResetCommon()
	 NullAI_SetActorModel()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnInit()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys
			 footstepEffect=footsteps
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=Player
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bSaved_by_game=true
		 bSpawner=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=
		 fileModel=
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
		 soclasses_SmartObjectClass=
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UpperBodyGraph=
	 _Parent = {
		 OnReset()
		 OnSpawn()
		 Reset()
		 ResetCommon()
		 SetActorModel()
	 }
	 ai=1
	 defaultSoulArchetype=NPC
	 gameParams = {
		 physicsParams = {
			 Living = {
				 inertia=0
				 inertiaAccel=0
			 }
		 }
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 hitDeathReactionsParamsDefFile=
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
 }
 ORDERED=0
 OnInit()
 OnShutdown()
 OverriddenAndAiming=1
 OverriddenAndNotAiming=2
 PE_AREA=9
 PE_ARTICULATED=6
 PE_LIVING=4
 PE_NONE=0
 PE_PARTICLE=5
 PE_RIGID=2
 PE_ROPE=7
 PE_SOFT=8
 PE_STATIC=1
 PE_WHEELEDVEHICLE=3
 PFB_ATT_TARGET=1
 PFB_BEACON=3
 PFB_BETWEEN_NAV_TARGET=7
 PFB_DEAD_BODIES=4
 PFB_EXPLOSIVES=5
 PFB_NONE=0
 PFB_PLAYER=6
 PFB_REF_POINT=2
 PFT_COOK=0
 PFT_DRY=2
 PFT_SMOKE=1
 PHYSICPARAM_ARTICULATED=6
 PHYSICPARAM_AUTO_DETACHMENT=20
 PHYSICPARAM_BUOYANCY=9
 PHYSICPARAM_COLLISION_CLASS=21
 PHYSICPARAM_CONSTRAINT=10
 PHYSICPARAM_FLAGS=12
 PHYSICPARAM_FOREIGNDATA=19
 PHYSICPARAM_GROUND_PLANE=18
 PHYSICPARAM_JOINT=7
 PHYSICPARAM_PARTICLE=1
 PHYSICPARAM_PART_FLAGS=16
 PHYSICPARAM_PLAYERDIM=4
 PHYSICPARAM_PLAYERDYN=3
 PHYSICPARAM_REMOVE_CONSTRAINT=11
 PHYSICPARAM_ROPE=8
 PHYSICPARAM_SIMULATION=5
 PHYSICPARAM_SOFTBODY=14
 PHYSICPARAM_SUPPORT_LATTICE=17
 PHYSICPARAM_VEHICLE=2
 PHYSICPARAM_VELOCITY=15
 PHYSICPARAM_WHEEL=13
 POSTURE_AIM=2
 POSTURE_HIDE=3
 POSTURE_NULL=0
 POSTURE_PEEK=1
 POST_ATTACH=1
 PRE_ATTACH=0
 Particle = {
	 CreateDecal()
	 CreateEffect()
	 CreateMatDecal()
	 DeleteEffect()
	 IsEffectAvailable()
	 SpawnEffect()
	 SpawnEffectLine()
	 SpawnParticles()
 }
 PathfindDebugUtils = {
	 Data = {
		 Speed=walk
	 }
	 FindDataTable()
	 GenerateSpawnParams()
	 GetNPCSpeed()
	 Presets = {
		 SoulName=test_pathfollower_dummy
		 SoulSharedGUID=88bee0ec-f164-4282-ae1e-6576a76b9bac
	 }
	 SaveDestinationPos()
	 SaveOriginPos()
	 SetNPCSpeed()
	 SpawnNPC()
	 SpawnOrMoveTagPointToPlayerPos()
 }
 PersuadeByPlayer()
 Physics = {
	 RayTraceCheck()
	 RayWorldIntersection()
	 RegisterExplosionCrack()
	 RegisterExplosionShape()
	 SamplePhysEnvironment()
	 SimulateExplosion()
 }
 Pick()
 PickableArea = {
	 Activate()
	 Amount=0
	 ArePickableAreasEnabledInGeneral()
	 DisablePickableAreasInGeneral()
	 Editor = {
		 Icon=Seed.bmp
		 IconOnTop=1
	 }
	 EnablePickableAreasInGeneral()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
			 }
			 UnHide = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Hide=bool
			 UnHide=bool
		 }
	 }
	 Gather()
	 GetActions()
	 GetUsableName()
	 GuidItemPicked=
	 IsCrossCenteringEnabled()
	 PickingTime=1
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bHasUsableFlag=true
		 bSaved_by_game=true
		 sUsableMessage=@ui_pickherb
		 sWH_AI_EntityCategory=
	 }
	 UsableName=
 }
 Pig = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_pig_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_pig_database.adb
	 CombatOpponentMnTag=oppPig
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Sheep
			 footstepEffect=footsteps_Sheep
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=pig
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/pig/pig_female.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.8
		 pos = {
			 x=0
			 y=0.15
			 z=0.6
		 }
		 posCarcass = {
			 x=0.25
			 y=0.1
			 z=0.25
		 }
		 radius=0.25
	 }
	 collisionClass=524288
	 defaultSoulArchetype=Pig
	 defaultSoulClass=pig
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 relaxed = {
				 heightCollider=0.4
				 heightPivot=0
				 name=relaxed
				 size = {
					 x=0.1
					 y=0
					 z=0.1
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=100
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=100
		 stiffness_scale=73
	 }
 }
 Player = {
	 AIMovementAbility = {
		 collisionAvoidanceObstacleRadius=0.7
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_male_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_male_database.adb
	 CheatEngine()
	 CheatEngine_animal()
	 CheatEngine_equipweapon()
	 CheatEngine_money()
	 CheatEngine_skill()
	 CheatEngine_stat()
	 CheatEngine_time()
	 CheatGiveBow()
	 Client = {
		 OnInit()
	 }
	 CombatOpponentMnTag=oppMale
	 GetDogActions()
	 InitialSetup()
	 InteractorPriority=2
	 IsChatUsable=0
	 IsDogUsable=1
	 OnAction()
	 OnDogRequest()
	 OnInit()
	 OnLoadAI()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OpponentMnTag=relatedMale
	 PRTelep()
	 PRTelepShowMessage()
	 PRTelep_unlock()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys_player
			 footstepEffect=footsteps_player
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=1
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SoundPack=ai_player_default
		 aicharacter_character=Player
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsDummy=false
		 bSaved_by_game=true
		 clientFileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 commrange=40
		 esClothingConfig=male2
		 esCommConfig=player_default
		 esNavigationType=MediumSizedCharacters
		 esVoice=player_default
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/male/skeleton/male.cdf
		 fpItemHandsModel=
		 physicMassMult=1
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=PlayerIdle
	 }
	 Reset()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 SetModel()
	 UseMannequinAGState=true
	 defaultSoulClass=player
	 foreignCollisionDamageMult=0.1
	 gameParams = {
		 canUseComplexLookIK=false
		 lookAtSimpleHeadBone=LookIK
		 lookFOV=720
		 slopeSlowdown=3
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.35
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
	 type=Player
	 vehicleCollisionDamageMult=7.5
 }
 PlayerFemale = {
	 AIMovementAbility = {
		 collisionAvoidanceObstacleRadius=0.7
	 }
	 ActionController=Animations/Mannequin/ADB/wh_female_controllerdefs.xml
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_female_database.adb
	 CheatEngine()
	 CheatEngine_animal()
	 CheatEngine_equipweapon()
	 CheatEngine_money()
	 CheatEngine_skill()
	 CheatEngine_stat()
	 CheatEngine_time()
	 CheatGiveBow()
	 Client = {
		 OnInit()
	 }
	 CombatOpponentMnTag=oppFemale
	 GetDogActions()
	 InitialSetup()
	 InteractorPriority=2
	 IsChatUsable=0
	 IsDogUsable=1
	 OnAction()
	 OnDogRequest()
	 OnInit()
	 OnLoadAI()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OpponentMnTag=relatedFemale
	 PRTelep()
	 PRTelepShowMessage()
	 PRTelep_unlock()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foleys_player
			 footstepEffect=footsteps_player
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=1
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SoundPack=ai_player_default
		 aicharacter_character=Player
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsDummy=false
		 bSaved_by_game=true
		 clientFileModel=Objects/Characters/humans/female/skeleton/female.cdf
		 commrange=40
		 esClothingConfig=female2
		 esCommConfig=player_default
		 esNavigationType=MediumSizedCharacters
		 esVoice=player_default
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_SkeletonMale.xml
		 fileModel=Objects/Characters/humans/female/skeleton/female.cdf
		 fpItemHandsModel=
		 physicMassMult=1
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=PlayerIdle
	 }
	 Reset()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 SetModel()
	 UseMannequinAGState=true
	 defaultSoulArchetype=NPC_Female
	 defaultSoulClass=NPC_Female
	 foreignCollisionDamageMult=0.1
	 gameParams = {
		 canUseComplexLookIK=false
		 lookAtSimpleHeadBone=LookIK
		 lookFOV=720
		 slopeSlowdown=3
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=1.05
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.35
					 y=0
					 z=0.4
				 }
				 stanceId=3
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=80
			 max_climb_angle=50
			 max_jump_angle=40
			 max_vel_ground=16
			 min_fall_angle=90
			 min_slide_angle=49
			 timeImpulseRecover=1
		 }
		 flags=0
		 mass=80
		 stiffness_scale=73
	 }
	 type=PlayerFemale
	 vehicleCollisionDamageMult=7.5
 }
 PlayerStateHandler = {
	 ChangeStance()
	 ChangeUnstance()
	 ChangeUnstanceJoined()
	 EndHostResourcesPlayAnimationAction()
	 HostResourcesPlayAnimationAction()
	 PlayAnimationAction()
	 PlayAnimationActionJoined()
	 StartMinigame()
 }
 PlayerWeapon = {
	 Client = {
		 ClEvent_ResetAnimation()
		 ClEvent_StartAnimation()
		 ClSync()
		 OnLevelLoaded()
		 OnPhysicsBreak()
		 OnTimer()
	 }
	 CorrectTiming()
	 DoStartAnimation()
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=0
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_ModelLoad()
	 Event_ModelUnload()
	 Event_Ragdollize()
	 Event_RagdollizeDerived()
	 Event_Remove()
	 Event_RenderAlwaysDisable()
	 Event_RenderAlwaysEnable()
	 Event_ResetAnimation()
	 Event_StartAnimation()
	 Event_StopAnimation()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 DisableUsable = {
				 [02]=bool
			 }
			 EnableUsable = {
				 [02]=bool
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 ModelLoad = {
				 [02]=bool
				 [01]()
			 }
			 ModelUnload = {
				 [02]=bool
				 [01]()
			 }
			 Ragdollize = {
				 [02]=bool
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 ResetAnimation = {
				 [02]=bool
				 [01]()
			 }
			 StartAnimation = {
				 [02]=bool
				 [01]()
			 }
			 StopAnimation = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Used = {
				 [02]=bool
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Break=int
			 DisableUsable=bool
			 EnableUsable=bool
			 Hide=bool
			 Ragdollized=bool
			 Remove=bool
			 UnHide=bool
			 Used=bool
		 }
	 }
	 GetUsableMessage()
	 IsRigidBody()
	 IsUsable()
	 LoadAndPhysicalizeModel()
	 LoadModelOnDemand()
	 NeedSerialize()
	 OnEnablePhysics()
	 OnFlowGraphAnimationEnd()
	 OnFlowGraphAnimationStart()
	 OnFlowGraphAnimationStop()
	 OnLoad()
	 OnObjectUnslaved()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSequenceAnimationStart()
	 OnSequenceAnimationStop()
	 OnSequenceStart()
	 OnSequenceStop()
	 OnSpawn()
	 OnUsed()
	 PHYSICALIZEAFTER_TIMER=1
	 POSTQL_TIMER=2
	 PhysicalizeThis()
	 Properties = {
		 ActivatePhysicsDist=50
		 ActivatePhysicsThreshold=0
		 Animation = {
			 Animation=Default
			 BlendTime=0
			 Speed=1
			 bAlwaysUpdate=false
			 bLoop=true
			 bPhysicalizeAfterAnimation=false
			 bPlaying=true
			 bResetOnUnslaved=false
			 playerAnimationState=
		 }
		 Cinematic = {
			 bOnDemandModelLoad=false
			 bRenderAlways=false
		 }
		 DmgFactorWhenCollidingAI=1
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 Physics = {
			 CollisionFiltering = {
				 collisionIgnore = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
				 collisionType = {
					 bT_collision_class_articulated=0
					 bT_collision_class_living=0
					 bT_collision_class_particle=0
					 bT_collision_class_soft=0
					 bT_collision_class_terrain=0
					 bT_collision_class_wheeled=0
					 bT_gcc_ai=0
					 bT_gcc_animal=0
					 bT_gcc_decoy_projectile=0
					 bT_gcc_horse=0
					 bT_gcc_horse_bridle=0
					 bT_gcc_ignore_z_correction=0
					 bT_gcc_interactive=0
					 bT_gcc_item=0
					 bT_gcc_ledge=0
					 bT_gcc_npc_ignored_type=0
					 bT_gcc_npc_reported_type=0
					 bT_gcc_player_body=0
					 bT_gcc_player_capsule=0
					 bT_gcc_player_ghostable_type=0
					 bT_gcc_player_type=0
					 bT_gcc_ragdoll=0
					 bT_gcc_rigid=0
					 bT_gcc_vehicle=0
				 }
			 }
			 Density=-1
			 Mass=-1
			 bArticulated=false
			 bBulletCollisionEnabled=true
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 Rendering = {
			 bWrinkleMap=false
		 }
		 Script = {
			 bDefaultOpen=false
		 }
		 UseMessage=
		 bCanTriggerAreas=false
		 bExcludeCover=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bHeavyObject=false
		 bInteractLargeObject=false
		 bInteractiveCollisionClass=false
		 bMissionCritical=false
		 bNoFriendlyFire=false
		 bPickable=false
		 bSaved_by_game=true
		 bUpdateOnlyByScript=false
		 bUsable=false
		 guidSmartObjectType=
		 object_Model=objects/nature/vegetable/carrot_2.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
	 ResetOnUsed()
	 RestorePhysicalState()
	 SavePhysicalState()
	 SendSyncToClient()
	 Server = {
		 OnPostInitClient()
		 SVSync()
	 }
	 SetFromProperties()
	 SetInteractiveCollisionType()
	 SetUpdatePolicyInternal()
	 SetupModel()
	 StartEntityAnimation()
	 UnloadModel()
	 __client_dispatch = {
		 [01]=ClEvent_ResetAnimation:
		 [03]=ClEvent_StartAnimation:f
		 [02]=ClSync:fff
		 ClEvent_ResetAnimation()
		 ClEvent_StartAnimation()
		 ClSync()
		 __validated=false
	 }
	 __server_dispatch = {
		 [01]=SVSync:
		 SVSync()
		 __validated=false
	 }
	 __super = {
		 Client = {
			 ClEvent_ResetAnimation()
			 ClEvent_StartAnimation()
			 ClSync()
			 OnLevelLoaded()
			 OnPhysicsBreak()
			 OnTimer()
		 }
		 CorrectTiming()
		 DoStartAnimation()
		 Editor = {
			 Icon=animobject.bmp
			 IconOnTop=0
		 }
		 Event_DisableUsable()
		 Event_EnableUsable()
		 Event_Hide()
		 Event_ModelLoad()
		 Event_ModelUnload()
		 Event_Ragdollize()
		 Event_RagdollizeDerived()
		 Event_Remove()
		 Event_RenderAlwaysDisable()
		 Event_RenderAlwaysEnable()
		 Event_ResetAnimation()
		 Event_StartAnimation()
		 Event_StopAnimation()
		 Event_UnHide()
		 Event_Used()
		 FlowEvents = {
			 Inputs = {
				 DisableUsable = {
					 [02]=bool
				 }
				 EnableUsable = {
					 [02]=bool
				 }
				 Hide = {
					 [02]=bool
					 [01]()
				 }
				 ModelLoad = {
					 [02]=bool
					 [01]()
				 }
				 ModelUnload = {
					 [02]=bool
					 [01]()
				 }
				 Ragdollize = {
					 [02]=bool
					 [01]()
				 }
				 Remove = {
					 [02]=bool
					 [01]()
				 }
				 ResetAnimation = {
					 [02]=bool
					 [01]()
				 }
				 StartAnimation = {
					 [02]=bool
					 [01]()
				 }
				 StopAnimation = {
					 [02]=bool
					 [01]()
				 }
				 UnHide = {
					 [02]=bool
					 [01]()
				 }
				 Used = {
					 [02]=bool
				 }
			 }
			 Outputs = {
				 Activate=bool
				 Break=int
				 DisableUsable=bool
				 EnableUsable=bool
				 Hide=bool
				 Ragdollized=bool
				 Remove=bool
				 UnHide=bool
				 Used=bool
			 }
		 }
		 GetUsableMessage()
		 IsRigidBody()
		 IsUsable()
		 LoadAndPhysicalizeModel()
		 LoadModelOnDemand()
		 NeedSerialize()
		 OnEnablePhysics()
		 OnFlowGraphAnimationEnd()
		 OnFlowGraphAnimationStart()
		 OnFlowGraphAnimationStop()
		 OnLoad()
		 OnObjectUnslaved()
		 OnPropertyChange()
		 OnReset()
		 OnSave()
		 OnSequenceAnimationStart()
		 OnSequenceAnimationStop()
		 OnSequenceStart()
		 OnSequenceStop()
		 OnSpawn()
		 OnUsed()
		 PHYSICALIZEAFTER_TIMER=1
		 POSTQL_TIMER=2
		 PhysicalizeThis()
		 Properties = {
			 ActivatePhysicsDist=50
			 ActivatePhysicsThreshold=0
			 Animation = {
				 Animation=Default
				 BlendTime=0
				 Speed=1
				 bAlwaysUpdate=false
				 bLoop=true
				 bPhysicalizeAfterAnimation=false
				 bPlaying=true
				 bResetOnUnslaved=false
				 playerAnimationState=
			 }
			 Cinematic = {
				 bOnDemandModelLoad=false
				 bRenderAlways=false
			 }
			 DmgFactorWhenCollidingAI=1
			 MultiplayerOptions = {
				 bNetworked=false
			 }
			 Physics = {
				 CollisionFiltering = {
					 collisionIgnore = {
						 bT_collision_class_articulated=0
						 bT_collision_class_living=0
						 bT_collision_class_particle=0
						 bT_collision_class_soft=0
						 bT_collision_class_terrain=0
						 bT_collision_class_wheeled=0
						 bT_gcc_ai=0
						 bT_gcc_animal=0
						 bT_gcc_decoy_projectile=0
						 bT_gcc_horse=0
						 bT_gcc_horse_bridle=0
						 bT_gcc_ignore_z_correction=0
						 bT_gcc_interactive=0
						 bT_gcc_item=0
						 bT_gcc_ledge=0
						 bT_gcc_npc_ignored_type=0
						 bT_gcc_npc_reported_type=0
						 bT_gcc_player_body=0
						 bT_gcc_player_capsule=0
						 bT_gcc_player_ghostable_type=0
						 bT_gcc_player_type=0
						 bT_gcc_ragdoll=0
						 bT_gcc_rigid=0
						 bT_gcc_vehicle=0
					 }
					 collisionType = {
						 bT_collision_class_articulated=0
						 bT_collision_class_living=0
						 bT_collision_class_particle=0
						 bT_collision_class_soft=0
						 bT_collision_class_terrain=0
						 bT_collision_class_wheeled=0
						 bT_gcc_ai=0
						 bT_gcc_animal=0
						 bT_gcc_decoy_projectile=0
						 bT_gcc_horse=0
						 bT_gcc_horse_bridle=0
						 bT_gcc_ignore_z_correction=0
						 bT_gcc_interactive=0
						 bT_gcc_item=0
						 bT_gcc_ledge=0
						 bT_gcc_npc_ignored_type=0
						 bT_gcc_npc_reported_type=0
						 bT_gcc_player_body=0
						 bT_gcc_player_capsule=0
						 bT_gcc_player_ghostable_type=0
						 bT_gcc_player_type=0
						 bT_gcc_ragdoll=0
						 bT_gcc_rigid=0
						 bT_gcc_vehicle=0
					 }
				 }
				 Density=-1
				 Mass=-1
				 bArticulated=false
				 bBulletCollisionEnabled=true
				 bPhysicalize=true
				 bPushableByPlayers=false
				 bRigidBody=false
			 }
			 Rendering = {
				 bWrinkleMap=false
			 }
			 Script = {
				 bDefaultOpen=false
			 }
			 UseMessage=
			 bCanTriggerAreas=false
			 bExcludeCover=false
			 bExported_to_game=true
			 bExported_to_test=true
			 bHeavyObject=false
			 bInteractLargeObject=false
			 bInteractiveCollisionClass=false
			 bMissionCritical=false
			 bNoFriendlyFire=false
			 bPickable=false
			 bSaved_by_game=true
			 bUpdateOnlyByScript=false
			 bUsable=false
			 guidSmartObjectType=
			 object_Model=objects/props/maritime/windsock/windsock.cga
			 sWH_AI_EntityCategory=
			 soclass_SmartObjectHelpers=
			 soclasses_SmartObjectClass=
		 }
		 ResetOnUsed()
		 RestorePhysicalState()
		 SavePhysicalState()
		 SendSyncToClient()
		 Server = {
			 OnPostInitClient()
			 SVSync()
		 }
		 SetFromProperties()
		 SetInteractiveCollisionType()
		 SetUpdatePolicyInternal()
		 SetupModel()
		 StartEntityAnimation()
		 UnloadModel()
		 __client_dispatch = {
			 [02]=ClSync:fff
			 [01]=ClEvent_ResetAnimation:
			 [03]=ClEvent_StartAnimation:f
			 ClEvent_ResetAnimation()
			 ClEvent_StartAnimation()
			 ClSync()
			 __validated=false
		 }
		 __server_dispatch = {
			 [01]=SVSync:
			 SVSync()
			 __validated=false
		 }
	 }
 }
 PositioningAreaShape = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 type=PositioningAreaShape
 }
 PrecacheCamera = {
	 Editor = {
		 Icon=PrecacheCamera.bmp
	 }
	 OnSpawn()
 }
 PredefinedNavigationPath = {
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 sWH_AI_EntityCategory=
	 }
	 type=PredefinedNavigationPath
 }
 PrefabPort = {
	 Editor = {
		 Icon=PrefabPort/defaultIn.bmp
	 }
	 Properties = {
		 esForwardedLinkName=Merged
		 esPrefabPort_Icon=_default
		 esPrefabPort_Type=In
	 }
	 noGameObject=1
 }
 PresetSettings = {
	 Bats = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_netopyr_idle
					 snd_scared=a_o_netopyr_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.bats
					 bIgnoreDaytimeCheck=true
					 esBirdsTakeoffType=TowardsPlayer
					 fMaxRandomSpread=45
					 fSpeedScale=1.5
					 iCooldownSeconds=600
				 }
			 }
		 }
	 }
	 Buzzard_takeoff_only = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=
					 snd_scared=a_o_kane_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.bird_big_single
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=180
					 fSpeedScale=3
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Crows = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_kavka_idle
					 snd_scared=a_o_kavka_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.crows_tree
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=90
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Crows_no_sound = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=
					 snd_scared=
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.crows
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=180
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Crows_static_angle = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=
					 snd_scared=
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.birds_small_tree
					 esBirdsTakeoffType=StaticAngle
					 fMaxRandomSpread=0
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Crows_takeoff_only = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_kavka_idle
					 snd_scared=a_o_kavka_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.crows
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=180
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Nightjar = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_lelek_idle
					 snd_scared=a_o_lelek_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.birds_small_tree
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=45
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 None = {
	 }
	 Nuthatchs = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_brhlik_idle
					 snd_scared=a_o_brhlik_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.birds_small_tree
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=45
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
	 Starlings = {
		 Properties = {
			 Settings = {
				 Audio = {
					 snd_idle=a_o_spacek_idle
					 snd_scared=a_o_spacek_scared
				 }
				 ManualValues = {
					 ParticleEffect=WH_Particels.other.birds_small_tree
					 esBirdsTakeoffType=AwayFromPlayer
					 fMaxRandomSpread=45
					 fSpeedScale=2.5
					 iCooldownSeconds=300
				 }
			 }
		 }
	 }
 }
 PressurizedObject = {
	 CacheResources()
	 CheckDamage()
	 ClearLeaks()
	 Client = {
		 AddLeak()
		 OnInit()
		 OnUpdate()
	 }
	 Event_Dead()
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_Hide()
	 Event_Hit()
	 Event_MakeInvulnerable()
	 Event_MakeVulnerable()
	 Event_ResetHealth()
	 Event_UnHide()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Hit = {
				 [02]=bool
				 [01]()
			 }
			 MakeInvulnerable = {
				 [01]()
				 [02]=any
			 }
			 MakeVulnerable = {
				 [01]()
				 [02]=any
			 }
			 ResetHealth = {
				 [01]()
				 [02]=any
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Dead=bool
			 Health=float
			 Hide=bool
			 Hit=bool
			 Scanned=bool
			 UnHide=bool
		 }
	 }
	 GetHealthRatio()
	 GetMaxHealth()
	 GetUsableMessage()
	 HasBeenScanned()
	 IsDead()
	 IsInvulnerable()
	 IsUsable()
	 OnDestroy()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 Properties = {
		 DamageMultipliers = {
			 fBullet=1
			 fCollision=1
		 }
		 Health = {
			 MaxHealth=500
			 bInvulnerable=false
			 bOnlyEnemyFire=true
		 }
		 Leak = {
			 Damage=100
			 DamageHitType=fire
			 DamageRange=3
			 Effect = {
				 AttachForm=none
				 AttachType=none
				 CountScale=1
				 ParticleEffect=smoke_and_fire.geysir.intense_steam_small
				 PulsePeriod=0
				 Scale=1
				 bCountPerUnit=false
				 bPrime=true
				 bSizePerUnit=0
			 }
			 ImpulseScale=1
			 MaxLeaks=10
			 Pressure=1000
			 PressureDecay=10
			 PressureImpulse=100
			 Volume=10
			 VolumeDecay=1
		 }
		 PhysicsBuoyancy = {
			 water_damping=1.5
			 water_density=1
			 water_resistance=0
		 }
		 PhysicsSimulation = {
			 damping=0
			 max_time_step=0.01
			 sleep_speed=0.04
		 }
		 TacticalInfo = {
			 LookupName=
			 bScannable=0
		 }
		 UseMessage=
		 Vulnerability = {
			 bBullet=1
			 bCollision=1
			 bExplosion=1
			 bMelee=1
			 bOther=1
		 }
		 bAutoGenAIHidePts=0
		 bCanBreakOthers=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractLargeObject=false
		 bPickable=false
		 bPlayerOnly=1
		 bPushableByPlayers=false
		 bResting=1
		 bRigidBody=false
		 bSaved_by_game=true
		 bUsable=false
		 esFaction=
		 fDamageTreshold=0
		 fDensity=1000
		 fMass=10
		 objModel=objects/library/props/fire extinguisher/fire_extinguisher.cgf
	 }
	 RegisterWithAI()
	 ResetOnUsed()
	 Server = {
		 OnHit()
		 OnInit()
		 OnUpdate()
	 }
	 SetInvulnerability()
	 SetupHealthProperties()
	 StartLeaking()
	 StopLeaking()
	 UpdateLeak()
	 UpdateLeaks()
	 __client_dispatch = {
		 [01]=AddLeak:VV
		 AddLeak()
		 __validated=false
	 }
	 __server_dispatch = {
		 __validated=false
	 }
 }
 PrismObject = {
	 Create()
	 Delete()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Clouds.bmp
		 Model=Editor/Objects/Particles.cgf
	 }
	 Event_Hide()
	 Event_Show()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Show = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hide=bool
			 Show=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 type=PrismObject
 }
 ProximityTrigger = {
	 CanTrigger()
	 CheckAIDeaths()
	 Client = {
		 ClEnter()
		 ClLeave()
		 OnEnterArea()
		 OnLeaveArea()
		 OnTimer()
	 }
	 CreateAIDeathsCheckTrigger()
	 CreateTimer()
	 Editor = {
		 Icon=Trigger.bmp
		 IsRotatable=false
		 IsScalable=false
		 Model=Editor/Objects/T.cgf
		 ShowBounds=1
	 }
	 Enable()
	 EnteredArea()
	 Event_Disable()
	 Event_Enable()
	 Event_Enter()
	 Event_Leave()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Enter = {
				 [02]=bool
				 [01]()
			 }
			 Leave = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
			 Enter=entity
			 Faction=string
			 Leave=entity
			 NrOfEntitiesInside=int
			 Sender=entity
		 }
	 }
	 GetUsableMessage()
	 IsUsable()
	 LeftArea()
	 LockUsability()
	 OnDestroy()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnTimer()
	 OnUsed()
	 Properties = {
		 DimX=5
		 DimY=5
		 DimZ=5
		 EnterDelay=0
		 ExitDelay=0
		 MultiplayerOptions = {
			 bNetworked=false
			 bPerPlayer=0
		 }
		 OnlySelectedEntity=None
		 PlaySequence=
		 ScriptCommand=
		 UsableMessage=
		 bActivateWithUseButton=0
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInVehicleOnly=0
		 bOnlyAI=0
		 bOnlyMyPlayer=0
		 bOnlyOneEntity=0
		 bOnlyPlayer=1
		 bOnlySpecialAI=0
		 bRemoveOnTrigger=0
		 bSaved_by_game=true
		 bTriggerOnce=0
		 esFactionFilter=
		 sWH_AI_EntityCategory=
	 }
	 Server = {
		 OnEnterArea()
		 OnLeaveArea()
		 OnTimer()
		 SvRequestUse()
	 }
	 Trigger()
	 __client_dispatch = {
		 [02]=ClLeave:Eb
		 [01]=ClEnter:Eb
		 ClEnter()
		 ClLeave()
		 __validated=false
	 }
	 __server_dispatch = {
		 [01]=SvRequestUse:E
		 SvRequestUse()
		 __validated=false
	 }
 }
 QueryAimFromMovementController=0
 RELIABLE_ORDERED=0
 RELIABLE_UNORDERED=1
 RPG = {
	 AddLocationPoint()
	 AddStatXP()
	 CaptionObjectUsed()
	 GetFactionById()
	 GetFactions()
	 GetIndulgencePrice()
	 GetLocationById()
	 GetLocationByName()
	 GetLocations()
	 IsPublicEnemy()
	 NotifyLevelXpGain()
	 ReconcileWithPublicFriends()
	 _GetConstant()
 }
 Rain = {
	 Editor = {
		 Icon=shake.bmp
	 }
	 Event_Amount()
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Amount = {
				 [02]=float
				 [01]()
			 }
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 Properties = {
		 bDisableOcclusion=false
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bIgnoreVisareas=false
		 bSaved_by_game=true
		 clrColor = {
			 x=1
			 y=1
			 z=1
		 }
		 fAmount=1
		 fDiffuseDarkening=0.5
		 fFakeGlossiness=0.5
		 fFakeReflectionsAmount=1.5
		 fMistAmount=3
		 fMistHeight=8
		 fPuddlesAmount=1.5
		 fPuddlesMaskAmount=1
		 fPuddlesRippleAmount=2
		 fRadius=10000
		 fRainDropsAmount=0.5
		 fRainDropsLighting=1
		 fRainDropsSpeed=1
		 fSplashesAmount=1.3
	 }
	 type=Rain
 }
 RandomEvent = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 fDespawnDistance=100
		 gpGameProfile=
		 nRandomEventDBId=0
	 }
 }
 RandomEventPlace = {
	 Editor = {
		 Icon=RandomEventPlace.bmp
	 }
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 guidSmartObjectType=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 Raptors = {
	 Animations = {
		 [08]=hen_run_fwd
		 [01]=hen_walk_fwd
		 [04]=hen_idle_03_eating
		 [06]=throw
		 [02]=hen_idle_01_look_around
		 [03]=hen_idle_02_look_around
		 [07]=rooster_crowing
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 SpecialModel=objects/characters/animals/hen_v2/hen_raptor.cdf
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=10
			 object_Model=objects/characters/animals/hen_v2/hen_raptor.cdf
			 object_Model1=objects/characters/animals/hen_v2/hen_raptor.cdf
			 object_Model2=objects/characters/animals/hen_v2/hen_raptor.cdf
		 }
		 Flocking = {
			 AttractDistMax=20
			 AttractDistMin=5
			 FactorAlign=1
			 FactorCohesion=1
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=15
			 FactorHeight=1
			 FactorOrigin=0.3
			 HeightMax=1
			 HeightMin=0
			 IgnoreTerrainElevation=false
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=30
			 SpeedMax=0.55
			 SpeedMin=0.55
			 SpeedScared=0.8
		 }
		 Options = {
			 ActiveHoursBegin=4
			 ActiveHoursEnd=21
			 PickableMessage=
			 Radius=6
			 VisibilityDist=40
			 bActivate=true
			 bAvoidWater=true
			 bDisableOnRain=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 guidSmartObjectType=def0005e-0000-0000-0000-def00000005e
	 }
	 Sounds = {
		 [01]=
		 [03]=b_hen_death
		 [04]=c_torch_whoosh1
		 [02]=b_hen_scared
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 Rats = {
	 Animations = {
		 [01]=rat_run
		 [03]=rat_idle_var01
		 [02]=rat_idle
		 [07]=
		 [08]=rat_run_jump
		 [04]=rat_idle_var02
		 [06]=throw
		 [05]=pickup
	 }
	 CreateFlock()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Bird.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 GetFlockType()
	 MapVisMask=0
	 OnInit()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Boid = {
			 Mass=10
			 bInvulnerable=false
			 gravity_at_death=-9.81
			 guidItemSpawnedOnKill=18ff9093-2cc4-4ab3-9f34-7cb0dd7cd30a
			 nCount=3
			 object_Model=Objects/characters/animals/rat/rat.cdf
		 }
		 Flocking = {
			 AttractDistMax=10
			 AttractDistMin=0.1
			 FactorAlign=1
			 FactorCohesion=1
			 FactorSeparation=1
			 FieldOfViewAngle=250
			 bEnableFlocking=true
		 }
		 Movement = {
			 FactorAvoidLand=50000
			 FactorHeight=10
			 FactorOrigin=1e+08
			 HeightMax=0
			 HeightMin=0
			 IgnoreTerrainElevation=true
			 IgnoreWallsBehindPlayer=true
			 MaxAnimSpeed=1
			 MaxDistFromOrigin=10
			 RandomMovement=1
			 RunAnimationSpeed=2.5
			 RunThreshold=2.2
			 SpeedMax=1.8
			 SpeedMin=1.5
			 SpeedScared=2.7
			 WalkAnimationSpeed=2
		 }
		 Options = {
			 PickableMessage=
			 Radius=2
			 VisibilityDist=20
			 bActivate=true
			 bAvoidWater=true
			 bFollowPlayer=false
			 bNoLanding=false
			 bObstacleAvoidance=true
			 bPickableWhenAlive=true
			 bPickableWhenDead=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 Sounds = {
		 [02]=b_rat_scared
		 [01]=b_rat_idle
		 [03]=
	 }
	 params = {
		 x=0
		 y=0
		 z=0
	 }
	 type=Boids
 }
 RecipesBook = {
	 AnimClose=alchemy_close_book
	 AnimOpen=alchemy_place_book
	 AnimPageNext=alchemy_flip_alchemy_book_fwd
	 AnimPagePrev=alchemy_flip_alchemy_book_bwd
	 Editor = {
		 Icon=ledge.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 GetUsableName()
	 GfxName=AlchemyBook
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 Model=objects/characters/assets/book/book_01.cdf
	 OnEnablePhysics()
	 OnLevelLoaded()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUse()
	 OnUsed()
	 OnUsedHold()
	 PageAnimationTransitionTime=0.4
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 Script = {
			 Misc=
		 }
		 alchemy_type=19
		 bExported_to_game=true
		 bExported_to_test=true
		 bHasHerbal=false
		 bInteractiveCollisionClass=false
		 bSaved_by_game=true
		 object_Model=
		 sWH_AI_EntityCategory=
		 slot_name=dummy_alchemy_book
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetInteractiveCollisionType()
	 SetupTrigger()
	 SubMtl=book01
	 SubMtlId=1
	 TexSlot=11
	 Use()
	 bDoublePage=false
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
	 npcOnly=false
 }
 RedDeerDoe = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=1.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_deerDoe_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_deerDoe_database.adb
	 CombatOpponentMnTag=oppDeer
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_deer
			 footstepEffect=footsteps_deer
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=red_deer_doe
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/red_deer/deer_doe.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.8
		 pos = {
			 x=0
			 y=0
			 z=0.88
		 }
		 posCarcass = {
			 x=-0.1
			 y=-0.1
			 z=0.15
		 }
		 radius=0.22
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=RedDeerDoe
	 defaultSoulClass=red_deer_doe
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=30
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=30
		 stiffness_scale=73
	 }
 }
 RedDeerStag = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceAgentMinRadius=0.8
		 collisionAvoidanceAgentRadius=1.25
		 collisionAvoidanceObstacleOffest = {
			 x=0
			 y=0.3
			 z=0
		 }
		 collisionAvoidanceObstacleRadius=0.5
		 collisionAvoidanceObstacleTravel=0.8
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 collisionAvoidanceRagdollMode=1
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=0.5
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_redDeer_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_redDeer_database.adb
	 CombatOpponentMnTag=oppDeer
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_deer
			 footstepEffect=footsteps_deer
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=red_deer_stag
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/red_deer/red_deer.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=1.3
		 pos = {
			 x=0
			 y=0.2
			 z=1.05
		 }
		 posCarcass = {
			 x=0
			 y=0.2
			 z=0.2
		 }
		 radius=0.26
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=RedDeerStag
	 defaultSoulClass=red_deer_stag
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=30
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=30
		 stiffness_scale=73
	 }
 }
 ReflexLight = {
	 ActivateLight()
	 CacheResources()
	 Editor = {
		 AbsoluteRadius=1
		 IsScalable=false
		 ShowBounds=0
	 }
	 Event_Active()
	 Event_DiffuseColor()
	 Event_DiffuseMultiplier()
	 Event_Disable()
	 Event_Enable()
	 Event_Radius()
	 Event_SpecularMultiplier()
	 FlowEvents = {
		 Inputs = {
			 Active = {
				 [02]=bool
				 [01]()
			 }
			 DiffuseColor = {
				 [02]=vec3
				 [01]()
			 }
			 DiffuseMultiplier = {
				 [02]=float
				 [01]()
			 }
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Radius = {
				 [02]=float
				 [01]()
			 }
			 SpecularMultiplier = {
				 [02]=float
				 [01]()
			 }
		 }
		 Outputs = {
			 Active=bool
		 }
	 }
	 LoadLightToSlot()
	 NotifySwitchOnOffFromParent()
	 OnInit()
	 OnLevelLoaded()
	 OnLoad()
	 OnPropertyAnimated()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSysSpecLightChanged()
	 OnUpdate()
	 Properties = {
		 Color = {
			 clrDiffuse = {
				 x=1
				 y=1
				 z=1
			 }
			 fDiffuseMultiplier=2
			 fGIMultiplier=2
			 fSpecularMultiplier=2
			 fToDMulWeight=1
			 fVolumetricMultiplier=0.012
		 }
		 Options = {
			 bAffectsThisAreaOnly=true
			 bAffectsVolumetricFogOnly=false
			 bAmbient=false
			 bDeferredClipBounds=false
			 bFakeLight=false
			 bIgnoresVisAreas=false
			 bVolumetricFog=true
			 esGIMode=StaticLight
			 fFogRadialLobe=0
			 fVerticalClipDistanceDownward=5
			 fVerticalClipDistanceUpward=5
			 file_deferred_clip_geom=
		 }
		 Projector = {
			 fProjectorFov=90
			 fProjectorNearPlane=0.02
			 texture_Texture=
		 }
		 Radius=10
		 Shadows = {
			 bDisableShadowCutoff=false
			 bScreenSpaceShadowsFallbackWH=true
			 fShadowAutoBiasScale=1
			 fShadowBias=1
			 fShadowJitterWH=0
			 fShadowResolutionScale=1
			 fShadowSlopeBias=1
			 fShadowUpdateMinRadius=10
			 fShadowUpdateRatio=1
			 nCastShadows=4
			 nShadowMinResPercent=0
		 }
		 Shape = {
			 bAreaLight=true
			 bAreaPhysicalAttenuation=true
			 fFadeInRadius=0.35
			 fNearClip=0
			 fPlaneHeight=1
			 fPlaneWidth=1
			 fWallChamferHorizontal=0
			 fWallChamferVertical=0
			 fWallThickness=0.2
			 fWindowMarginHorizontal=0
			 fWindowMarginVertical=0
			 vFadeDimensionsBottom=0
			 vFadeDimensionsFar=0
			 vFadeDimensionsLeft=0
			 vFadeDimensionsNear=0
			 vFadeDimensionsRight=0
			 vFadeDimensionsTop=0
		 }
		 ToDData = {
			 T00 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T01 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T02 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T03 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T04 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T05 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T06 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T07 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T08 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T09 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T10 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
			 T11 = {
				 clrColor = {
					 x=1
					 y=1
					 z=1
				 }
				 fMult=1
			 }
		 }
		 bActive=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 fAttenuationBulbSize=0.7
	 }
 }
 RigidBody = {
	 Editor = {
		 Icon=physicsobject.bmp
		 IconOnTop=1
	 }
	 Event_Activate()
	 Event_AddImpulse()
	 Event_Hide()
	 Event_OnTouch()
	 Event_Show()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 AddImpulse = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 OnTouch = {
				 [02]=bool
				 [01]()
			 }
			 Show = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 AddImpulse=bool
			 Hide=bool
			 OnTouch=bool
			 Show=bool
		 }
	 }
	 MapVisMask=0
	 OnContact()
	 OnDamage()
	 OnInit()
	 OnPropertyChange()
	 OnReset()
	 OnShutDown()
	 OnTimer()
	 OnUpdate()
	 PhysParams = {
		 density=0
		 mass=0
	 }
	 Properties = {
		 Density=5000
		 Impulse = {
			 X=0
			 Y=0
			 Z=0
		 }
		 Mass=1
		 bActivateOnRocketDamage=0
		 bAutoGenAIHidePts=0
		 bExported_to_game=true
		 bExported_to_test=true
		 bResting=1
		 bRigidBodyActive=true
		 bSaved_by_game=true
		 bVisible=1
		 damping=0
		 max_time_step=0.01
		 objModel=Objects/box.cgf
		 sleep_speed=0.04
		 soclasses_SmartObjectClass=
		 water_damping=1.5
		 water_resistance=0
	 }
	 gravityUpdate=0
	 temp_vec = {
		 x=0
		 y=0
		 z=0
	 }
	 type=RigidBody
	 updateTime=500
 }
 RoeDeerBuck = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=1.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_roebuck_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_roebuck_database.adb
	 CombatOpponentMnTag=oppRoebuck
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 bFootstepGearEffect=true
			 foleyEffect=foley_deer
			 footstepEffect=footsteps_deer
			 footstepIndGearAudioSignal_Run=
			 footstepIndGearAudioSignal_Walk=
			 remoteFootstepEffect=footsteps_deer
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=roe_deer_buck
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/roebuck/roebuck.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.6
		 pos = {
			 x=0
			 y=0
			 z=0.65
		 }
		 posCarcass = {
			 x=-0.05
			 y=-0.15
			 z=0.15
		 }
		 radius=0.15
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=RoeDeerBuck
	 defaultSoulClass=roe_deer_buck
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=30
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=30
		 stiffness_scale=73
	 }
 }
 RoeDeerHind = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 passRadius=1.25
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_roebuck_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_roebuck_database.adb
	 CombatOpponentMnTag=oppRoebuck
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=0
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 ProceduralContextLook = {
		 fadeInSeconds=0.8
		 fadeOutMinDistance=0
		 fadeOutSeconds=0.8
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_deer
			 footstepEffect=footsteps_deer
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=roe_deer_hind
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/roebuck/roebuck.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.6
		 pos = {
			 x=0
			 y=0
			 z=0.65
		 }
		 posCarcass = {
			 x=-0.05
			 y=-0.15
			 z=0.15
		 }
		 radius=0.15
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=RoeDeerHind
	 defaultSoulClass=roe_deer_hind
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=30
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=30
		 stiffness_scale=73
	 }
 }
 RopeEntity = {
	 Event_BreakEnd()
	 Event_BreakStart()
	 Event_GetLength()
	 Event_Hide()
	 Event_Length()
	 Event_MaxForce()
	 Event_PhysIdEnd()
	 Event_PhysIdStart()
	 Event_PtEnd()
	 Event_PtStart()
	 Event_Radius()
	 Event_Remove()
	 Event_SegCount()
	 Event_SleepSpeed()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 BreakEnd = {
				 [02]=bool
				 [01]()
			 }
			 BreakStart = {
				 [02]=bool
				 [01]()
			 }
			 GetLength = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Length = {
				 [02]=float
				 [01]()
			 }
			 MaxForce = {
				 [02]=float
				 [01]()
			 }
			 PhysIdEnd = {
				 [02]=int
				 [01]()
			 }
			 PhysIdStart = {
				 [02]=int
				 [01]()
			 }
			 PtEnd = {
				 [02]=Vec3
				 [01]()
			 }
			 PtStart = {
				 [02]=Vec3
				 [01]()
			 }
			 Radius = {
				 [02]=float
				 [01]()
			 }
			 Remove = {
				 [02]=bool
				 [01]()
			 }
			 SegCount = {
				 [02]=int
				 [01]()
			 }
			 SleepSpeed = {
				 [02]=float
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Break=int
			 Hide=bool
			 Length=float
			 Remove=bool
			 Strained=bool
			 UnHide=bool
		 }
	 }
	 OnPhysicsBreak()
	 OnSpawn()
	 Properties = {
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
	 }
 }
 RuntimePrefab = {
	 CreateOnLoad()
	 Editor = {
		 Icon=RuntimePrefab.bmp
		 ShowBounds=1
	 }
	 OnDestroy()
	 OnHidden()
	 OnInit()
	 OnMove()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUnHidden()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 guidPrefabTemplate=0
		 nMaxSpawn=0
	 }
	 Reset()
	 Spawn()
	 type=RuntimePrefab
 }
 RuntimePrefabAutoPhase = {
	 Editor = {
		 Icon=RuntimePrefabAutoPhase.bmp
		 ShowBounds=1
	 }
	 Properties = {
		 bChangeWhenVisible=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esAutoPhaseChangeCategory=fireplace_burning
		 sAutoPhaseChangeTimeOfDayPhases=(5h,1);(21h,2)
		 sAutoPhaseChangeWorldTimeDelayStdDev=30m
	 }
	 type=RuntimePrefabAutoPhase
 }
 SAT_KillDisabled=1
 SAT_KillDisabledNoDagger=5
 SAT_KillEnabled=3
 SAT_KnockoutDisabled=2
 SAT_KnockoutEnabled=4
 SAT_Undefined=0
 SCANDIR_ALL=0
 SCANDIR_FILES=1
 SCANDIR_SUBDIRS=2
 SEQUENCE_NOT_STARTED=0
 SEQUENCE_PLAYING=1
 SEQUENCE_STOPPED=2
 SHOOTING_SPOT_POINT=32768
 SIGNALFILTER_ANYONEINCOMM=4
 SIGNALFILTER_ANYONEINCOMM_EXCEPT=15
 SIGNALFILTER_FACTIONONLY=3
 SIGNALFILTER_FORMATION=19
 SIGNALFILTER_FORMATION_EXCEPT=20
 SIGNALFILTER_GROUPONLY=2
 SIGNALFILTER_GROUPONLY_EXCEPT=14
 SIGNALFILTER_HALFOFGROUP=12
 SIGNALFILTER_LASTOP=1
 SIGNALFILTER_LEADER=13
 SIGNALFILTER_LEADERENTITY=16
 SIGNALFILTER_NEARESTGROUP=9
 SIGNALFILTER_NEARESTINCOMM=11
 SIGNALFILTER_NEARESTINCOMM_FACTION=17
 SIGNALFILTER_NEARESTINCOMM_LOOKING=18
 SIGNALFILTER_SENDER=0
 SIGNALFILTER_SUPERFACTION=7
 SIGNALFILTER_SUPERGROUP=6
 SIGNALFILTER_SUPERTARGET=8
 SIGNALFILTER_TARGET=5
 SIGNALID_READIBILITY=100
 SIGNALID_READIBILITYAT=101
 SOUND_INTERESTING=0
 SOUND_THREATENING=1
 SO_ActionSettings = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 CameraLimitHorizontal=75
		 CameraLimitVerticalMax=70
		 CameraLimitVerticalMin=-75
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=5d76491c-c52a-42cf-ba9c-4dbdd35d475a
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 SO_AnimationAndBark = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 Animation = {
			 sAnimationFragment=
			 sAnimationTags=
		 }
		 Bark = {
			 sAlias=
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 SO_CheeringSpot_Leaning = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 GetGenderVariantLimit()
	 GetVariantData()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 CheeringSpot = {
			 bDisable_Force_Look=false
			 esCheeringSpot_Leaning_Variant=random
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
 }
 SO_CheeringSpot_Standing = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 GetGenderVariantLimit()
	 GetVariantData()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 CheeringSpot = {
			 bDisable_Force_Look=false
			 esCheeringSpot_Standing_Variant=random
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
 }
 SO_DeadBody_Horse = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fHead=0
				 fLegs=0
				 fTorso=0
			 }
			 bRagdollOnly=false
			 esDeadBody_Horse_Variant=horse_lyingOnLeftSide_01
			 fAddDirt=0
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=true
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
 }
 SO_DeadBody_Human = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fArm_left=0
				 fArm_right=0
				 fHead=0
				 fLeg_left=0
				 fLeg_right=0
				 fTorso=0
			 }
			 bLootableByPlayer=true
			 bPickableByPlayer=true
			 bRagdollOnly=false
			 bRagdollOnly_DontPosition=false
			 esDeadBody_Human_Variant=male_lyingOnBack_01
			 fAddDirt=0
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=true
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
 }
 SO_DeadBody_Human_Hanged = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fArm_left=0
				 fArm_right=0
				 fHead=0
				 fLeg_left=0
				 fLeg_right=0
				 fTorso=0
			 }
			 bLootableByPlayer=true
			 bPickableByPlayer=false
			 bRagdollOnly=false
			 bRagdollOnly_DontPosition=false
			 esDeadBody_Human_Hanged_Variant=male_hanged_01
			 fAddDirt=0
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
	 useItem_left=false
 }
 SO_DeadBody_Human_Interactable = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fArm_left=0
				 fArm_right=0
				 fHead=0
				 fLeg_left=0
				 fLeg_right=0
				 fTorso=0
			 }
			 bAlwaysFastForwardIntoInteracting=true
			 bLootableByPlayer=true
			 bPickableByPlayer=false
			 bRagdollOnly=false
			 bRagdollOnly_DontPosition=false
			 esDeadBody_Human_Interactable_Variant=male_looting_male_lyingOnBack_01
			 fAddDirt=0
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 sequenceName=
	 unstanceName=
	 unstanceName_beingInteracted=deadBody_male_looting_male_lyingOnBack_01_beingInteracted
	 unstanceName_interactant=deadBody_male_looting_male_lyingOnBack_01_interactant
 }
 SO_DeadBody_WolfDog = {
	 ApplyDirtAndBlood()
	 Editor = {
		 Icon=DeadBody.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 DeadBody = {
			 AddBlood = {
				 fTorso=0
			 }
			 esDeadBody_WolfDog_Variant=wolfDog_lyingOnRightSide_01
			 fAddDirt=0
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 unstanceName=
 }
 SO_DiggingSpot = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 DiggingSpot = {
			 bGetShovelFromInventory=false
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 SO_HostageSituation = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetAnimationSet()
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 HostageSituation = {
			 esHostageSituation_Variant=maleHoldsFemale
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 useRealWeapon=true
 }
 SO_LeaningRail = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 LeaningRail = {
			 esLeaningRail_Variant=LeaningRail1
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 unstanceName=leaningRail1
 }
 SO_LyingHarmed = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 LyingHarmed = {
			 esLyingHarmedPose=male_lyingWounded_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 unstanceName=lyingWounded_01
 }
 SO_LyingHarmed_Healing = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 LyingHarmed_Healing = {
			 esLyingHarmed_Healing_Variant=male_lyingInjured_bed_low
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 unstanceName=lyingInjured_bedLow
 }
 SO_LyingHarmed_Wounded = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 LyingHarmed_Wounded = {
			 esLyingHarmed_Wounded_Variant=male_lyingWounded_01_bed_low
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 unstanceName=lyingWounded_01_bedLow
 }
 SO_Party_Duo_Sitting = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Party = {
			 esParty_Duo_Sitting_Variant=male_male_talkingAndDrinkingAndCheering_pickingCup_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 gesturesCount=0
	 gesturesFragmentID_leader=Party_Duo_Sitting_TalkingAndDrinkingAndCheering_PickingCup_01_Gestures_Leader
	 gesturesFragmentID_minion=Party_Duo_Sitting_TalkingAndDrinkingAndCheering_PickingCup_01_Gestures_Minion
	 unstanceName_leader=party_duo_sitting_talkingAndDrinkingAndCheering_pickingCup_01_leader
	 unstanceName_minion=party_duo_sitting_talkingAndDrinkingAndCheering_pickingCup_01_minion
 }
 SO_Party_Duo_Standing = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Party = {
			 esParty_Duo_Standing_Variant=male_male_talking_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 __super = {
		 Editor = {
			 Icon=smartObjectHolder.bmp
		 }
		 GetEditorModel()
		 OnInit()
		 Properties = {
			 Script = {
				 Misc=
			 }
			 bExported_to_game=true
			 bExported_to_test=true
			 bNo_POI=false
			 bOwnedByHome=false
			 bPOI_discoverable_by_location=true
			 bSaved_by_game=false
			 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
			 object_editorModel=
			 sWH_AI_EntityCategory=
			 soclass_SmartObjectHelpers=
		 }
	 }
	 gesturesCount=0
	 gesturesFragmentID_leader=
	 gesturesFragmentID_minion=
	 holdingItem=false
	 unstanceName_leader=party_duo_standing_talking_01_leader
	 unstanceName_minion=party_duo_standing_talking_01_minion
 }
 SO_Party_Lying = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Party = {
			 esParty_Lying_Variant=male_drunk_resting_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 unstanceName=party_lying_drunk_resting_01
 }
 SO_Party_Sitting = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Party = {
			 esParty_Sitting_Variant=male_talking_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 unstanceName=party_sitting_talking_01
 }
 SO_Party_Standing = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Party = {
			 esParty_Standing_Variant=male_talking_01
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 holdingItem=false
	 unstanceName_female=party_standing_talking_01_female
	 unstanceName_male=party_standing_talking_01_male
 }
 SO_SpecialSittingActivity = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 SpecialSittingActivity = {
			 esSpecialSittingActivity_Variant=female_noTable_crying
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 unstanceName=specialSittingActivity_female_noTable_crying
 }
 SO_Test_AnimationPreview = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 AnimationPreview = {
			 bAligned=false
			 bSitting=false
			 sOneshot_Animation_Fragment=
			 sOneshot_Animation_Tags=
			 sUnstance_Name=
		 }
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 SO_TrackviewMessage = {
	 Editor = {
		 Icon=trackviewMessage.bmp
	 }
	 Event_DisableUsable()
	 Event_EnableUsable()
	 Event_SendAIMessage()
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 SendAIMessage = {
				 [02]=string
				 [01]()
			 }
		 }
	 }
	 GetUsableMessage()
	 IsUsable()
	 OnUsed()
	 Properties = {
		 EntityName = {
			 esReceiverEntityName=
			 esSecondaryParametr=
		 }
		 UseMessage=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 bUsable=false
	 }
	 ResetOnUsed()
 }
 SO_WaitingSpot = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnEditorLayerLoaded()
	 OnInit()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 MovementDetails = {
			 esMovementSpeed=b_Walk
		 }
		 Script = {
			 Misc=
		 }
		 WaitingSpot = {
			 esWaitingSpot_Variant=male_armAkimbo
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 UpdateData()
	 UpdateGhosts()
	 movementSpeed=Walk
	 unstanceName_female=waiting_holdingArm
	 unstanceName_male=waiting_armAkimbo
 }
 SPECIAL_FORMATION_POINT=65536
 SPEED_RUN=2
 SPEED_SLOW=0.9
 SPEED_SPRINT=3
 SPEED_WALK=1
 SPEED_ZERO=0
 STANCE_ALERTED=6
 STANCE_CROUCH=1
 STANCE_HIGH_COVER=7
 STANCE_LOW_COVER=5
 STANCE_PRONE=2
 STANCE_RELAXED=3
 STANCE_STAND=0
 STANCE_STEALTH=4
 STANCE_SWIM=8
 STANCE_ZEROG=9
 STICK_BREAK=1
 STICK_SHORTCUTNAV=2
 STRING=83
 STRINGTABLE=84
 Script = {
	 DumpLoadedScripts()
	 KillTimer()
	 LoadScript()
	 ReloadEntityScript()
	 ReloadScript()
	 ReloadScripts()
	 SetTimer()
	 SetTimerForFunction()
	 UnloadScript()
 }
 ScriptCommand = {
	 Category=advanced
	 Implementation()
	 Inputs = {
		 [01] = {
			 [01]=t_Activate
			 [02]=bool
		 }
		 [02] = {
			 [01]=Command
			 [02]=string
		 }
	 }
	 Outputs = {
		 [01] = {
			 [01]=Done
			 [02]=bool
		 }
	 }
 }
 ScriptLoader = {
	 IsLuaScript()
	 LoadFolder()
	 LoadFromInclude()
	 LoadScript()
	 ShouldIgnore()
	 ignoredPaths = {
		 [01]=Scripts/Utils/ScriptLoader.lua
	 }
 }
 Sequence = {
	 FreezeGame()
	 UnfreezeGame()
 }
 SequenceArea = {
	 Editor = {
		 Icon=Sequencearea.bmp
		 IconOnTop=1
	 }
	 OnPropertyChange()
	 Properties = {
		 bCreate_Obstacle=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bHide_Actors=true
		 bHide_Items=true
		 bHide_Other_Entities=false
		 bSaved_by_game=false
	 }
	 type=SequenceArea
 }
 SequenceObject = {
	 Editor = {
		 Icon=sequence.bmp
	 }
	 OnPropertyChange()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 bSaved_by_game=false
 }
 SequenceTrigger = {
	 BaseReportUse()
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 Sequence=
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Set = {
	 Add()
	 Check()
	 DeserializeEntities()
	 DeserializeItems()
	 DeserializeValues()
	 Get()
	 Merge()
	 New()
	 Remove()
	 RemoveAll()
	 SanityCheck()
	 SerializeEntities()
	 SerializeItems()
	 SerializeValues()
	 Set()
	 Size()
	 Test()
 }
 SetRPGProfile()
 SetupBribe()
 SetupHaggle()
 Sharpening = {
	 DoStepOnGrindstone()
	 GetTotalQuality()
	 GetWheelSpeed()
	 IsActive()
	 MoveToWorstZone()
	 SetGrindstone()
	 SetOptimalRotation()
	 SetPosition()
	 SetPressure()
	 SetRotation()
	 SetWheelSpeed()
	 Start()
	 Stop()
 }
 SheepEwe = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/wh_sheep_controllerdefs.xml
	 ActorCanTalk()
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_sheep_database.adb
	 CombatOpponentMnTag=oppSheep
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_sheep
			 footstepEffect=footsteps_sheep
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=sheep_ewe
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/sheep/sheep_female.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.65
		 pos = {
			 x=0
			 y=0.1
			 z=0.55
		 }
		 posCarcass = {
			 x=0.27
			 y=0.1
			 z=0.1
		 }
		 radius=0.25
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=SheepEwe
	 defaultSoulClass=sheep_ewe
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=100
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=100
		 stiffness_scale=73
	 }
 }
 SheepRam = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/wh_sheep_controllerdefs.xml
	 ActorCanTalk()
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/wh_sheep_database.adb
	 CombatOpponentMnTag=oppSheep
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetCanTalkHintType()
	 GetChatActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnChat()
	 OnChatOpen()
	 OnChatRequestAccepted()
	 OnChatWithFocus()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnFollow()
	 OnGrabCorpse()
	 OnHorsePullDown()
	 OnKnockout()
	 OnLoadAI()
	 OnLoot()
	 OnMercyKill()
	 OnPickpocketing()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnStealthKill()
	 OnTalk()
	 OnUsed()
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_sheep
			 footstepEffect=footsteps_sheep
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=false
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=true
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=sheep_ram
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/sheep/sheep_female.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 TestActorCanTalk()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.65
		 pos = {
			 x=0
			 y=0.1
			 z=0.55
		 }
		 posCarcass = {
			 x=0.27
			 y=0.1
			 z=0.1
		 }
		 radius=0.25
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=SheepRam
	 defaultSoulClass=sheep_ram
	 gameParams = {
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 stance = {
			 carryCorpse = {
				 heightCollider=0.9
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.4
					 y=0.4
					 z=0.15
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 combat = {
				 heightCollider=1.05
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=0
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 crouch = {
				 heightCollider=0.8
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.35
					 y=0
					 z=0.1
				 }
				 stanceId=1
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0
					 z=1.1
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=13
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=100
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=100
		 stiffness_scale=73
	 }
 }
 ShootingContest = {
	 HideHorseShootingContestTable()
	 HideShootingContestTable()
	 ShowHorseShootingContestTable()
	 ShowShootingContestTable()
	 ShowShootingHit()
	 UpdateHorseShootingContestTable()
	 UpdateShootingContestTable()
 }
 ShootingTarget = {
	 AddPhysicalImpulse()
	 Client = {
		 OnHit()
	 }
	 Editor = {
		 Icon=ShootingTarget.bmp
	 }
	 Event_Hide()
	 Event_UnHide()
	 Init()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=20
			 Mass=-1
			 bPhysicalize=true
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 fileModel=objects/manmade/task_specific_props/combat/archery/target_small.cgf
		 hitMsgListener=
		 iHitScoreValue=1
		 iPhysicalizeMode=0
		 isShootingTarget=true
	 }
	 ResetPosition()
	 shotDown=0
 }
 ShootingTargetOld = {
	 Client = {
		 OnHit()
	 }
	 Editor = {
		 Icon=Item.bmp
		 ShowBounds=1
	 }
	 Event_Activated()
	 Event_Deactivated()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 bTurningMode=false
		 fIntervallMax=5
		 fIntervallMin=3
		 fLightUpTime=2
		 fScoreScale=10
		 fTurnSpeed=0.5
		 fileModel=objects/manmade/task_specific_props/combat/archery/target.cgf
	 }
	 Server = {
		 Activated = {
			 OnBeginState()
			 OnTimer()
		 }
		 Deactivated = {
			 OnBeginState()
			 OnTimer()
		 }
		 Init = {
			 OnBeginState()
			 OnTimer()
		 }
		 OnHit()
		 OnInit()
	 }
	 States = {
		 [04]=Init
		 [02]=Deactivated
		 [03]=Turning
		 [01]=Activated
	 }
 }
 Shop = {
	 Editor = {
		 Icon=bug.bmp
	 }
	 OnPropertyChange()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bOwnerIsSpawned=false
		 bSaved_by_game=true
		 guidSmartObjectType=
		 iShopId=0
		 sShopName=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
		 soclasses_SmartObjectClass=
	 }
 }
 Shops = {
	 AcceptTransaction()
	 CancelTransaction()
	 DoMoneyTransaction()
	 FindItemInShop()
	 FindShopInventoryForItem()
	 GetShopDBIdByKeeper()
	 GetShopDBIdByLinkedEntityId()
	 GetShopMoney()
	 IsLinkedWithShop()
	 IsShopOpened()
	 OpenInventory()
	 OpenInventoryForItem()
 }
 SimpleBribeTransaction()
 SinglePlayer = {
	 AreUsable()
	 Client = {
		 OnHit()
	 }
	 ClientViewShake()
	 CreateHit()
	 EndLevel()
	 IsUsable()
	 IsUsableByDog()
	 IsUsableForChat()
	 IsUsableMsgChanged()
	 OnChatUsableMessage()
	 OnDogUsableMessage()
	 OnShoot()
	 OnUsableMessage()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=0
	 }
	 Server = {
		 OnClientConnect()
		 OnStartLevel()
	 }
	 ViewShake()
	 tempVec = {
		 x=0
		 y=0
		 z=0
	 }
 }
 SkillCheck()
 SkipTime = {
	 GetSkipTimeMessageUIString()
 }
 SkipTimeCutsceneData = {
	 Editor = {
		 Icon=sequence.bmp
	 }
	 Properties = {
		 Duration=
		 TargetTime=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esSkipTimeType=
	 }
 }
 SmartAreaShape = {
	 OnInit()
	 Properties = {
		 EventIds=
		 Label=
		 Script = {
			 Misc=
			 bValidWithoutTemplate=false
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 fEventDespawnDistance=500
		 guidLocationId=
		 guidSmartAreaTemplate=DEF0005E-0000-0000-0000-DEF00000005E
		 layerEventLayer=
		 sWH_AI_EntityCategory=
	 }
	 type=SmartAreaShape
 }
 SmartObject = {
	 Editor = {
		 Icon=smartobject.bmp
		 IconOnTop=1
		 Model=Editor/Objects/anchor.cgf
	 }
	 Event_Used()
	 FlowEvents = {
		 Inputs = {
			 Used = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 NavigationStarted=entity
			 Used=bool
		 }
	 }
	 OnInit()
	 OnNavigationStarted()
	 OnReset()
	 OnUsed()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 sWH_AI_EntityCategory=
		 soclasses_SmartObjectClass=
	 }
	 type=SmartObject
 }
 SmartObjectCondition = {
	 Editor = {
		 Model=Editor/Objects/Pyramid.cgf
	 }
	 OnInit()
	 OnPropertyChange()
	 OnReset()
	 Properties = {
		 Action = {
			 soaction_Name=
			 sostate_ObjectState=Busy
			 sostate_UserState=Busy
		 }
		 Delay = {
			 fMaximum=15
			 fMemory=1
			 fMinimum=0.5
		 }
		 Limits = {
			 fDistance=10
			 fOrientation=360
		 }
		 Multipliers = {
			 fOrientation=0
			 fProximity=1
			 fRandomness=0.25
			 fVisibility=0
		 }
		 Object = {
			 object_Model=
			 soclass_Class=BasicEntity
			 sostate_State=Idle
		 }
		 User = {
			 object_Model=
			 soclass_Class=AIOBJECT_ACTOR
			 sostate_State=Idle
		 }
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bIncludeInNavigation=true
		 bRelativeToTarget=false
		 bSaved_by_game=true
	 }
	 Register()
	 type=SmartObjectCondition
 }
 SmartObjectTrigger = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 guidSmartObjectType=
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Smithery = {
	 Editor = {
		 Icon=animobject.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetLinkedSmartObject()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetupTrigger()
	 bUseTrigger=true
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 SocialClass = {
	 GetEntitySocialClassData()
	 GetSocialClassData()
	 data = {
		 apothecary = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=5
			 wealthyCustomer=true
		 }
		 armorer = {
			 crimePunishmentMultiplier=1.5
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=4
			 wealthyCustomer=true
		 }
		 bailiff = {
			 crimePunishmentMultiplier=5
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=5
			 wealthyCustomer=true
		 }
		 baker = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 bandit = {
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 bartender = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 bathhouseAbbess = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 bathhouseMaid = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 beggar = {
			 persuadeToTalkWithLowReputationPriceMultiplier=0.5
		 }
		 blacksmith = {
			 crimePunishmentMultiplier=1.5
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=3
			 wealthyCustomer=true
		 }
		 blacksmithApprentice = {
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 butcher = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 circator = {
			 crimePunishmentMultiplier=2
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=5
		 }
		 collier = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 craftsman = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 cuman = {
			 isCuman=true
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 fake_soldier = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 fightClubFighter = {
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 fortuneTeller = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 herbalist = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 innkeeper = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 lumberjack = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 mason = {
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 mercenary = {
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 merchant = {
			 crimePunishmentMultiplier=1.5
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=3
			 wealthyCustomer=true
		 }
		 miller = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 miner = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 monk = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 nobleman = {
			 crimePunishmentMultiplier=12.5
			 dirtMultiplier=0
			 greetMeWithWave=false
			 lunchInPub=false
			 persuadeToTalkWithLowReputationPriceMultiplier=10
			 wealthyCustomer=true
		 }
		 officer = {
			 crimePunishmentMultiplier=2.5
			 dirtMultiplier=0
			 lunchInPub=false
			 persuadeToTalkWithLowReputationPriceMultiplier=6
			 suppressWatchCorpse=true
			 wealthyCustomer=true
		 }
		 poacher = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 priest = {
			 crimePunishmentMultiplier=1.5
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=5
		 }
		 quarryman = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 refugee = {
			 persuadeToTalkWithLowReputationPriceMultiplier=0.5
		 }
		 renegade = {
			 neverAcceptsSurrender=true
		 }
		 ruffian = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 scribe = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=4
			 wealthyCustomer=true
		 }
		 security = {
			 dirtMultiplier=0.5
			 neverAcceptsSurrender=true
			 persuadeToTalkWithLowReputationPriceMultiplier=5
		 }
		 shoemaker = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 shootmaster = {
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 soldier = {
			 crimePunishmentMultiplier=2.5
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 tailor = {
			 dirtMultiplier=0.3
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 tanner = {
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=2
		 }
		 townsman = {
			 dirtMultiplier=0
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 villager = {
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 wanderer = {
			 persuadeToTalkWithLowReputationPriceMultiplier=1
		 }
		 watchman = {
			 crimePunishmentMultiplier=2.5
			 dirtMultiplier=0.5
			 persuadeToTalkWithLowReputationPriceMultiplier=3
		 }
		 weaponsmith = {
			 crimePunishmentMultiplier=1.5
			 dirtMultiplier=0.7
			 persuadeToTalkWithLowReputationPriceMultiplier=4
			 wealthyCustomer=true
		 }
	 }
	 defaultValues = {
		 crimePunishmentMultiplier=1
		 dealsWithStolenItems=false
		 diceMaximumBet=1000
		 diceMinimumBet=10
		 dirtMultiplier=1
		 greetMeWithWave=true
		 isCuman=false
		 lunchInPub=true
		 neverAcceptsSurrender=false
		 persuadeToTalkWithLowReputationPriceMultiplier=1
		 suppressWatchCorpse=false
		 wealthyCustomer=false
	 }
 }
 Sound = {
	 GetAudioEnvironmentID()
	 GetAudioRtpcID()
	 GetAudioSwitchID()
	 GetAudioSwitchStateID()
	 GetAudioTriggerID()
	 SetAudioRtpcValue()
 }
 SpawnBattle()
 SpawnEnemy()
 SpawnFriend()
 SpawnGroup = {
	 AddSpawnPoints()
	 Editor = {
		 Icon=spawngroup.bmp
	 }
	 Enable()
	 Event_Disable()
	 Event_Enable()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
	 }
	 IsEnabled()
	 LoadModel()
	 NetSetup = {
	 }
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 bDefault=0
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 objModelForSpawnGroup=
		 teamName=
	 }
	 RemoveSpawnPoints()
	 Server = {
		 OnInit()
		 OnShutDown()
		 OnStartGame()
	 }
	 __client_dispatch = {
		 __validated=false
	 }
	 __server_dispatch = {
		 __validated=false
	 }
 }
 SpawnParticleEffect = {
	 Category=approved
	 Implementation()
	 Inputs = {
		 [03] = {
			 [02]=string
			 [01]=Effect
		 }
		 [02] = {
			 [02]=vec3
			 [01]=Position
		 }
		 [01] = {
			 [01]=t_Activate
			 [02]=bool
		 }
	 }
	 Outputs = {
		 [01] = {
			 [01]=Done
			 [02]=bool
		 }
	 }
 }
 SpawnPoint = {
	 Client = {
		 OnInit()
		 OnShutDown()
	 }
	 Editor = {
		 DisplayArrow=1
		 Icon=SpawnPoint.bmp
		 Model=Editor/Objects/spawnpointhelper.cgf
	 }
	 Enable()
	 Event_Disable()
	 Event_Enable()
	 Event_Spawn()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disabled=bool
			 Enabled=bool
			 Spawn=entity
		 }
	 }
	 IsEnabled()
	 OnPropertyChange()
	 Properties = {
		 bDoVisTest=true
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInitialSpawn=false
		 bSaved_by_game=false
		 groupName=
		 teamName=
	 }
	 Server = {
		 OnInit()
		 OnShutDown()
	 }
	 Spawned()
 }
 SpeedLimiter = {
	 CanTrigger()
	 Editor = {
		 Icon=forbiddenarea.bmp
		 IsRotatable=false
		 IsScalable=false
		 Model=Editor/Objects/T.cgf
		 ShowBounds=1
	 }
	 Enable()
	 OnEnterArea()
	 OnLeaveArea()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 Properties = {
		 bAllowRun=1
		 bAllowSprint=0
		 bEnabled=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bOnlyPlayers=1
		 bSaved_by_game=true
	 }
	 Trigger()
 }
 StanceSmartObject = {
	 Editor = {
		 Icon=smartObjectHolder.bmp
	 }
	 GetEditorModel()
	 OnInit()
	 Properties = {
		 Bed = {
			 esReadingQuality=none
			 esSleepQuality=none
		 }
		 Script = {
			 Misc=
			 esBedTypes=bench
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bNo_POI=false
		 bOwnedByHome=false
		 bPOI_discoverable_by_location=true
		 bSaved_by_game=false
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 object_editorModel=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
 }
 StartFG = {
	 Editor = {
		 Icon=stash.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 FlowEvents = {
		 Outputs = {
			 Activate=bool
		 }
	 }
	 OnReset()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 object_Model=
	 }
	 Reset()
 }
 Startup = {
	 CombatTest_Startup()
	 DogTest_startup()
	 DogVsDogTest_startup()
	 Tutorials()
 }
 StashCorpse = {
	 AssignInventory()
	 Close()
	 DoPlayAnimation()
	 Editor = {
		 Icon=stash.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Close()
	 Event_Hide()
	 Event_Lock()
	 Event_Open()
	 Event_StartLockPicking()
	 Event_UnHide()
	 Event_Unlock()
	 FlowEvents = {
		 Inputs = {
			 Close = {
				 [02]=bool
				 [01]()
			 }
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Lock = {
				 [02]=bool
				 [01]()
			 }
			 Open = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
			 Unlock = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Close=bool
			 Hide=bool
			 Lock=bool
			 Open=bool
			 UnHide=bool
			 Unlock=bool
		 }
	 }
	 GenerateLockData()
	 GetActions()
	 GetInventoryToOpen()
	 GetLockDifficulty()
	 GetUsableEvent()
	 IsUsable()
	 IsUsableHold()
	 IsUsableMsgChanged()
	 LoadOriginalModel()
	 LoadPhaseModel()
	 Lock()
	 LockType=chest
	 NeedSerialize()
	 OnClose()
	 OnInventoryClosed()
	 OnItemAdded()
	 OnItemRemoved()
	 OnLoad()
	 OnLockpicked()
	 OnOpen()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 Open()
	 PhysicalizeThis()
	 Properties = {
		 Animation = {
			 anim_Close=
			 anim_Open=
			 bOpenOnly=false
		 }
		 Database = {
			 bReadOnly=false
			 iMinimalShopItemPrice=0
			 nRestockPeriodDays=0
			 sGeneratedInventory=
			 sInventoryPreset=
		 }
		 Lock = {
			 bCanLockPick=true
			 bCanUnlockWithDynamicKey=true
			 bLockDifficultyOverride=false
			 bLockFancinessOverride=false
			 bLocked=false
			 bSendMessage=false
			 esLockFanciness=Common
			 fLockDifficulty=1
			 guidItemClassId=
		 }
		 Phase = {
			 esStashPhaseChangeEvent=Never
			 object_PhaseModel=
		 }
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 Script = {
			 Misc=
			 bAllowUsageInCombatDanger=true
			 bTutorial=false
			 fTutorialMaxThievery=15
			 fTutorialMaxThieveryOpenLimit=10
		 }
		 Sounds = {
			 snd_Close=
			 snd_Open=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractableThroughCollision=false
		 bOwnedByHome=true
		 bSaved_by_game=true
		 bSkipAngleCheck=true
		 esChestContextLabel=none
		 fUseAngle=0.7
		 fUseDistance=2.5
		 fUseLockpickAngle=0.8
		 fUseLockpickDistance=2
		 fUseZOffset=0
		 guidSmartObjectType=
		 object_Model=Objects/special/primitive_cylinder_nodrawmat.cgf
		 sOpenMessage=@ui_open_stash
		 sPickPlaceAnimTag=
		 sWH_AI_EntityCategory=
		 soclass_SmartObjectHelpers=
	 }
	 Reset()
	 ResetAnimationWithActivation()
	 Server = {
		 OnUpdate()
	 }
	 SetBeingUsedByNPC()
	 SetBeingUsedByPlayer()
	 SetInteractive()
	 Unlock()
	 UsesStealUiPrompt()
	 bFirstUpdateAfterResetAnimation=false
	 bLocked=false
	 bNeedUpdate=0
	 bNoAnims=0
	 bOpenAfterUnlock=0
	 bOpened=0
	 bUseSameAnim=0
	 bUseableMsgChanged=0
	 fTutorialOpenCount=0
	 inventoryId=0
	 nDirection=-1
	 nSoundId=0
	 nUserId=0
	 objectPhaseChanged=false
 }
 StashInventoryCollector = {
	 GetHomeInhabitantsData()
	 GetNPCInformation()
	 GetOwnerPrefix()
	 GetOwnersData()
	 GetStashHome()
	 GetStashInformation()
	 GetStashOwner()
	 GetStashWuid()
	 HasClothingLink()
	 IsMasterStash()
	 IsShopStash()
 }
 StashInventoryGenerator = {
	 GetInventoryFromData()
 }
 Statistics = {
	 Increment()
	 Insert()
	 Remove()
	 Reset()
	 Set()
 }
 StoneThrowing = {
	 CanUse()
	 StartMinigame()
 }
 StoneThrowingNode = {
	 Editor = {
		 Icon=POI.bmp
	 }
 }
 StoneThrowingPile = {
	 Editor = {
		 Icon=mine.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 esOrientation=left
		 esThrowType=hole
		 guidSmartObjectType=
		 object_Model=
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetupTrigger()
	 bUseTrigger=true
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 StrFormat()
 System = {
	 ActivateLight()
	 ActivatePortal()
	 AddCCommand()
	 ApplicationTest()
	 ApplyForceToEnvironment()
	 Break()
	 BrowseURL()
	 CheckHeapValid()
	 ClearConsole()
	 ClearKeyState()
	 CreateDownload()
	 DebugStats()
	 DeformTerrain()
	 DeformTerrainUsingMat()
	 Draw2DLine()
	 DrawLabel()
	 DrawLine()
	 DrawText()
	 DumpMMStats()
	 DumpMemStats()
	 DumpMemoryCoverage()
	 DumpWinHeaps()
	 EnableHeatVision()
	 EnableMainView()
	 EnableOceanRendering()
	 EnumAAFormats()
	 EnumDisplayFormats()
	 Error()
	 ExecuteCommand()
	 GetArchetypeProperties()
	 GetCVar()
	 GetConfigSpec()
	 GetCurrAsyncTime()
	 GetCurrTime()
	 GetEntities()
	 GetEntitiesByClass()
	 GetEntitiesInSphere()
	 GetEntitiesInSphereByClass()
	 GetEntity()
	 GetEntityByGUID()
	 GetEntityByName()
	 GetEntityByTextGUID()
	 GetEntityClass()
	 GetEntityIdByName()
	 GetEntityPositionAndDirection()
	 GetFrameID()
	 GetFrameTime()
	 GetLocalOSTime()
	 GetNearestEntityByClass()
	 GetNearestEntityByName()
	 GetOutdoorAmbientColor()
	 GetPhysicalEntitiesInBox()
	 GetPhysicalEntitiesInBoxByClass()
	 GetPostProcessFxParam()
	 GetScreenFx()
	 GetSkyColor()
	 GetSkyHighlight()
	 GetSunColor()
	 GetSurfaceTypeIdByName()
	 GetSurfaceTypeNameById()
	 GetSystemMem()
	 GetTerrainElevation()
	 GetUserName()
	 GetViewCameraAngles()
	 GetViewCameraDir()
	 GetViewCameraFov()
	 GetViewCameraPos()
	 GetViewCameraUpDir()
	 GetViewport()
	 GetWind()
	 IsDevModeEnable()
	 IsEditing()
	 IsEditor()
	 IsFileExist()
	 IsHDRSupported()
	 IsMultiplayer()
	 IsPointIndoors()
	 IsPointVisible()
	 IsValidMapPos()
	 LoadFont()
	 LoadLocalizationXml()
	 LoadTextFile()
	 Log()
	 LogAlways()
	 LogToConsole()
	 PrepareEntityFromPool()
	 ProjectToScreen()
	 Quit()
	 QuitInNSeconds()
	 RayTraceCheck()
	 RayWorldIntersection()
	 RemoveEntity()
	 ResetPoolEntity()
	 ReturnEntityToPool()
	 ScanDirectory()
	 ScreenToTexture()
	 SetBudget()
	 SetCVar()
	 SetConsoleImage()
	 SetGammaDelta()
	 SetOutdoorAmbientColor()
	 SetPostProcessFxParam()
	 SetScissor()
	 SetScreenFx()
	 SetSkyColor()
	 SetSkyHighlight()
	 SetSunColor()
	 SetViewCameraFov()
	 SetVolumetricFogModifiers()
	 SetWaterVolumeOffset()
	 SetWind()
	 ShowConsole()
	 ShowDebugger()
	 SpawnEntity()
	 ViewDistanceGet()
	 ViewDistanceSet()
	 Warning()
 }
 TBrutus()
 TDebug()
 TDetail()
 TError()
 TFatal()
 TInfo()
 TTP_Always=2
 TTP_Last=0
 TTP_OverSounds=1
 TURN_TIMER=1
 TWarning()
 TagPointWithScript = {
	 Editor = {
		 Icon=TagPoint.bmp
	 }
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 sWH_AI_EntityCategory=
	 }
	 type=TagPoint
 }
 TestScripted = {
	 Activate_output()
	 Category=wip
	 Inputs = {
		 [01]=input
	 }
	 OnActivate_input()
	 Outputs = {
		 [01]=output
	 }
 }
 TextMessageCenter=0
 TextMessageConsole=1
 TextMessageError=2
 TextMessageInfo=3
 TextMessageServer=4
 TextMessageToAll=8
 TextMessageToAllRemote=65544
 TextMessageToClient=1
 ThreatenByPlayer()
 TimeUtils = {
	 CheckTimeInBounds()
	 ConvertDecimalHoursToDigitalTimeOfDay()
	 ConvertTimeArrayToDecimalHours()
	 ConvertTimeArrayToMiliseconds()
	 ConvertTimeStringToTimeArray()
	 ConvertTimesStringToNumArray()
	 FloatToTime()
	 ForwardTime()
	 GetOneDayWaitDuration()
 }
 Tmax_trace_level()
 ToStr()
 Torch = {
	 Cleanup()
	 Disable()
	 Enable()
	 Event_Disable()
	 Event_Enable()
	 Event_GroundCollision()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
			 GroundCollision = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
			 GroundCollision=bool
		 }
	 }
	 GetActions()
	 GetUsableName()
	 GroundCollision()
	 InteractorPriority=2
	 IsCrossCenteringEnabled()
	 OnActivate()
	 OnBurningOut()
	 OnDestroy()
	 OnEnablePhysics()
	 OnIdle()
	 OnLevelLoaded()
	 OnLoad()
	 OnPreBurnOut()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnUsed()
	 OnUsedHold()
	 PhysicalizeThis()
	 Properties = {
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bInteractiveCollisionClass=false
		 bSaved_by_game=true
		 sHelper=slt_particle
		 sWH_AI_EntityCategory=
	 }
	 Properties2 = {
		 BurningOutParticleEffect=WH_Particels.fires.torch_burn_out
		 HighVisibilityParticleEffect=WH_Particels.fires.torch_longdistance
		 ParticleEffect=WH_Particels.fires.torch_trailer
		 bActive=true
		 fBurningOutAnimSpeed=30
		 fBurnoutDurationSec=20
		 fPreBurnoutDurationSec=5
		 nBurningOutLightSourceStyle=22
	 }
	 Server = {
		 Active = {
			 OnBeginState()
		 }
		 BurningOut = {
			 OnBeginState()
			 OnUpdate()
		 }
		 Idle = {
			 OnBeginState()
			 OnUpdate()
		 }
		 PreBurnOut = {
			 OnBeginState()
			 OnUpdate()
		 }
	 }
	 SetInteractiveCollisionType()
	 StartBurnOut()
	 StartPreBurnOut()
	 States = {
		 [02]=Idle
		 [03]=PreBurnOut
		 [01]=Active
		 [04]=BurningOut
	 }
	 Use()
	 bIsBurning=false
	 fBurnOutTime=0
	 npcOnly=false
 }
 Trace = {
	 Brutus()
	 Debug()
	 Detail()
	 Error()
	 Fatal()
	 Info()
	 Msg()
	 PlotXY()
	 TableXY()
	 Warning()
	 max_trace_level()
 }
 TranscriptionTable = {
	 Editor = {
		 Icon=ledge.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetRandomTranscriptionBook()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=100
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=false
		 }
		 Script = {
			 Misc=
			 sTranscriptionBooksItemIds=3bed7288-086a-4a62-8291-22f32291b06f|40d029c9-3b81-4758-8aa2-a6c71fc4500b|5b262db6-3fa3-4be6-b0d5-4c50f2d35a5e|5943bccf-03ce-4ced-bef7-b28f4d5f3fb1|dbf96a07-0769-4327-ae31-14a95bdfd603
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 object_Model=Objects/props/alchemy/bookstand/bookstand.cgf
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetUsable()
	 SetupTrigger()
	 bUsable=false
	 bUseTrigger=false
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 TriggerArea = {
	 Properties = {
		 EventIds=
		 Label=
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 bTrackAlways=false
		 layerEventLayer=
		 sWH_AI_EntityCategory=
	 }
	 type=TriggerArea
 }
 TriggerBase = {
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=@ui_hud_use_item
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 UseMessage=
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sRequiredSoulAbility=
			 sSendMessageTo=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bQuestSystemTrigger=false
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 Tutorials = {
	 InitData()
 }
 UI = {
	 OnApseLinkNodeDespawn()
	 OnApseLinkNodeSpawn()
	 OnShopLinkNodeDespawn()
	 OnShopLinkNodeSpawn()
 }
 UIAction = {
	 CallFunction()
	 DisableAction()
	 EnableAction()
	 EndAction()
	 GetAlpha()
	 GetArray()
	 GetPos()
	 GetRotation()
	 GetScale()
	 GetVariable()
	 GotoAndPlay()
	 GotoAndPlayFrameName()
	 GotoAndStop()
	 GotoAndStopFrameName()
	 HideElement()
	 IsVisible()
	 RegisterActionListener()
	 RegisterElementListener()
	 RegisterEventSystemListener()
	 ReloadElement()
	 RequestHide()
	 SetAlpha()
	 SetArray()
	 SetPos()
	 SetRotation()
	 SetScale()
	 SetVariable()
	 SetVisible()
	 ShowElement()
	 StartAction()
	 UnloadElement()
	 UnregisterActionListener()
	 UnregisterElementListener()
	 UnregisterEventSystemListener()
 }
 UIApseLinkNode = {
	 Editor = {
		 Icon=Flash.bmp
	 }
	 OnDestroy()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
 }
 UIMap = {
	 GoToCheckpointMark()
 }
 UIShopLinkNode = {
	 Editor = {
		 Icon=Flash.bmp
	 }
	 OnDestroy()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
 }
 UNIT_CLASS_CIVILIAN=64
 UNIT_CLASS_COMPANION=128
 UNIT_CLASS_ENGINEER=16
 UNIT_CLASS_INFANTRY=4
 UNIT_CLASS_LEADER=2
 UNIT_CLASS_MEDIC=32
 UNIT_CLASS_SCOUT=8
 UNIT_CLASS_UNDEFINED=1
 UNORDERED=1
 UNRELIABLE_ORDERED=2
 UPR_COMBAT_FLIGHT=2
 UPR_COMBAT_GROUND=1
 UPR_COMBAT_MARINE=4
 UPR_COMBAT_RECON=8
 VEC3=86
 Variables = {
	 CreateContext()
	 DecrementGlobal()
	 DecrementLocal()
	 DestroyContext()
	 DiscardContextVariables()
	 GetGlobal()
	 GetLocal()
	 IncrementGlobal()
	 IncrementLocal()
	 SetGlobal()
	 SetLocal()
 }
 VectorUtils = {
	 Copy()
	 CrossProduct()
	 Distance()
	 DistanceSquared()
	 DistanceSquared2D()
	 DotProduct()
	 DotProduct2D()
	 GetAngleBetween()
	 GetAngleBetween2D()
	 GetDirection()
	 IsZero()
	 Length()
	 LengthSquared()
	 Lerp()
	 LogVector()
	 Negate()
	 Normalize()
	 Product()
	 Rotate2D()
	 Rotate90AroundZ()
	 RotateAround()
	 RotateMinus90AroundZ()
	 Scale()
	 Subtract()
	 Sum()
	 ToString()
 }
 ViewDist = {
	 Editor = {
		 Model=Editor/Objects/T.cgf
	 }
	 Event_Disable()
	 Event_Enable()
	 FadeViewDist()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
		 }
	 }
	 OnEnterArea()
	 OnInit()
	 OnLeaveArea()
	 OnLoad()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 OnTimer()
	 Properties = {
		 MaxViewDist=25
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 fFadeTime=1
	 }
	 ResetValues()
	 type=ViewDistController
 }
 VisibilityArea = {
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 linked_to_global_area=false
	 }
	 type=VisibilityArea
 }
 VolumeObject = {
	 Create()
	 Delete()
	 ENTITY_DETAIL_ID=1
	 Editor = {
		 Icon=Clouds.bmp
		 Model=Editor/Objects/Particles.cgf
	 }
	 Event_Hide()
	 Event_Show()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 Show = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hide=bool
			 Show=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnSpawn()
	 Properties = {
		 Movement = {
			 bAutoMove=0
			 fFadeDistance=0
			 vector_SpaceLoopBox = {
				 x=2000
				 y=2000
				 z=2000
			 }
			 vector_Speed = {
				 x=0
				 y=0
				 z=0
			 }
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 file_VolumeObjectFile=Libs/Clouds/Default.xml
	 }
	 SetMovementProperties()
	 type=VolumeObject
 }
 WAIT_ALL=0
 WAIT_ANY=1
 WAIT_ANY_2=2
 WHCart = {
	 Editor = {
		 Icon=vehicle.bmp
		 IconOnTop=1
	 }
	 GetCartType()
	 GetIsQuestCart()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnSpawn()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bIsQuestCart=false
		 bMovingSmartObject=true
		 bSaved_by_game=true
		 guidSmartObjectType=DEF0005E-0000-0000-0000-DEF00000005E
		 sCartType=fourWheeled
		 soclass_SmartObjectHelpers=Cart
	 }
	 Reset()
	 cartType=fourWheeled
	 isQuestCart=false
 }
 WHCartMountPoint = {
	 Editor = {
		 Icon=Ladder.bmp
		 IconOnTop=1
		 ShowBounds=1
	 }
	 Event_Use()
	 Event_User()
	 FlowEvents = {
		 Inputs = {
			 Use = {
				 [02]=entityid
				 [01]()
			 }
			 User = {
				 [02]=entityid
				 [01]()
			 }
		 }
		 Outputs = {
			 OnUse=bool
		 }
	 }
	 GetActions()
	 GetUsableMessage()
	 IsUsable()
	 IsUsableMsgChanged()
	 LoadModel()
	 OnEnablePhysics()
	 OnMount()
	 OnPropertyChange()
	 OnReset()
	 OnSpawn()
	 OnUsed()
	 PhysicalizeThis()
	 Properties = {
		 Physics = {
			 Density=-1
			 Mass=-1
			 bPhysicalize=true
			 bPushableByPlayers=false
			 bRigidBody=true
		 }
		 bCartFrontSeat=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=false
		 fUseAngle=0.92
		 fUseDistance=2.2
		 object_Model=objects/special/primitive_cylinder.cgf
		 soclasses_SmartObjectClass=
	 }
	 Reset()
	 ResetChild()
	 SetInteractiveCollisionType()
	 SetupTrigger()
	 bUseTrigger=true
	 bUseableMsgChanged=0
	 fMinUseDistance=0.7
	 fUseAngle=0.7
	 nUserId=0
 }
 WS_PRIMARY=0
 WS_SECONDARY=1
 WaterPuddle = {
	 Editor = {
		 Icon=Water.bmp
		 IsRotatable=true
		 IsScalable=false
		 Model=Editor/Objects/T.cgf
		 ShowBounds=1
	 }
	 Event_Hide()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hidden=bool
			 UnHidden=bool
		 }
	 }
	 IsShapeOnly()
	 OnPropertyChange()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 bThisIsAPuddle=0
	 }
	 type=WaterPuddle
 }
 WaterTubeActionTrigger = {
	 CanWash()
	 CanWashWithSoap()
	 Editor = {
		 Icon=Trigger.bmp
	 }
	 GetActions()
	 GetHint()
	 GetHintHold()
	 GetLinkedSmartObject()
	 GetOwner()
	 InteractorPriority=4
	 IsActionAvailable()
	 IsEnabled()
	 IsEnabledByProperties()
	 IsEnabledByScriptPerk()
	 IsEnabledBySoulAbility()
	 IsEnabledFromQuestSystem()
	 IsEnabledHold()
	 IsLegal()
	 IsLegalHold()
	 IsLegalImpl()
	 IsUsable()
	 IsUsableHold()
	 NeedSerialize()
	 OnAction()
	 OnEditorSetGameMode()
	 OnInventoryClosed()
	 OnInventoryItemUsed()
	 OnLoad()
	 OnNPCStateSearchDone()
	 OnPropertyChange()
	 OnReset()
	 OnResourcesHosted()
	 OnResourcesHostingInterrupted()
	 OnSave()
	 OnSpawn()
	 OnTriggerPoint()
	 OnUsed()
	 OnUsedHold()
	 OpenInventory()
	 PhysicalizeThis()
	 Properties = {
		 Click = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 CannotWashReason=
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=@ui_hud_use_item
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=true
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=Stance
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=sitting
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 Hold = {
			 Angle = {
				 fAngleTolerance=180
				 fApproachDirection=0
			 }
			 InventoryFilter=
			 InventoryMultiFilter=
			 Item = {
				 bAllowUseWithoutItem=false
				 bDeleteAfterUse=false
				 guidItemClassId=
				 sAliasToBarkWithoutItem=
			 }
			 Synchro = {
				 nNumParticipants=2
				 sKeyContextLinkName=
				 sKeyName=
				 sTimeout=
			 }
			 UseMessage=
			 UseNotOwnerMessage=@ui_hud_use_item_not_owner
			 bAllowNoOwner=true
			 bAllowTorch=false
			 bCheckOwner=false
			 bDelayedReportUse=false
			 bDisableFocusCamera=true
			 bIsActive=false
			 bIsActiveInCombat=false
			 bIsActiveInTenseCircumstance=false
			 bIsActiveWhileCarryingCorpse=false
			 bRequireTargetHaveDialog=false
			 bSaveLock=false
			 esActionType=None
			 fActiveDistance=-1
			 fActiveMinDistance=-1
			 fZToleration=-1
			 guidRequiredScriptPerk=
			 sAction=
			 sActionTags=
			 sAnimationResourceOverride=
			 sRequiredSoulAbility=
			 sSendMessageTo=
			 sSlaveLinkName=
			 sTriggerPointId=
		 }
		 InteractorPriorityOverride=-1
		 Script = {
			 Misc=
		 }
		 bExported_to_game=true
		 bExported_to_test=true
		 bQuestSystemTrigger=false
		 bSaved_by_game=true
		 fMinDirtBloodBody=0.6
		 fMinDirtBloodClothing=0.6
		 guidSoap=
		 object_Model=objects/special/primitive_cylinder.cgf
		 sWH_AI_EntityCategory=
	 }
	 ReportUse()
	 ResetHoldMessage()
	 ResetUseMessage()
	 SetAvailable()
	 SetAvailableHold()
	 SetHoldMessage()
	 SetUseMessage()
	 UpdateMaterial()
	 UserNoItem()
	 _CheckDialog()
	 _GetSendTargets()
 }
 WaterVolume = {
	 Editor = {
		 Icon=Water.bmp
		 IsRotatable=true
		 IsScalable=false
		 Model=Editor/Objects/T.cgf
		 ShowBounds=1
	 }
	 Event_Hide()
	 Event_PhysicsDisable()
	 Event_PhysicsEnable()
	 Event_UnHide()
	 FlowEvents = {
		 Inputs = {
			 Hide = {
				 [02]=bool
				 [01]()
			 }
			 PhysicsDisable = {
				 [02]=bool
				 [01]()
			 }
			 PhysicsEnable = {
				 [02]=bool
				 [01]()
			 }
			 UnHide = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Hidden=bool
			 UnHidden=bool
		 }
	 }
	 IsShapeOnly()
	 OnPropertyChange()
	 OnSpawn()
	 Properties = {
		 CausticHeight=0.5
		 CausticIntensity=1
		 CausticTiling=1
		 Depth=5
		 FogColorMultiplier=0.5
		 FogDensity=0.5
		 FogShadowing=0.5
		 MaterialLayerMask=0
		 MinSpec=0
		 MultiplayerOptions = {
			 bNetworked=false
		 }
		 StreamSpeed=0
		 UScale=1
		 VScale=1
		 ViewDistanceRatio=100
		 bAwakeAreaWhenMoving=false
		 bCapFogAtVolumeDepth=false
		 bCaustics=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bFogColorAffectedBySun=true
		 bIsRiver=false
		 bSaved_by_game=true
		 color_FogColor = {
			 x=0.005
			 y=0.01
			 z=0.02
		 }
	 }
	 type=WaterVolume
 }
 WildDog = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 dashPossibleCheckDistance=12
		 dashPossibleCheckRequiredSpeedParam=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_dog_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_dog_database.adb
	 CombatOpponentMnTag=oppDog
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 OpponentMnTag=relatedDog
	 ProceduralContextLook = {
		 fadeInSeconds=1
		 fadeOutMinDistance=0
		 fadeOutSeconds=1
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Dog
			 footstepEffect=footsteps_Dog
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=wild_dog
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/Dog/dog.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.55
		 pos = {
			 x=0
			 y=0.05
			 z=0.52
		 }
		 posCarcass = {
			 x=0.1
			 y=0.16
			 z=0.08
		 }
		 radius=0.13
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=WildDog
	 defaultSoulClass=wilddog
	 gameParams = {
		 animatedCharacterTurnSpeedSmoothingTime=0.2
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 lookFOV=180
		 stance = {
			 carryCorpse = {
				 heightCollider=0.4
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 combat = {
				 heightCollider=0.4
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=0
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 crouch = {
				 heightCollider=0.4
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=1
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=30
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=25
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=25
		 stiffness_scale=73
	 }
 }
 Wind = {
	 Editor = {
		 Icon=Tornado.bmp
	 }
	 Event_Disable()
	 Event_Enable()
	 Fade()
	 FlowEvents = {
		 Inputs = {
			 Disable = {
				 [02]=bool
				 [01]()
			 }
			 Enable = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Disable=bool
			 Enable=bool
		 }
	 }
	 OnEnterArea()
	 OnInit()
	 OnLeaveArea()
	 OnLoad()
	 OnProceedFadeArea()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 OnShutDown()
	 OnTimer()
	 Properties = {
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
		 fFadeTime=1
		 vVelocity = {
			 x=1
			 y=0
			 z=0
		 }
	 }
	 ResetValues()
	 type=WindController
 }
 WindArea = {
	 Editor = {
		 Icon=Tornado.bmp
	 }
	 Event_Activate()
	 Event_Deactivate()
	 FlowEvents = {
		 Inputs = {
			 Activate = {
				 [02]=bool
				 [01]()
			 }
			 Deactivate = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Activate=bool
			 Deactivate=bool
		 }
	 }
	 OnInit()
	 OnLoad()
	 OnPropertyChange()
	 OnReset()
	 OnSave()
	 PhysicalizeThis()
	 Properties = {
		 AirDensity=0
		 AirResistance=0
		 Dir = {
			 x=0
			 y=0
			 z=0
		 }
		 FalloffInner=0
		 Size = {
			 x=10
			 y=10
			 z=10
		 }
		 Speed=0
		 bActive=true
		 bEllipsoidal=1
		 bExported_to_game=true
		 bExported_to_test=true
		 bSaved_by_game=true
	 }
	 _PhysTable = {
	 }
 }
 Wolf = {
	 AIMovementAbility = {
		 AIMovementSpeeds = {
			 Relaxed = {
				 Run = {
					 [03]=3
					 [01]=2.5
					 [02]=2
				 }
				 Slow = {
					 [01]=0.9
					 [03]=1.3
					 [02]=0.8
				 }
				 Sprint = {
					 [02]=5
					 [01]=7
					 [03]=8
				 }
				 Walk = {
					 [01]=1.5
					 [03]=2
					 [02]=1.3
				 }
			 }
		 }
		 avoidanceRadius=1.5
		 b3DMove=0
		 collisionAvoidanceParticipation=true
		 collisionAvoidanceRadiusIncrement=0
		 cornerSlowDown=0.75
		 dashPossibleCheckDistance=12
		 dashPossibleCheckRequiredSpeedParam=0.75
		 maneuverSpeed=1.5
		 maneuverTrh=2
		 maxAccel=2
		 maxDecel=4
		 maxTurnRadius=3
		 minTurnRadius=0
		 pathFindPrediction=0.5
		 pathLookAhead=1
		 pathRadius=0.4
		 pathRegenIntervalDuringTrace=4
		 pathSpeedLookAheadPerSpeed=-1.5
		 pathType=AIPATH_HUMAN
		 resolveStickingInTrace=1
		 runSpeed=2.5
		 sprintSpeed=7
		 usePredictiveFollowing=1
		 velDecay=0.5
		 walkSpeed=1.5
	 }
	 ActionController=Animations/Mannequin/ADB/kcd_dog_controllerdefs.xml
	 AddAnimalLootAction()
	 AddLootAction()
	 AnimDatabase3P=Animations/Mannequin/ADB/kcd_dog_database.adb
	 CombatOpponentMnTag=oppDog
	 Editor = {
		 Icon=User.bmp
		 IconOnTop=1
	 }
	 Event_Spawn()
	 Event_SpawnKeep()
	 Event_Spawn_Internal()
	 Event_Spawned()
	 Expose()
	 FlowEvents = {
		 Inputs = {
			 Spawn = {
				 [02]=bool
				 [01]()
			 }
		 }
		 Outputs = {
			 Spawned=entity
		 }
	 }
	 ForceUsable()
	 GetActions()
	 GetDogActions()
	 GetFlowgraphForwardingEntity()
	 GetReturnToPoolWeight()
	 InitialSetup()
	 InteractorPriority=2
	 IsAIControlled()
	 IsChatUsable=1
	 IsDogUsable=1
	 IsUsable()
	 NotifyRemoval()
	 OnButcher()
	 OnDestroy()
	 OnDogRequest()
	 OnEditorSetGameMode()
	 OnLoadAI()
	 OnPropertyChange()
	 OnReset()
	 OnSaveAI()
	 OnSpawn()
	 OnUsed()
	 OpponentMnTag=relatedDog
	 ProceduralContextLook = {
		 fadeInSeconds=1
		 fadeOutMinDistance=0
		 fadeOutSeconds=1
		 polarCoordinatesMaxPitchDegreesPerSecond=360
		 polarCoordinatesMaxYawDegreesPerSecond=360
		 polarCoordinatesSmoothEnable=true
		 polarCoordinatesSmoothTimeSeconds=0.2
	 }
	 Properties = {
		 CharacterSounds = {
			 foleyEffect=foley_Dog
			 footstepEffect=footsteps_Dog
		 }
		 ControlProfile=0
		 LipSync = {
			 TransitionQueueSettings = {
				 nAnimLayer=12
				 nCharacterSlot=0
				 playbackWeight=0.75
				 sDefaultAnimName=facial_chewing_01
			 }
			 bEnabled=true
			 esLipSyncType=LipSync_TransitionQueue
		 }
		 NPC = {
			 aianchorHome=
			 eiNPCCategory=1
		 }
		 Rendering = {
			 bWrinkleMap=true
		 }
		 Script = {
			 Misc=
			 bIdleUntilFirstPatch=false
		 }
		 SpawnedEntityName=
		 aicharacter_character=
		 bCanHoldInformation=true
		 bExported_to_game=true
		 bExported_to_test=true
		 bInvulnerable=false
		 bIsDummy=false
		 bNotPlayerMountable=false
		 bSaved_by_game=true
		 bSpawner=false
		 bWH_ListenerObject=true
		 bWH_PerceptibleObject=true
		 bWH_PerceptorObject=true
		 bWH_RequiresHome=false
		 commrange=30
		 eiColliderMode=0
		 esBehaviorSelectionTree=
		 esClothingConfig=wolf
		 esCommConfig=npc_default
		 esModularBehaviorTree=IdleSeq
		 esNavigationType=MediumSizedCharacters
		 esVoice=npc_default
		 fFmodCharacterTypeParam=0
		 fileHitDeathReactionsParamsDataFile=Libs/HitDeathReactionsData/HitDeathReactions_Default.xml
		 fileModel=Objects/Characters/animals/wolf/wolf.cdf
		 guidSharedSoulId=
		 nModelVariations=0
		 physicMassMult=1
		 sWH_AI_EntityCategory=
		 sharedSoulInstanceId=0
	 }
	 PropertiesInstance = {
		 aibehavior_behaviour=
		 bAutoDisable=false
		 esVoice=
		 nVariation=0
		 soclasses_SmartObjectClass=
	 }
	 RegisterAI()
	 Reset()
	 ResetAIParameters()
	 ResetCommon()
	 ReviveInEditor()
	 Server = {
		 OnInit()
	 }
	 SetActorModel()
	 UseMannequinAGState=true
	 ai=1
	 collisionCapsule = {
		 axis = {
			 x=0
			 y=1
			 z=0
		 }
		 height=0.53
		 pos = {
			 x=0
			 y=0.05
			 z=0.52
		 }
		 posCarcass = {
			 x=0
			 y=0.1
			 z=0.08
		 }
		 radius=0.13
	 }
	 collisionClass=2.09715e+06
	 defaultSoulArchetype=Wolf
	 defaultSoulClass=wolf
	 gameParams = {
		 animatedCharacterTurnSpeedSmoothingTime=0.2
		 inertia=0
		 inertiaAccel=0
		 jumpHeight=1
		 lookFOV=180
		 stance = {
			 carryCorpse = {
				 heightCollider=0.4
				 heightPivot=0
				 name=carryCorpse
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=9
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 combat = {
				 heightCollider=0.4
				 heightPivot=0
				 name=combat
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=0
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 crouch = {
				 heightCollider=0.4
				 heightPivot=0
				 name=crouch
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=1
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 injured = {
				 heightCollider=1.05
				 heightPivot=0
				 name=injured
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=7
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
			 normal = {
				 heightCollider=0.4
				 heightPivot=0
				 name=normal
				 size = {
					 x=0.1
					 y=0
					 z=0.01
				 }
				 stanceId=3
				 useCapsule=0
				 viewOffset = {
					 x=0
					 y=0.1
					 z=0.5
				 }
			 }
			 stoneThrowing = {
				 heightCollider=1.05
				 heightPivot=0
				 name=stoneThrowing
				 size = {
					 x=0.3
					 y=0
					 z=0.4
				 }
				 stanceId=2
				 useCapsule=1
				 viewOffset = {
					 x=0
					 y=0.1
					 z=1.6
				 }
			 }
		 }
	 }
	 physicsParams = {
		 Living = {
			 air_resistance=0.5
			 colliderMat=mat_player_collider
			 gravity=30
			 inertia=11
			 inertiaAccel=11
			 k_air_control=0.1
			 mass=25
			 max_climb_angle=89
			 max_jump_angle=89
			 max_vel_ground=16
			 min_fall_angle=89
			 min_slide_angle=89
			 timeImpulseRecover=1
		 }
		 additionalPhysicsMass=1
		 flags=0
		 mass=25
		 stiffness_scale=73
	 }
 }
 XGenAIModule = {
	 AddLink()
	 AddRecordedIntellectForFaderProfiling()
	 DespawnPerceptibleVolume()
	 FindLinks()
	 GetBrainVariable()
	 GetEntityByWUID()
	 GetEntityIdByWUID()
	 GetMyWUID()
	 GetOwner()
	 GetWuidDebugString()
	 HasClothingLink()
	 IgnorePerception()
	 IsOneshotAvailable()
	 IsOneshotBlocked()
	 IsPointInAreaWithLabel()
	 IsPointInAreaWithLabelWUID()
	 IsStanceAvailable()
	 IsStanceBlocked()
	 IsUnstanceAvailable()
	 IsUnstanceBlocked()
	 LootEnd()
	 LootInventoryBegin()
	 MakeTableFromType()
	 OnDestroy()
	 OnPropertyChange()
	 OnSpawn()
	 OnStart()
	 PlaceToSlotFromInventory()
	 ProduceSound()
	 ProduceSoundWUID()
	 SendMessageToEntity()
	 SendMessageToEntityArray()
	 SendMessageToEntityData()
	 SetBrainVariable()
	 SetPlayerDogMode()
	 SpawnPerceptibleVolume()
	 SpawnPerceptibleVolumeOnWUID()
	 _GetDataVariable()
	 _SetDataVariable()
 }
 _IAction()
 _IActionMap()
 _IClass()
 _IDisabledBarkMetarole()
 _IEnabled()
 _IFunc()
 _IHint()
 _IInteraction()
 _IReason()
 _IType()
 _IUiOrder()
 _IUiVisible()
 _VERSION=Lua 5.1
 __land=0000000000000000
 __null=0000000000000000
 __player=0000000000000000
 __playerDog=0000000000000000
 __version = {
	 current=0
	 loaded=0
 }
 _aitick=0
 _dataMetaTable = {
	 __index()
	 __newindex()
 }
 _frametime=0
 _time=0
 alarm=19
 arrow_hit=15
 arshift()
 assert()
 band()
 bio_drunkeness=12
 bio_exhaustion=11
 bio_hunger=10
 bnot()
 bor()
 bow_fired=13
 bullet_hit=16
 bxor()
 collectgarbage()
 collision_class_articulated=8
 collision_class_living=4
 collision_class_particle=64
 collision_class_soft=16
 collision_class_terrain=1
 collision_class_wheeled=2
 combat=1
 combatScript=6
 coroutine = {
	 create()
	 resume()
	 running()
	 status()
	 wrap()
	 yield()
 }
 debug = {
	 debug()
	 getfenv()
	 gethook()
	 getinfo()
	 getlocal()
	 getmetatable()
	 getregistry()
	 getupvalue()
	 setfenv()
	 sethook()
	 setlocal()
	 setmetatable()
	 setupvalue()
	 traceback()
 }
 decoy_distract=8
 dofile()
 dog_attack_command=23
 dog_bark=22
 dog_distract=24
 door=7
 dramatic_bark=18
 eGE_ChangedTeam=9
 eGE_Connected=6
 eGE_Currency=12
 eGE_Damage=24
 eGE_Death=20
 eGE_Disconnected=7
 eGE_DiscreetSample=0
 eGE_GameEnd=5
 eGE_GameReset=1
 eGE_GameStarted=2
 eGE_Rank=13
 eGE_Renamed=8
 eGE_RoundEnd=4
 eGE_ScoreReset=15
 eGE_Scored=11
 eGE_Spectator=14
 eGE_SuddenDeath=3
 eGE_WeaponHit=25
 eGameCacheResourceType_Material=3
 eGameCacheResourceType_StaticObject=2
 eGameCacheResourceType_Texture=0
 eGameCacheResourceType_TextureDeferredCubemap=1
 ent_all=287
 ent_independent=16
 ent_living=8
 ent_rigid=4
 ent_sleeping_rigid=2
 ent_sort_by_mass=131072
 ent_static=1
 ent_terrain=256
 enum_CombatEvent = {
	 aoutOfAmmo=0
 }
 enum_CombatMoveEvent = {
	 any=4
	 onMeleeRange=2
	 tooFar=1
	 unreachable=0
	 unreached=3
	 unreachedUnreachable=5
	 unreachedUnreachableTooFar=6
 }
 enum_CompanionType = {
	 Dog=1
	 Horse=0
 }
 enum_HitReactionStrength = {
	 Exhausting=4
	 Fatal=7
	 Healing=1
	 MajorInjury=6
	 MinorInjury=5
	 Tickle=2
	 Unpleasant=3
	 Zero=0
 }
 enum_HitReactionType = {
	 Bullet=6
	 Collision=3
	 Decoy=8
	 Fall=5
	 Melee=1
	 MeleeStealth=2
	 Shock=10
	 Stone=9
 }
 enum_HorseCommands = {
	 Autopilot_Dash=31
	 Autopilot_Run=29
	 Autopilot_Sprint=30
	 Autopilot_Walk=28
	 ClearPlayerHorse=3
	 ComeToMe=1
	 CreateFormation=4
	 CustomBehavior=19
	 Dash=27
	 Eat=17
	 GoInFormation=16
	 GoToHome=14
	 GoToPath=15
	 GoToPoint=11
	 GoToPointExact=12
	 GoToWaypoints=13
	 Halt=0
	 OnDismount=23
	 OnLead=18
	 OnMount=22
	 Reserve=20
	 ReserveRelease=21
	 RideHome=8
	 RideInFormation=10
	 RidePath=9
	 RidePoint=5
	 RidePointExact=6
	 RideWaypoints=7
	 Run=25
	 SetPlayerHorse=2
	 Sprint=26
	 Walk=24
 }
 enum_HorseResult = {
	 Failed=0
	 Fall=2
	 Success=1
 }
 enum_MeleeHit = {
	 receivedComboHit=4
	 receivedDefendedHit=2
	 receivedFinalComboHit=6
	 receivedHit=0
	 receivedHitByBrokenBlock=3
	 receivedHitWithoutFreeAttack=7
	 receivedNonFinalComboHit=5
	 receivedUndefendedHit=1
 }
 enum_PatrolType = {
	 BackAndForth=1
	 Loop=2
	 ToEndPoint=0
 }
 enum_UnconsciousReason = {
	 alcohol=2
	 exhaustion=3
	 knockout=1
	 unknown=0
 }
 enum_WeaponChangeFilter = {
	 any=0
	 melee=1
	 missile=2
	 oversized=3
	 unarmed=4
	 weapon=5
 }
 enum_achievement = {
	 closeOne=4
	 collector=3
	 sweetDreams=1
	 thatWasMyFavouritePair=2
	 unknown=0
 }
 enum_actorState = {
	 actorAnim=39
	 battleArcheryNpc=16
	 battleArcheryPlayer=15
	 blacksmithing=17
	 butchering=40
	 carried=12
	 carryCorpse=11
	 carryItem=13
	 cart=27
	 combat=25
	 crouch=36
	 cutscene=34
	 dead=22
	 dialogue=31
	 dogInteraction=6
	 dying=21
	 fall=18
	 fastTravel=33
	 follow=26
	 hit=10
	 holdingDecoy=24
	 horse=37
	 idle=0
	 inAir=29
	 interactiveScene=30
	 itemInteraction=5
	 jump=1
	 ladder=3
	 land=19
	 ledge=2
	 minigame=4
	 none=44
	 onBed=38
	 ragdoll=8
	 reading=41
	 readingFromInventory=42
	 rear=43
	 shooting=7
	 skipTime=32
	 sprinting=28
	 standingUp=20
	 stoneThrowing=14
	 tenseCircumstance=35
	 trackview=23
	 unconscious=9
 }
 enum_addRemove = {
	 add=1
	 remove=0
 }
 enum_aliveness = {
	 alive=0
	 aliveOrUnconscious=4
	 any=6
	 dead=1
	 deadOrAlive=5
	 deadOrUnconscious=3
	 unconscious=2
 }
 enum_allOne = {
	 all=0
	 atLeastOne=1
 }
 enum_ammo_class = {
	 Arrow=1
	 Ball=3
	 Bolt=2
	 Shotgun=4
 }
 enum_angrinessType = {
	 material=1
	 violence=0
 }
 enum_angrinessValue = {
	 material=1
	 violence=0
 }
 enum_animationApproach = {
	 dontPlayDialogAnimations=0
	 ingameDialogPoseAndAnimations=3
	 playDialogAnimationsIfFaderDialog=2
	 tryDialogAnimations=1
 }
 enum_animationOverride = {
	 dialogControlled=1
	 dialogControlledItemsAllowed=3
	 noOverride=2
	 userControlled=0
 }
 enum_archeryContest_refereeCommand = {
	 endShooting=3
	 getReady=1
	 none=0
	 playerLost=7
	 playerWon=6
	 startShooting=2
	 timeIsRunningOut=4
	 timeIsUp=5
 }
 enum_armor_archetype = {
	 ArmsPlateBackGuardsLong=33
	 ArmsPlateBackGuardsShort=29
	 ArmsPlateCombinedLong=32
	 ArmsPlateForearmBack=34
	 ArmsPlateForearmFull=35
	 ArmsPlateFullBack_withShoulders=84
	 ArmsPlateFullComplete_withShoulders=85
	 ArmsPlateFullGuardsLong=31
	 ArmsPlateFullGuardsShort=30
	 ArmsPlateShoulderGuards=28
	 Belt=103
	 BodyChainOverall_longSleeves=21
	 BodyChainOverall_noSleeves=20
	 BodyChainShirtLong_longSleeves=19
	 BodyChainShirtLong_shortSleeves=18
	 BodyChainShirt_longSleeves=16
	 BodyChainShirt_shortSleeves=15
	 BodyChainVestLong=17
	 BodyChainVestShort=14
	 BodyClothShirtLong_longSleeves=27
	 BodyClothShirtLong_noSleeves=25
	 BodyClothShirtLong_shortSleeves=26
	 BodyClothShirt_longSleeves=24
	 BodyClothShirt_noSleeves=22
	 BodyClothShirt_shortSleeves=23
	 BodyDecorLong_noSleeves=91
	 BodyDecorShirtLong_shortSleeves=86
	 BodyDecorUltraLong_noSleeves=92
	 BodyPlateCuirassDoubleLong=0
	 BodyPlateCuirassDoubleShort=3
	 BodyPlateCuirassFrontLong=2
	 BodyPlateCuirassFrontShort=1
	 BodyPlateCuirassFullLong=11
	 BodyPlateCuirassFullLong_longSleeves=12
	 BodyPlateCuirassFullLong_shortSleeves=13
	 BodyPlateCuirassFullShort=10
	 Boots=97
	 BootsAnkle=98
	 BootsKnee=99
	 CattlePaint=105
	 Coat=83
	 Coat_Bergov=102
	 Coat_noSleeves=67
	 Collar=94
	 HandsGloves=45
	 HandsGlovesPlate_toBeDeleted=46
	 HeadChainCap=38
	 HeadChainCap_collarOnly=88
	 HeadChainCap_withCollar=89
	 HeadClothCap=36
	 HeadClothCap_withCollar=90
	 HeadClothFullMask=37
	 HeadPlateHatBig=40
	 HeadPlateHatSmall=39
	 HeadPlateHelmFull=43
	 HeadPlateHelmFull_collar=44
	 HeadPlateHelmOpen=41
	 HeadPlateHelmOpen_collar=42
	 HoodDown=96
	 HoodOn=95
	 HorseArmorHeadNeck=76
	 HorseBridle=77
	 HorseSaddle=75
	 HorseShoe=87
	 HorseTrappingsFull=74
	 LegsClothTrousersLong=47
	 LegsClothTrousersLong_withFeet=106
	 LegsClothTrousersShort=48
	 LegsPlateProtsLongFront=55
	 LegsPlateProtsLongFront_withFeet=57
	 LegsPlateProtsLongFull=56
	 LegsPlateProtsLongFull_withFeet=58
	 LegsPlateProtsLowerFront=53
	 LegsPlateProtsLowerFull=54
	 LegsPlateProtsUpperFront=51
	 LegsPlateProtsUpperFull=52
	 Necklace=82
	 Pouch=104
	 Ring=80
	 Robe_cape=93
	 Spur=81
	 Tmp_HoodDown=79
	 Tmp_HoodOn=78
	 _UberlodPlaceholder=100
 }
 enum_armor_type = {
	 ArmBrigandine=38
	 ArmPlate=39
	 BascinetOpen=20
	 BascinetVisor=21
	 Bells=79
	 Belt=76
	 BootsAnkle=50
	 BootsKnee=51
	 Bridle=56
	 Brigandine=34
	 Caftan=29
	 Cap=17
	 Caparison=58
	 Coat=35
	 CoifCap=13
	 CoifLarge=15
	 CoifMail=16
	 CoifSmall=14
	 CollarMail=23
	 CollarPadded=22
	 Cuirass=33
	 F_Bonnet=63
	 F_CapAndWimple=64
	 F_Hat=72
	 F_Hood=62
	 F_HoodOpen=73
	 F_Shoes=65
	 F_SimpleDress=68
	 F_Smock=69
	 F_Veil=74
	 F_VeilAndWimple=75
	 GambesonLong=28
	 GambesonShort=27
	 Gauntlets=40
	 Gloves=41
	 Habit=37
	 Hood=24
	 HorsePadded=61
	 HorsePlate=59
	 HorseShoe=60
	 HoseJoined=42
	 HoseLoose=43
	 HoseSeparate=44
	 KettleHat=18
	 LeatherApron=81
	 LeatherCap=80
	 LegsBrigandine=47
	 LegsChain=46
	 LegsPadded=45
	 LegsPlate=48
	 MailLong=32
	 MailShort=31
	 Necklace=55
	 Pouch=77
	 Pourpoint=30
	 Ring=54
	 Saddle=57
	 Scabbard=53
	 Shoes=49
	 SkullCap=19
	 Spectacles=78
	 Spurs=52
	 TunicLong=26
	 TunicShort=25
	 Waffenrock=36
 }
 enum_assaultVictimKind = {
	 animal=2
	 flock=3
	 none=0
	 npc=1
 }
 enum_badgeTier = {
	 gold=2
	 invalidTier=3
	 plumb=0
	 silver=1
 }
 enum_bathhouse_barberTry = {
	 revert=2
	 tryChosenBeard=1
	 tryChosenHair=0
 }
 enum_bathhouse_serviceType = {
	 BarberBeard=7
	 BarberHaircut=6
	 Clean=1
	 CleanHorse=3
	 CureClean=2
	 Love=4
	 Love_censored=5
	 None=0
 }
 enum_bathhouse_skiptimeDuration = {
	 1h=0
	 2h=1
	 3h=2
 }
 enum_battleRequestPriority = {
	 high=1
	 normal=0
 }
 enum_bedType = {
	 bench=0
	 ground=1
	 normal=2
	 shelter=3
	 tent=4
 }
 enum_bohutovaVlozka_erik_battlefieldPhases = {
	 Completed=3
	 GivingOrders=2
	 None=0
	 WaitingForBohuta=1
 }
 enum_bohutovaVlozka_playerFollowsErikToNebakov = {
	 Completed=3
	 GetHorse=1
	 MoveToDestination=2
	 None=0
 }
 enum_boidHit = {
	 collision=2
	 melee=0
	 ranged=1
 }
 enum_buffTagId = {
	 alcohol_blackout=2
	 alcohol_drunk=1
	 alcohol_hangover=14
	 alcohol_mood=0
	 bleed=4
	 encumbered=16
	 exhausted=15
	 food_poison=13
	 injury=7
	 low_health=11
	 overeat=6
	 poison=3
	 q_romanceWithTheresa_alphaMale=10
	 q_tournament_poison=9
	 savegame=8
	 sleep=5
	 smell=17
	 unstream_protection=12
 }
 enum_buffTimestampType = {
	 buffAdded=0
	 clear=1
 }
 enum_cartSlotRequest = {
	 any=0
	 driver=1
	 horseLeft=7
	 horseRight=8
	 leftBack=4
	 leftFront=2
	 playerBack=6
	 playerFront=5
	 rightFront=3
 }
 enum_cartSpeed = {
	 fast=1
	 instant=2
	 normal=0
 }
 enum_cartUserType = {
	 driver=0
	 horse=1
	 passenger=2
 }
 enum_checkManyMode = {
	 HasAll=0
	 HasSome=1
 }
 enum_cheering_reactionType = {
	 Happy=0
	 Sad=1
 }
 enum_cheering_shoutingType = {
	 ongoing=0
	 reaction=1
 }
 enum_circularSpatialQueryFilter = {
	 ConsciousHumanNPCsPlayerExcluded=8
	 LivingHumanNPCsPlayerExcluded=7
	 all=0
	 humanNPCs=2
	 humanNPCsPlayerExcluded=3
	 livingHumanNPCs=6
	 nonHumanNPCs=4
	 npcs=1
	 perceivableItems=5
 }
 enum_combatAttackKind = {
	 dogBite=5
	 melee=4
	 missile=1
	 none=0
	 stealthAction=2
	 unarmed=3
 }
 enum_combatAttackTypes = {
	 heavy=1
	 light=0
	 special=2
 }
 enum_combatAutomationGuardMode = {
	 automate=0
	 forceDisable=2
	 forceEnable=1
	 freeBlock=3
 }
 enum_combatGuardMode = {
	 automate=0
	 forceDisable=2
	 forceEnable=1
 }
 enum_combatGuardType = {
	 clinch=1
	 main=0
	 none=2
 }
 enum_combatSlots = {
	 combo=2
	 dodge=1
	 perfectBlock=0
	 riposte=3
	 specialPerfectBlock=4
 }
 enum_combatStates = {
	 clinch=10
	 death=7
	 failedAttack=4
	 guard=1
	 hit=6
	 idle=0
	 parryInPlace=9
	 prepareToParry=8
	 readyToStrike=2
	 strike=3
	 withdraw=5
 }
 enum_combatZoneType = {
	 attack=0
	 block=2
	 guard=1
 }
 enum_combatZones = {
	 center=5
	 head=0
	 lowerLeft=3
	 lowerRight=4
	 upperLeft=1
	 upperRight=2
 }
 enum_combat_combatChatResult = {
	 surrender=0
 }
 enum_combat_questFightStatus = {
	 fled=1
	 started=0
 }
 enum_combat_skirmishFoul = {
	 DogIsInCombat=4
	 DrawMissileWeapon=1
	 DrawWeapon=2
	 MountHorse=3
	 NewCrimeCreated=5
	 none=0
 }
 enum_combat_skirmishReaction = {
	 indifference=3
	 join=1
	 none=0
	 withdraw=2
 }
 enum_concept_weaponSet = {
	 oversized=2
	 primary=0
	 secondary=1
 }
 enum_confiscateItems = {
	 all=4
	 none=0
	 poached=3
	 relevant=1
	 relevantOwnAndMates=2
 }
 enum_consciousness = {
	 conscious=0
	 dead=2
	 unconscious=1
 }
 enum_corpseState = {
	 cleared=4
	 discovered=1
	 investigated=2
	 undiscovered=0
	 watched=3
 }
 enum_crafting_material_subtype = {
	 bezoar=6
	 craftingSkin=7
	 dryable=5
	 horn=2
	 lard=4
	 q_disguise_anyfeather=3
	 tusk=1
 }
 enum_crafting_material_type = {
	 blacksmithing=3
	 herb=1
	 special=2
 }
 enum_crimeFollowingMode = {
	 default=0
	 dontBackOff=1
	 noMoveOnlyTurn=2
 }
 enum_crimeFollowingRole = {
	 assist=1
	 main=0
	 observer=2
 }
 enum_crime_alarmReactionType = {
	 calm=1
	 none=0
	 urgent=2
 }
 enum_crime_allowedSharePlayerPosAssistance = {
	 barkAndAnimation=2
	 none=0
	 onlyBark=1
 }
 enum_crime_animalAbuseKind = {
	 assault=1
	 murder=2
	 none=0
	 theft=3
 }
 enum_crime_animalKind = {
	 domestic=1
	 unknown=0
	 wild=2
 }
 enum_crime_animalSpecies = {
	 Boar=1
	 Bull=2
	 Cow=5
	 DeerDoe=3
	 Dog=4
	 Horse=6
	 Pig=7
	 RedDeer=8
	 Sheep=9
	 Unknown=0
	 WildDog=10
	 Wolf=11
 }
 enum_crime_animal_escapeKind = {
	 annoyedReposition=1
	 sprintAway=2
	 unknown=0
 }
 enum_crime_animal_impulseLevel = {
	 annoying=1
	 critical=2
	 unknown=0
 }
 enum_crime_animal_reactionKind = {
	 annoyance=1
	 attack=2
	 check=3
	 eatDroppedFood=4
	 escape=5
	 horseWait=6
	 lookAround=7
	 reposition=9
	 returnFromStartle=8
	 startle=10
	 unknown=0
	 watchTrespass=11
 }
 enum_crime_animal_stimulusKind = {
	 combat=1
	 enemy=2
	 flyBy=3
	 hit=5
	 human=4
	 item=6
	 sound=7
	 startle=8
	 trespass=9
	 unknown=0
 }
 enum_crime_arrestChatResult = {
	 accept=0
	 evade=2
	 reject=1
 }
 enum_crime_attackKind = {
	 armed=8
	 collision=2
	 dog=5
	 missile=7
	 pebble=1
	 playerHorseCollision=3
	 stealth=6
	 stone=9
	 unarmed=4
	 unknown=0
 }
 enum_crime_authorityKind = {
	 activeDuty=4
	 offDuty=2
	 offDuty_sleeping=3
	 onDuty=1
	 stationaryDuty=5
	 unknown=0
 }
 enum_crime_banishCompanionType = {
	 Dog=1
	 Horse=2
	 Unknown=0
 }
 enum_crime_barkPriority = {
	 addressingPlayer=4
	 addressingPlayer_important=5
	 flavor=0
	 important=3
	 low=1
	 medium=2
 }
 enum_crime_barkReactionKind = {
	 bodyFound=12
	 companionComment=15
	 companionDog=4
	 companionHorse=2
	 greetPlayer=3
	 hasWeapon=7
	 heldBodyEnemy=14
	 heldBodyFriendly=10
	 ignoredPickpocket=11
	 indifferentCombat=9
	 isTorchless=6
	 kettleEatingGoodRep=13
	 mourn=1
	 playerInStealth=5
	 semipublicTrespass=8
	 unknown=0
 }
 enum_crime_barkReactionType = {
	 chat=1
	 ingameMonolog=0
 }
 enum_crime_barkSituation = {
	 crimeReported=1
	 hitReaction=0
	 lookAround=2
	 report_reporting=4
	 report_running=3
 }
 enum_crime_campTrespassChatResult = {
	 evade=4
	 fight=3
	 freeRoam=2
	 leave=1
	 none=0
 }
 enum_crime_chaseState = {
	 lockedOn=1
	 lockedOut=2
	 lockingOn=3
	 lockingOut=4
	 none=0
 }
 enum_crime_cooperationNotification = {
	 arrestEscalation=4
	 crimeResolved=0
	 informationTransformed=1
	 playerLeftCamp=2
	 selfhelpEscalation=3
 }
 enum_crime_createInformationPositionType = {
	 perceivedWuid=0
	 positionVec3=1
	 positionWuid=2
 }
 enum_crime_crimeLevel = {
	 murder=5
	 none=0
	 offence=1
	 property=3
	 trespass=2
	 violent=4
 }
 enum_crime_crimeSceneSearchMode = {
	 concentrated=0
	 widespread=1
 }
 enum_crime_criminalFreshness = {
	 notFresh=3
	 somewhatFresh=2
	 unknown=0
	 veryFresh=1
 }
 enum_crime_doorKind = {
	 basic=0
	 entrance=1
	 storage=2
 }
 enum_crime_findStolenItems_wuidFilterType = {
	 inventory=2
	 none=0
	 relation=1
 }
 enum_crime_friskChatResult = {
	 discuss=1
	 evade=2
	 frisk=0
 }
 enum_crime_friskDialogResult = {
	 fight=2
	 frisk=0
	 release=1
 }
 enum_crime_hearingSubscription = {
	 subscribe=0
	 unsubscribe=1
 }
 enum_crime_hearingSubscriptionNotificationType = {
	 diedOrLostConsciousness=0
	 fedUp=4
	 notHeard=1
	 notReacting=2
	 reacting=3
 }
 enum_crime_horseReturnReason = {
	 afterArrest=4
	 fromFollowUp=3
	 sawMissingVolume=2
	 sawStartledAnimal=1
	 unknown=0
 }
 enum_crime_informationDiffStatus = {
	 Forgot=2
	 Learned=1
	 unknown=0
 }
 enum_crime_interruptAttackState = {
	 attacking=0
	 fightIsDone=5
	 fightIsPaused=4
	 playerInUnconscious=2
	 playerIsSurrendering=1
	 playerSurrendered=3
 }
 enum_crime_lookAround_approachType = {
	 approximate=0
	 close=2
	 loose=1
	 special_animal_corpse=4
	 special_corpse=3
	 special_sound=5
	 special_sound_dog_bark_align=6
 }
 enum_crime_lookAround_movementType = {
	 chaseShooter=3
	 fast=1
	 receiveReport=2
	 slow=0
 }
 enum_crime_lookAround_searchMode = {
	 barkAtUninterestingPlayer=2
	 followWuid=1
	 points=0
	 stopWhileRecognizingPlayer=3
 }
 enum_crime_mercyDialogueResult = {
	 continueFight=2
	 forceDialogue=4
	 friendsAgain=3
	 itemsGiven=6
	 playerAway=5
	 run=1
	 standUp=7
	 unknown=0
 }
 enum_crime_offence = {
	 drawnWeapon=0
	 noTorch=1
 }
 enum_crime_offenceChatAction = {
	 unequipForbiddenEquipment=0
 }
 enum_crime_pickpocketBagType = {
	 pouch=0
	 satchel=1
 }
 enum_crime_playerUrgingPriority = {
	 arrest=11
	 arrest_far=3
	 frisk=10
	 frisk_far=1
	 kzik_openworldGate=9
	 postResolveWatchTrespass=6
	 resolve=12
	 selfhelp=7
	 selfhelp_far=2
	 selfhelp_security=8
	 unknown=0
	 watchTrespass=4
	 watchTrespass_authority=5
 }
 enum_crime_projectileType = {
	 arrow=1
	 pebble=2
	 unknown=0
 }
 enum_crime_punishmentLocation = {
	 Kutnahora=2
	 Malesov=3
	 Miskovice=4
	 Suchdol=5
	 Troskovice=1
	 Unknown=0
	 Zikmundtabor=6
 }
 enum_crime_punishmentType = {
	 beating=2
	 branding=3
	 execution=4
	 pillory=1
	 unknown=0
 }
 enum_crime_reactionKind = {
	 arrest=1
	 attack=2
	 bandageMyself=3
	 banishCompanion=4
	 check=5
	 checkHomeStashes=7
	 checkLyingBody=8
	 checkPockets=9
	 checkProperty=10
	 checkStash=11
	 choke=6
	 flee=12
	 frisk=13
	 haulGameMeat=14
	 lookAround=15
	 markKettleAsPoisoned=16
	 mercy=17
	 mindPlayer=18
	 missingNpcFound=19
	 mourn=20
	 pickUpItem=21
	 postSkirmish=22
	 report=23
	 returnStartledAnimal=24
	 returnWithHelp=25
	 scan=26
	 selfhelp=27
	 throwOutUnconsciousPlayer=30
	 unknown=0
	 wakeUp=28
	 warnPlayer=29
	 watch=31
	 watchCampTrespass=32
	 watchCorpse=33
	 watchTrespass=34
 }
 enum_crime_reactionType = {
	 arrest=16
	 banishCompanion=5
	 blindInvestigate=12
	 checkHomeStashes=4
	 investigate=15
	 mildWatchTrespass=7
	 none=1
	 passive=2
	 pickUpItem=3
	 reactToCorpse=8
	 reactToUnconsciousBody=10
	 report=14
	 reportNonattributedCrime=6
	 shooterInvestigate=13
	 unknown=0
	 warnOrFrisk=11
	 watchTrespass=9
 }
 enum_crime_reportDestinationDistanceConditionType = {
	 close=0
	 far=1
	 unlimited=2
 }
 enum_crime_reportDestinationType = {
	 authority=2
	 mate=1
	 none=0
	 security=3
 }
 enum_crime_reputationHitForm = {
	 faction=1
	 unknown=0
	 witness=2
 }
 enum_crime_resolutionDialogIntroKind = {
	 notResistingArrest_crimeSeenByGuard=0
	 notResistingArrest_foundAccidentally=1
	 notResistingArrest_lookedFor=2
	 resistingArrest_beaten=5
	 resistingArrest_repeated=6
	 resistingArrest_running=4
	 resistingArrest_violent=3
	 unconscious=7
 }
 enum_crime_resolutionKind = {
	 fight=5
	 fine=0
	 leaveUnconscious=1
	 punishment=2
	 questPunishment=3
	 skillCheck=4
 }
 enum_crime_secondArrestFeedbackResult = {
	 acceptPunishment=1
	 none=0
	 rejectPunishment=2
 }
 enum_crime_selfhelpChatResult = {
	 accept=0
	 evade=2
	 reject=1
 }
 enum_crime_selfhelpParticipants = {
	 meAndMates=1
	 onlyMe=0
	 unrelated=2
 }
 enum_crime_selfhelpResolutionKind = {
	 fight=0
	 leaveUnconscious=1
	 pay=2
	 payAllMoney=3
	 punishment=4
	 questPunishment=5
	 report=6
	 skillCheck=7
 }
 enum_crime_settlementLevel = {
	 city=2
	 none=0
	 settlement=1
 }
 enum_crime_soundReactionType = {
	 bark=1
	 ignore=2
	 react=0
 }
 enum_crime_source = {
	 direct=2
	 hearing=1
	 indirect=0
	 personal=3
 }
 enum_crime_startleSource = {
	 attack=3
	 decoy=2
	 interactor=1
	 unknown=0
 }
 enum_crime_stimulusKind = {
	 aim=1
	 alarm=2
	 animalAbuse=3
	 animalCorpse=4
	 combat=5
	 corpse=6
	 corpseMissing=8
	 corpseViolation=7
	 criminal=9
	 disturbance=10
	 dramaticBark=11
	 enemy=12
	 escalatedTrespass=13
	 foul=14
	 friskRefusal=16
	 friskable=15
	 graveRobbing=17
	 hit=18
	 horseTheft=19
	 information=20
	 item=21
	 kettlePoisoning=22
	 lockpick=23
	 lyingBody=24
	 missingAnimal=25
	 missingNpc=26
	 murder=27
	 nearTrespass=28
	 nonAttributedCrime=29
	 offence=30
	 pickpocket=31
	 pilloryBreak=32
	 playerCompanion=33
	 shooter=34
	 sound=35
	 suspiciousDoor=36
	 takedown=37
	 theft=38
	 threat=39
	 trespass=40
	 unconsciousBody=41
	 unknown=0
	 unknownShooter=42
 }
 enum_crime_surrenderChatResult = {
	 accept=1
	 refuse=2
	 unknown=0
 }
 enum_crime_surrenderDialogResult = {
	 fight=2
	 peace=1
	 unknown=0
 }
 enum_crime_surrenderStatement = {
	 noInformation=1
	 none=0
	 rejected=4
	 solvedByAuthority=2
	 solvedBySelfhelper=3
 }
 enum_crime_theftMethod = {
	 kettleEating=4
	 loot=1
	 lootCorpse=2
	 lootUnconsciousBody=3
	 pick=5
	 pickpocket=6
	 seenEquipped=7
	 unknown=0
 }
 enum_crime_theftVolumeReactionKind = {
	 attributed=2
	 ignored=0
	 immediate=3
	 nonAttributed=1
 }
 enum_crime_theft_seenEquippedType = {
	 multipleOwners=3
	 owner_multipleItems=2
	 owner_singleArmor=1
	 owner_singleWeapon=0
 }
 enum_crime_trespassInformationWuid = {
	 home=1
	 homeArea=2
	 none=0
 }
 enum_crime_weaponCheckingMethod = {
	 graphSearch=1
	 perceivableState=0
 }
 enum_customHaltingReason = {
	 none=0
 }
 enum_dialogPreset = {
	 chat=3
	 fader=1
	 ignored=0
	 ingame=2
 }
 enum_dialogResult = {
	 interruptedDialog=4
	 invalidDialog=3
	 refusedByReceiver=2
	 success=5
	 timeout=1
	 undefined=0
 }
 enum_diceBadge = {
	 antibust=4
	 doubleTake=5
	 extraDice=7
	 extraValue=3
	 formations=1
	 headStart=0
	 invalidBadge=11
	 multiplier=6
	 null=2
	 rerollDice=8
	 rerollPips=10
	 setDice=9
 }
 enum_diceEventType = {
	 cancelled=2
	 end=1
	 highScore=5
	 onTurnEnded=0
	 readyToStart=4
	 start=3
 }
 enum_diceGameTypes = {
	 beggar=0
	 cardinal=10
	 courtier=9
	 craftsman=5
	 emperor=13
	 king=12
	 knight=8
	 lord=11
	 miner=3
	 noType=14
	 novice=4
	 peasant=2
	 priest=7
	 soldier=6
	 wagoner=1
 }
 enum_diceTurnEndType = {
	 bust=2
	 careful=1
	 gaveUp=4
	 normal=0
	 won=3
 }
 enum_dice_badgeEffects = {
	 antibust=4
	 doubleTake=5
	 extraDice=7
	 extraValue=3
	 formations=0
	 headstart=1
	 multiplier=6
	 null=2
	 rerollDice=8
	 rerollPips=10
	 setDice=9
 }
 enum_dice_badge_subtype = {
	 Antibust=4
	 DoubleTake=5
	 ExtraDice=7
	 ExtraValue=3
	 Formations=1
	 Headstart=0
	 Multiplier=6
	 Null=2
	 RerollDice=8
	 RerollPips=10
	 SetDice=9
 }
 enum_dice_badge_type = {
	 gold=2
	 plumb=0
	 silver=1
 }
 enum_dice_betType = {
	 mixed=3
	 money=1
	 none=0
	 token=2
 }
 enum_dice_gamblerState = {
	 arriving=0
	 leaving=5
	 playingAgainstNpc=2
	 playingAgainstPlayer=4
	 waitingForMinigame=3
	 waitingForOpponent=1
 }
 enum_dice_gameLevel = {
	 beggar=0
	 cardinal=10
	 courtier=9
	 craftsman=5
	 emperor=13
	 farmer=2
	 king=12
	 knight=8
	 lord=11
	 miner=3
	 novice=4
	 priest=7
	 soldier=6
	 wagoner=1
 }
 enum_dice_initDialogResultType = {
	 npcOutOfMoney=1
	 startMinigame=0
 }
 enum_dice_kibitzMood = {
	 dissapointed=1
	 extaticHappy=5
	 facepalm=2
	 leaving=6
	 mildlyHappy=4
	 neutral=3
	 waiting=0
 }
 enum_dice_minigameEndReaction = {
	 negative=2
	 neutral=0
	 positive=1
 }
 enum_dice_minigameResult = {
	 gameInterrupted=3
	 playerLeft=2
	 playerLost=1
	 playerWon=0
 }
 enum_dice_npcSychronizationEvent = {
	 bust=3
	 endGame=4
	 pass=2
	 score=1
	 startGame=0
 }
 enum_dice_reasonToLeaveTable = {
	 kickedByPlayer=2
	 lostAllMoney=1
	 unspecified=0
 }
 enum_dice_tablePlayState = {
	 inactive=0
	 minigameActive=3
	 npcWaitingForOpponent=1
	 twoNpcsPlay=2
 }
 enum_directions = {
	 backward=3
	 forward=2
	 left=0
	 right=1
 }
 enum_document_class = {
	 book=1
	 letter=5
	 map=4
	 recipe=2
	 skillBook=3
 }
 enum_dogBehavior = {
	 campGuard=1
	 event=2
	 none=0
 }
 enum_dogCompanionMode = {
	 aggressive=3
	 ambush=7
	 follow=1
	 free=2
	 guard=6
	 hunt=5
	 search=4
	 wait=0
 }
 enum_dogCompanionPriority = {
	 attack=6
	 bestFun=3
	 doable=2
	 duty=4
	 executingOrder=7
	 follow=5
	 gettingOrder=9
	 hit=8
	 impossible=0
	 lowest=1
	 runAway=10
 }
 enum_dogObjective = {
	 alarm=12
	 bark=2
	 chase=18
	 dig=3
	 distract=21
	 eat=19
	 fail=13
	 fetch=9
	 follow=4
	 followHeel=5
	 followRider=6
	 funMove=15
	 funOnPoint=17
	 funOnSo=16
	 hunt=10
	 invalid=25
	 mark=1
	 meleeCombat=8
	 move=14
	 pet=22
	 runaway=11
	 search=7
	 searchItem=23
	 shakeOut=20
	 teleport=24
	 wait=0
 }
 enum_dogObservableActivityType = {
	 counterSniffing=2
	 forsaken=1
	 none=0
 }
 enum_dogState = {
	 alive=0
	 dead=1
	 deadAndHiden=2
 }
 enum_dvojityAgent_jan_duringAmbush = {
	 Canceled=7
	 Done=6
	 HealedAfterAmbush=5
	 HidingDuringFight=1
	 LyingInTheWood=4
	 None=0
	 RunningAway=2
	 Unconcious=3
 }
 enum_extraGuards_location = {
	 Unknown=0
	 kh_DanemarkMlyn=14
	 kh_HoranskoMines=16
	 kh_KutnaHoraKupecka=22
	 kh_MalesovStudFarm=19
	 kh_PritokyHospoda=13
	 kh_PritokyVillage=20
	 kh_RabstejnskoLogging=17
	 kh_RabstejnskoMlyn=18
	 kh_RatborickoVillage=21
	 kh_StaraKutnaHospoda=15
	 kh_bohounoviceVillage=30
	 kh_bylanskoVillage=28
	 kh_horanskaVillage=31
	 kh_lorecVineyard=24
	 kh_miskovickoVillage=27
	 kh_pachIndustryArea=23
	 kh_staraKutnaVillage=26
	 kh_suchdolVillage=25
	 kh_vysokaVillage=29
	 tr_ApolenaOvcak=5
	 tr_NebakovMlyn=10
	 tr_SeminVillage=12
	 tr_SlatejovFarma=1
	 tr_TachovVillage=11
	 tr_Troskovice=9
	 tr_VidlakFisherman=8
	 tr_VidlakLovec=6
	 tr_VidlakTanner=7
	 tr_ZdarFarmaVychod=3
	 tr_ZdarFarmaZapad=2
	 tr_ZelejovHospoda=4
 }
 enum_extraGuards_operation = {
	 Despawn=1
	 Spawn=0
 }
 enum_extremeType = {
	 max=1
	 min=0
 }
 enum_fTIconType = {
	 couple=3
	 group=1
	 player=0
	 woman=2
 }
 enum_fightclub_proposingFights = {
	 Active_WaitingAndTurningTowardsPlayer=3
	 Active_WavingAtPlayer=2
	 Active_WavingAtPlayerWithForcedInRangeAlias=1
	 Disabled=0
	 Inactive_PlayerIsFarAway=4
 }
 enum_finale_lordsDialog = {
	 Approaching=1
	 Bowing=2
	 Done=4
	 None=0
	 Talking=3
 }
 enum_fistfights_proposingFistFightsState = {
	 InRange=0
	 OutOfRange=1
 }
 enum_food_subtype = {
	 aesopPotion=10
	 antidotePotion=23
	 apple=0
	 aquaVitalisPotion=12
	 artemisiaPotion=22
	 bacon=2
	 bardPotion=21
	 beer=7
	 bowmanBrewPotion=27
	 chamomileDecoctionPotion=18
	 dryable=15
	 embrocationPotion=16
	 hairODogPotion=20
	 insomniaPotion=19
	 liquor=8
	 marigoldPotion=24
	 nighthawkPotion=4
	 padfootPotion=26
	 painkillerPotion=17
	 painterMedicinePotion=28
	 pear=13
	 poison=5
	 preserver=9
	 raw=6
	 staminaPotion=25
	 vegetable=14
	 water=11
	 wine=3
 }
 enum_food_type = {
	 bowel=5
	 dairy=9
	 drink=3
	 fruit=0
	 meat=2
	 mushroom=7
	 pastry=8
	 potion=1
	 vegetable=6
 }
 enum_formationMode = {
	 KeepDistance=1
	 KeepShape=3
	 MoveHistory=2
	 Relaxed=0
 }
 enum_formationType = {
	 KeepDistance=1
	 KeepShape=3
	 MoveHistory=2
	 Relaxed=0
 }
 enum_frontBack = {
	 back=1
	 front=0
 }
 enum_gameVersion = {
	 Invalid=2.14748e+09
	 ver_01_00=10000
	 ver_01_01=10100
	 ver_01_01_01=10101
	 ver_01_01_02=10102
	 ver_01_02=10200
	 ver_01_02_01=10201
	 ver_01_02_02=10202
 }
 enum_gender = {
	 female=2
	 male=1
	 not-defined=0
	 unisex=3
 }
 enum_genericRandomEventType = {
	 arrest=1
	 combat=3
	 enemy=4
	 frisk=0
	 selfHelp=2
 }
 enum_handType = {
	 left=1
	 right=0
 }
 enum_hideType = {
	 Any=0
	 NPCLOD=1
	 NPCVisibility=2
 }
 enum_hledaniLichtenstejna_kozina_ambushingSomeDrunk = {
	 AmbushingPlayer_ExpectedSide=5
	 AmbushingPlayer_UnexpectedSide=7
	 AmbushingUdo=3
	 Canceled=9
	 ConfrontingPlayer_ExpectedSide=6
	 ConfrontingPlayer_UnexpectedSide=8
	 ConfrontingUdo=4
	 LyingInAmbush=2
	 None=0
	 PreparingForAmbush=1
 }
 enum_hledaniLichtenstejna_udo_goingToGetAmbushed = {
	 BeingConfronted=2
	 Canceled=4
	 GoingFromBaths=1
	 GotToSafety=3
	 None=0
 }
 enum_hledaniLichtenstejna_vsivaMari_warningKozina = {
	 ConfrontedNearHideout=4
	 Done=6
	 GoingToWarn=2
	 None=0
	 Returning=3
	 WaitingToGo=1
	 YellingAtPlayer=5
 }
 enum_horseHandler_operation = {
	 PlayerHorseAdded=3
	 PlayerHorseRemoved=4
	 ResetValidHorsesCount=5
	 Unknown=0
	 ValidHorseAdded=1
	 ValidHorseRemoved=2
 }
 enum_hostageSituation = {
	 HoldHostage_Calm=2
	 HoldHostage_Tense=1
	 HostageGetsHit_HostageDies_KidnapperToCombat=9
	 KidnapperGetsHit_KidnapperDies_HostageToGround=8
	 KidnapperGetsHit_KidnapperToCombat_HostageToGround=7
	 KidnapperKillsHostage_KidnapperToCombat=6
	 KidnapperKillsHostage_KidnapperToIdle=5
	 KidnapperReleasesHostage_BothToIdle=3
	 KidnapperReleasesHostage_HostageKillsKidnapper=4
	 None=0
	 SituationFinished=10
 }
 enum_hostageSituation_femaleHoldsFemale = {
	 HoldHostage=1
	 KidnapperKillsHostage=3
	 KidnapperReleasesHostage=2
	 None=0
	 SituationFinished=4
 }
 enum_hostageSituation_maleHoldsLooseFemale = {
	 HoldHostage=1
	 HostageGetsHit_HostageDies_KidnapperToCombat=9
	 HostageGetsHit_HostageToIdle_KidnapperToCombat=8
	 KidnapperGetsHit_KidnapperDies_HostageToIdle=7
	 KidnapperGetsHit_KidnapperToCombat_HostageToIdle=6
	 KidnapperKillsHostage_KidnapperToCombat=5
	 KidnapperKillsHostage_KidnapperToIdle=4
	 KidnapperReleasesHostage_BothToIdle=2
	 KidnapperReleasesHostage_KidnapperToCombat=3
	 None=0
	 SituationFinished=10
 }
 enum_hostageSituation_maleHoldsTiedFemale = {
	 HoldHostage_Calm=2
	 HoldHostage_Tense=1
	 HostageGetsHit_HostageDies_KidnapperToCombat=6
	 KidnapperGetsHit_KidnapperDies_HostageToGround=5
	 KidnapperKillsHostage_KidnapperToCombat=4
	 KidnapperReleasesHostage_HostageKillsKidnapper=3
	 None=0
	 SituationFinished=7
 }
 enum_humanGender = {
	 female=2
	 male=1
	 notDefined=0
 }
 enum_ingameDialogType = {
	 Bark=1
	 Chat=0
 }
 enum_intellectHaltingReason = {
	 layerUnload=1
	 none=0
 }
 enum_itemClassProperty = {
	 hasVisor=4
	 isDivisible=3
	 manipulationId=2
	 price=0
	 weight=1
 }
 enum_itemProperty = {
	 amount=4
	 consumableBuff=6
	 guid=3
	 hasVisor=11
	 health=5
	 inHand=7
	 inInventory=9
	 isDivisible=10
	 manipulationId=8
	 owner=2
	 price=0
	 weight=1
 }
 enum_item_category = {
	 alchemy_base=11
	 ammo=3
	 armor=4
	 consumable_item=28
	 crafting_material=9
	 dice_badge=7
	 die=15
	 divisible_item=23
	 document=8
	 equippable_item=26
	 food=5
	 helmet=16
	 herb=10
	 hood=29
	 item=21
	 key=17
	 keyring=18
	 melee_weapon=1
	 misc=0
	 missile_weapon=2
	 money=6
	 npc_tool=12
	 ointment_item=13
	 pickable_item=22
	 player_item=25
	 poison=14
	 quick_slot_container=19
	 weapon=27
	 weapon_equip=24
 }
 enum_jizdniLukostrelba_spectatorsReactionType = {
	 hattrick=0
	 miss=2
	 normalHit=1
 }
 enum_kettleFireState = {
	 off=1
	 on=0
 }
 enum_kettleState = {
	 eaten=1
	 empty=3
	 full=0
	 halfEmpty=2
 }
 enum_kettleType = {
	 kettle=0
	 wineBarrel=1
 }
 enum_kumaniNaTrosecku_pubFightEscalation = {
	 BarkingFromTable=1
	 BarkingNearPubExit=4
	 ChasingOutCumans=3
	 CumansLeaving=2
	 Done=5
	 None=0
 }
 enum_kzik_actionRequest = {
	 Escalate=1
	 GivePlayerAccess=2
	 MindPlayer=0
 }
 enum_kzik_gateGuardState = {
	 Escalate=1
	 MindPlayer=2
	 SeePlayerApproaching=0
 }
 enum_ladderState = {
	 unused=0
	 usedForClimbDown=2
	 usedForClimbUp=1
 }
 enum_lastHitAttackKind = {
	 dogBite=5
	 melee=4
	 missile=1
	 none=0
	 stealthAction=2
	 unarmed=3
 }
 enum_legacyOfTheForge_blacksmithLogo = {
	 None=0
	 PlaceholderAntEater=3
	 PlaceholderCat=2
	 PlaceholderDinosaur=4
	 PlaceholderDog=1
 }
 enum_linkOpHandleMode = {
	 error=2
	 fail=1
	 overwrite=3
	 success=0
 }
 enum_lockManagerType = {
	 Global=0
	 Intellect=2
	 Local=1
 }
 enum_lovVlku_behaviourType = {
	 Fight=1
	 Flee=2
	 Unknown=0
 }
 enum_measureMode = {
	 threeDimensions=1
	 twoDimensions=0
 }
 enum_minigameType = {
	 alchemy=3
	 battleArchery=10
	 blacksmithing=12
	 dice=7
	 distract=11
	 herbGathering=4
	 holeDigging=6
	 lockPicking=5
	 pickpocketing=8
	 reading=2
	 sharpening=1
	 stoneThrowing=9
	 undefined=0
 }
 enum_misc_subtype = {
	 clean_carryable_item=1
	 loot=2
	 spice=3
	 trash_metal=0
 }
 enum_misc_type = {
	 broken_ammo=6
	 carryable_item=3
	 common=5
	 ear=2
	 skin=1
	 usable=4
 }
 enum_moneySliderSetupResult = {
	 npcLimitFail=3
	 parametersFail=1
	 playerLimitFail=2
	 success=0
 }
 enum_movementDoorClosingPolicy = {
	 automatic=0
	 leaveClosed=1
	 leaveOpened=2
 }
 enum_movementSpeed = {
	 alertedWalk=2
	 dash=11
	 fastRun=4
	 moderateDash=10
	 moderateSprint=6
	 relaxedWalk=0
	 run=3
	 slowDash=9
	 slowSprint=5
	 slowestDash=8
	 sprint=7
	 walk=1
 }
 enum_movementTargetType = {
	 path=2
	 vec3=1
	 wuid=0
 }
 enum_movementType = {
	 FollowPlayer=0
	 NoMovement=2
	 TurnBody=1
 }
 enum_mucirna_prisonerHealthState = {
	 Alive=0
	 Dead=2
	 Dying=1
 }
 enum_nPCCombatHelperRequestResult = {
	 combatCanceled=3
	 combatEnded=0
	 failedAddingToSkirmish=2
	 nPCStateSearchFailed=1
 }
 enum_navmeshTracking = {
	 MNMPos=1
	 NPCPos=0
 }
 enum_npc_tool_subtype = {
	 hammer=0
	 pocketed=2
	 spawned=1
 }
 enum_npc_tool_type = {
	 axe=1
	 basket=2
	 broom=3
	 bucket=4
	 cage_left=5
	 cage_right=6
	 chicken_tray=10
	 cleaver=21
	 default=0
	 fishing_rod=8
	 hammer=7
	 hoe=19
	 knife=22
	 leather_scraper=9
	 light=26
	 meal_tray=25
	 meat=24
	 rasp=16
	 rope=20
	 sack=11
	 semifinished_sword=17
	 shovel=12
	 stein=13
	 tankard=14
	 treasure_chest=18
	 two_handed_knife=23
	 washing_stick=15
 }
 enum_ointment_item_subtype = {
	 armor=1
	 bow=4
	 clothes=2
	 gun=7
	 perfumeLongWeak=6
	 perfumeShortStrong=5
	 shoes=3
	 weapon=0
 }
 enum_ointment_item_type = {
	 bandage=0
	 perfume=2
	 repairkit=1
	 soap=3
 }
 enum_openWorld_cooldownEventType = {
	 commentCompanionDog=8
	 commentCompanionHorse=7
	 dialogPlayerGreeting=0
	 playerCrimeReaction=2
	 playerGreeting=1
	 playerSoliloquy=6
	 situation_npcGreeting=3
	 situation_other=4
	 soliloquy=5
 }
 enum_papezskyLegat_legateChase = {
	 Chasing=1
	 Dying=2
	 Waiting=0
 }
 enum_papezskyLegat_rozaSecretTunnel = {
	 BeCarriedFirstTime=6
	 BeforeWaypoint=2
	 Done=10
	 Entrance=1
	 None=0
	 PostWater=7
	 PreWater=3
	 WaitingAtDoor=8
	 WaitingAtWindow=9
	 WaitingForDialog=4
	 WaitingForUber=5
 }
 enum_party_dancingPlayerWithFemale_variant = {
	 variant_01=0
	 variant_02=1
 }
 enum_pickpocketEvent = {
	 failedPouch=0
	 failedSatchel=1
	 failedWithoutCrime=3
	 success=2
 }
 enum_pickpocket_stage = {
	 none=0
	 onPlace=1
	 ready=2
 }
 enum_playerAction_stanceObject_stance = {
	 lying=1
	 sitting=0
 }
 enum_playerBedType = {
	 bench=2
	 chair=3
	 groundBed=0
	 normalBed=1
 }
 enum_playerSittingAction = {
	 endImmediately=6
	 lyingToEnd=3
	 lyingToSit=2
	 prepareForSittingDialog=4
	 prepareForStandingDialog=5
	 sittingToEnd=1
	 sittingToLay=0
	 startToLay=8
	 startToSit=7
 }
 enum_pogrom_dialogType = {
	 chat=1
	 ingameDialog=2
	 none=0
 }
 enum_pour_wine = {
	 None=0
	 Red=2
	 White=1
 }
 enum_prefab_phase_category = {
	 _autotest_fireplace_burning=2.14748e+09
	 bowls_pile=2
	 bowls_pile_normal_goulash=8
	 bowls_pile_normal_lentil=9
	 bowls_pile_normal_soup=10
	 bowls_pile_tin_goulash=11
	 bowls_pile_tin_lentil=12
	 bowls_pile_tin_soup=13
	 fireplace_burning=1
	 fireplace_burning_camp=16
	 fireplace_cauldron_camp=7
	 fireplace_cauldron_home=6
	 fireplace_chimneySmoke=3
	 fireplace_steam=5
	 fireplace_windowSmoke=15
	 torch=4
	 torch_special=14
 }
 enum_prepadeni_ptacekInFormation = {
	 Chat=1
	 Complete=3
	 None=0
	 Polylog=2
 }
 enum_prepadeni_throughForrest = {
	 AroundBoulder=3
	 AtEntranceToMaze=10
	 AtTheEndOfMaze=14
	 AtTheMazeGuarding=11
	 BeforeEndOfMaze=13
	 CrouchToTheFirstCrossroad=2
	 Done=17
	 None=0
	 OverTheFallenTree=6
	 Slide=16
	 TemporaryPlace=12
	 ThroughTheRockPath=8
	 ToTheEndOfBoulders=4
	 ToTheEndOfRoad=15
	 ToTheFallenTree=5
	 ToTheFirstCrossroad=1
	 ToTheMaze=9
	 ToTheRockPath=7
 }
 enum_prepareFood = {
	 cook=0
	 dry=2
	 smoke=1
 }
 enum_presentNotThere = {
	 notThere=1
	 present=0
 }
 enum_priorityManipulation = {
	 boostNothing=3
	 boostPlayer=2
	 boostRangedWeapon=1
	 none=0
 }
 enum_questTourState = {
	 move=0
	 timeout=2
	 wait=1
 }
 enum_relocationPolicy = {
	 DynamicRelocation=1
	 KeepDistance=3
	 KeepPosition=0
	 RelaxedFollow=2
 }
 enum_roomRenting_accommodation = {
	 infinite=2
	 none=0
	 oneNight=1
 }
 enum_roundOperation = {
	 down=1
	 nearest=0
	 up=2
 }
 enum_shockReaction = {
	 low=0
	 medium=1
	 pickpocket=2
 }
 enum_shootingContest_autotestHandler = {
	 HasteActivated=2
	 None=0
	 WaitForSignal=1
 }
 enum_shootingContest_bark = {
	 hitBad=2
	 hitGood=1
	 hitPerfect=0
	 miss=3
	 sameTarget=4
	 winner=5
 }
 enum_shootingContest_difficulty = {
	 Advanced=2
	 Beginner=1
	 Expert=3
	 None=0
 }
 enum_shootingContest_progress = {
	 Running=1
	 Stopped=0
 }
 enum_shootingContest_result = {
	 FirstTime=0
	 Lost=2
	 WaitForResult=3
	 Won=1
 }
 enum_shootingContest_situation = {
	 disable=0
	 enable=1
 }
 enum_shootingContest_type = {
	 Birds=1
	 CircleTarget=0
 }
 enum_shootingContest_weapon = {
	 Bow=0
	 Crossbow=1
	 Rifle=2
 }
 enum_sittingBehindTableMood = {
	 angry=1
	 drunk=2
	 injured=3
	 judge=4
	 nervous=5
	 neutral=0
	 pensive=6
	 sad=7
 }
 enum_situation_beggarStyle = {
	 kneeling=0
	 laying=1
 }
 enum_situation_gossipStanceType = {
	 leaning=3
	 sitting=2
	 standing=1
	 unknown=0
 }
 enum_situation_gossipState = {
	 exitGossipBehaviour=5
	 none=0
	 readyForDialog=4
	 useBasicMovement=1
	 useShapePositionMovement=2
	 useTurn=3
 }
 enum_skirmishDecisionReason = {
	 hit=1
	 perception=0
 }
 enum_skirmishRelationOverride = {
	 hostile=1
	 none=0
 }
 enum_smartBehaviorState = {
	 disabled=2
	 enabled=0
	 noRequests=1
	 requestsByHolders=3
 }
 enum_soul_ability = {
	 AimToMaim=75
	 Alarm=58
	 Archer=86
	 ArmOfBeowulf=72
	 Attack=57
	 Bacchus=23
	 Bark=68
	 BatteringRam=21
	 BeerBibber=27
	 BlacksmithingMaster=65
	 Blacksmithsson=55
	 Bonebreaker=78
	 Bumper=7
	 BundleAlchemist=30
	 CauseAlwaysHeavyBleeding=85
	 CauseMoralHitOnCollision=89
	 ChainStrikeHeavyWeapon=74
	 ChainStrikePolearm=43
	 ChainStrikeSword=51
	 ChainStrikeUnarmed=11
	 CleanCut=82
	 CleanlinessIsNextToGodliness=71
	 Comrade=10
	 CripplingHit=76
	 CripplingHit_=91
	 CuttingEdge=81
	 DisarmStrike=17
	 Distract=59
	 Dodge=0
	 DownToSize=93
	 EasyWayOut=12
	 Empathic=48
	 EutuBrutus=36
	 ExperimentalPowder=92
	 Finticka=3
	 FirstAid=47
	 ForbiddenWeapon=90
	 GreenKnight=83
	 HardenedSteel=87
	 Harvester=38
	 HeavyTip=50
	 HorrendousWounds=40
	 HorsePullDown=6
	 HumanDustbin=31
	 Hunt=60
	 HuntAttack=45
	 HuntingPermit=56
	 Inconspicuous=69
	 LetEmCome=8
	 Letailleur=53
	 LiquorAntidote=34
	 LiquorBibber=28
	 LooseTongue=29
	 Looter=98
	 LuckyFind=24
	 MasterStrike=73
	 MasterStrikeUnarmed=9
	 Masterchef=95
	 MercyKill=46
	 MischiefArtist=97
	 NoHangoverWhenSleeping=94
	 OneShotAtGlory=99
	 OneWayOrTheOther=39
	 OpeningStrike=79
	 OpeningStrike_=80
	 Padding=54
	 Painkiller=84
	 PerfectBlock=1
	 RazorSharp=67
	 Reading_ArtAdmirer=15
	 Reading_AvidReader=16
	 Reading_Wanderer=37
	 Riposte=2
	 SaltAndSmoke=33
	 Salty=42
	 Salva=77
	 Search=61
	 SecretOfSecrets=63
	 Serration=49
	 SevenLeague=52
	 SevenLeague_=88
	 SkillcheckDifficulty=25
	 SmartBootstraping=66
	 SteakTartare=18
	 StealthKill=5
	 StealthKnockOut=4
	 StrangeMan=96
	 Taunt=44
	 ThiefSight=64
	 TormentingStrike=41
	 Totentanz=70
	 TrialAndError=19
	 TwoHanded=62
	 Undercut=13
	 Undercut_=14
	 WineBibber=26
 }
 enum_sound = {
	 alarm=19
	 arrow_hit=15
	 bio_drunkeness=12
	 bio_exhaustion=11
	 bio_hunger=10
	 bow_fired=13
	 bullet_hit=16
	 combat=1
	 combatScript=6
	 decoy_distract=8
	 dog_attack_command=23
	 dog_bark=22
	 dog_distract=24
	 door=7
	 dramatic_bark=18
	 gun_fired=14
	 hunting_alarm=21
	 invalid=0
	 lockpick=2
	 lure_distract=26
	 movement=3
	 perfume=28
	 photo_mode=27
	 sharpener=4
	 smell=9
	 speech=17
	 startled_critter=20
	 thrash=25
	 whistle=5
 }
 enum_speech_ingameDialogPoseTransition_type = {
	 intoDialogPose=0
	 outOfDialogPose=1
 }
 enum_speech_ingameDialogType = {
	 Bark=2
	 Chat=1
	 Ingame=0
 }
 enum_stanceCategory = {
	 cart=7
	 crouch=6
	 horse=5
	 kneel=4
	 lying=2
	 sitting=3
	 standing=1
	 undefined=0
 }
 enum_stateMachineStates = {
	 Any=0
	 InteractiveGround=1
	 ItemInteraction=2
	 OnBed=3
 }
 enum_stealthTakedown_stage = {
	 firstTakedown=0
	 none=3
	 repeatTakedown=2
	 secondTakedown=1
 }
 enum_stealthTakedown_treeState = {
	 ChatAndTurn=1
	 MoveToPoint=0
	 ReadyForTakedown=2
 }
 enum_surfaceTest = {
	 eatSpot=0
	 sleepSpot=1
 }
 enum_sweetSpotLockPolicy = {
	 locked=0
	 semiLocked=2
	 unlocked=1
 }
 enum_switch_genericAwareness = {
	 npcGreeted=0
 }
 enum_switch_hotEntityReason = {
	 assaultAnimal=15
	 check=1
	 dogWhistle=12
	 lookAround=2
	 missingAnimal=3
	 missingCorpse=4
	 missingNpc=5
	 murder=19
	 murderAnimal=16
	 nearTrespass=7
	 poaching=17
	 shooter=10
	 sound=11
	 stolenCorpse=8
	 suspiciousDoor=6
	 theft=14
	 unconsciousBody=18
	 unknown=0
	 unknownShooter=13
	 weaponSound=9
 }
 enum_switch_interruptInitiator = {
	 concept=1
	 scheduler=2
	 switch=3
	 unknown=0
 }
 enum_switch_recognitionState = {
	 state_0=0
	 state_I=1
	 state_II=2
	 state_III=3
 }
 enum_switch_unconsciousBodyState = {
	 discovered=1
	 undiscovered=0
 }
 enum_test_zachrana_synchroWalk = {
	 Fail=3
	 None=0
	 Start=1
	 Success=2
 }
 enum_timerType = {
	 gameTime=1
	 worldTime=0
 }
 enum_tour_dialogType = {
	 bark=1
	 chat=0
	 ingameDialog=2
	 none=3
 }
 enum_tour_followType = {
	 followableNpcCenter=1
	 followableNpcLeft=2
	 followableNpcRight=3
	 none=0
 }
 enum_tour_forceLookEnabled = {
	 always=0
	 inDestination=1
	 never=2
 }
 enum_tour_handContentElementMode = {
	 all=0
	 leader=1
	 none=2
 }
 enum_tour_handType = {
	 both=2
	 left=1
	 none=3
	 right=0
 }
 enum_tour_nextPhaseTrigger = {
	 both=0
	 dialogFinished=2
	 none=3
	 tagpointReached=1
 }
 enum_tour_onPlayerLeft_dialogProgression = {
	 startDialog=2
	 waitForPlayerSkipDialog=0
	 waitForPlayerStopDialog=1
 }
 enum_tour_onPlayerLeft_wait = {
	 afterPlayerGetsClose=1
	 always=0
	 never=2
 }
 enum_tour_onPlayerLeft_waitMode = {
	 everybodyTurnsOnPlayer=1
	 leaderTurnsOnPlayer=0
 }
 enum_tour_tourProgress = {
	 none=0
	 progress=1
	 stop=2
 }
 enum_tour_weaponSet = {
	 none=3
	 oversized=0
	 primary=1
	 secondary=2
 }
 enum_tournamentCrowdSpotType = {
	 leaning=1
	 standing=0
 }
 enum_trespassLevel = {
	 personal=3
	 prohibited=4
	 public=0
	 semipersonal=2
	 semipublic=1
 }
 enum_trigonometryOperation = {
	 acos=4
	 asin=3
	 atan=5
	 cos=1
	 sin=0
	 tan=2
 }
 enum_turnToPlayerInIdleStance_anyDecoratorPreset = {
	 bothHands_changeEquipment=1
	 changeEquipment=0
	 disabled=2
 }
 enum_urgency = {
	 default=0
	 fast=2
	 instant=3
	 slow=1
 }
 enum_weaponChange = {
	 melee=1
	 missile=2
	 none=0
	 oversized=3
	 unarmed=4
 }
 enum_weaponSelection_mainHand = {
	 any_meleeWeapon=1
	 specifiedByItemClassId=0
	 type_axe=4
	 type_bow=9
	 type_crossbowHeavy=12
	 type_crossbowLight=10
	 type_crossbowMedium=11
	 type_flail=7
	 type_huntingSword=14
	 type_longSword=5
	 type_mace=6
	 type_polearm=8
	 type_rifle=13
	 type_sabre=3
	 type_sword=2
	 type_swordOrLongSword=15
 }
 enum_weaponSelection_offHand = {
	 anything=0
	 emptyHand=1
	 specifiedByItemClassId=2
	 type_shield=3
 }
 enum_weaponSet = {
	 oversized=2
	 primary=0
	 secondary=1
 }
 enum_weaponType = {
	 Any=0
	 None=1
 }
 enum_weapon_class = {
	 axe=3
	 bow=9
	 crossbow_heavy=15
	 crossbow_light=10
	 crossbow_medium=14
	 dagger=0
	 flail=6
	 halberd=7
	 hunting_sword=16
	 longsword=4
	 mace=5
	 rifle=13
	 sabre=2
	 shield=8
	 shield_broken=17
	 sword=1
	 torch=11
	 unarmed=12
	 undefined=2.14748e+09
 }
 enum_wildDogBehavior = {
	 eat=3
	 fight=2
	 goToFinalPosition=1
	 normal=0
 }
 enum_wildDogQuestBehavior = {
	 fight=1
	 go=0
	 huntSheep=3
	 lookingFor=2
 }
 enum_zaby_cooking = {
	 Carrying=4
	 Cooking=2
	 Done=7
	 FoodDespawnDelay=6
	 FoodWaitingForAlsik=5
	 Goto=1
	 None=0
	 PickingUp=3
 }
 enum_zaby_eating = {
	 Done=4
	 Eat=1
	 None=0
	 Transition=2
	 Vomit=3
 }
 enum_zachranaPtacka_prisonersMovementMode = {
	 Run=1
	 Sneak=0
	 Wait=2
 }
 enum_zachranaPtacka_prisonersWaitingAnimation = {
	 Crouch=1
	 Kneel=0
	 WaitingNervous=2
 }
 enum_zachranaPtacka_prisonersWithdrawnItemMode = {
	 Done=3
	 None=0
	 TorchBeforeMovement=1
	 Weapon=2
 }
 enum_zakopanyZitrek_hankaProgress = {
	 BothDead=3
	 CrisisAverted=5
	 NobodyDead=1
	 None=0
	 TimeLimitExpired=4
	 VendulaDead=2
 }
 enum_zakopanyZitrek_killingSvatavaProgress = {
	 Attacking=1
	 Talking=0
 }
 enum_zbranePanaSemina_TalkInTroskovice = {
	 BehaviorStarted=2
	 Done=4
	 None=0
	 TrackingDistance=1
	 TurnToHenry=3
 }
 enum_zbranePanaSemina_crossroadSearchPhases = {
	 Done=7
	 Finding=5
	 None=0
	 Reporting=6
	 Searching1=1
	 Searching2=2
	 Searching3=3
	 Searching4=4
 }
 enum_zoufalaObranaZaBohutu_certCommandingPaviseMen = {
	 BarkOnce=2
	 BarkRepeatedly=1
	 None=0
	 PlayAnimationOnce=3
 }
 enum_zoufalaObranaZaBohutu_prazanSituation = {
	 ClimbingLadder=1
	 Done=3
	 JumpingFromLadder=2
	 None=0
	 PrazanDied=4
 }
 error()
 expr()
 fBurnoutLightOffset=0.05
 forwardTime()
 g_2Pi=6.28319
 g_Deg2Rad=0.0174533
 g_HitTable = {
 }
 g_PhysicsCollisionClass = {
	 bT_collision_class_articulated=8
	 bT_collision_class_living=4
	 bT_collision_class_particle=64
	 bT_collision_class_soft=16
	 bT_collision_class_terrain=1
	 bT_collision_class_wheeled=2
	 bT_gcc_ai=131072
	 bT_gcc_animal=8.38861e+06
	 bT_gcc_decoy_projectile=6.71089e+07
	 bT_gcc_horse=65536
	 bT_gcc_horse_bridle=1.67772e+07
	 bT_gcc_ignore_z_correction=8192
	 bT_gcc_interactive=262144
	 bT_gcc_item=1.34218e+08
	 bT_gcc_ledge=4.1943e+06
	 bT_gcc_npc_ignored_type=2.09715e+06
	 bT_gcc_npc_reported_type=524288
	 bT_gcc_player_body=2048
	 bT_gcc_player_capsule=1024
	 bT_gcc_player_ghostable_type=3.35544e+07
	 bT_gcc_player_type=1.04858e+06
	 bT_gcc_ragdoll=16384
	 bT_gcc_rigid=32768
	 bT_gcc_vehicle=4096
 }
 g_Pi=3.14159
 g_Pi2=1.5708
 g_Rad2Deg=57.2958
 g_SignalData = {
	 ObjectName=
	 fValue=0
	 iValue=0
	 iValue2=0
	 point = {
		 x=0
		 y=0
		 z=0
	 }
	 point2 = {
		 x=0
		 y=0
		 z=0
	 }
 }
 g_StringTemp1=                                            
 g_Vectors = {
	 down = {
		 x=0
		 y=0
		 z=-1
	 }
	 temp = {
		 x=0
		 y=0
		 z=0
	 }
	 tempColor = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v1 = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v2 = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v3 = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v4 = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v5 = {
		 x=0
		 y=0
		 z=0
	 }
	 temp_v6 = {
		 x=0
		 y=0
		 z=0
	 }
	 up = {
		 x=0
		 y=0
		 z=1
	 }
	 v000 = {
		 x=0
		 y=0
		 z=0
	 }
	 v001 = {
		 x=0
		 y=0
		 z=1
	 }
	 v010 = {
		 x=0
		 y=1
		 z=0
	 }
	 v011 = {
		 x=0
		 y=1
		 z=1
	 }
	 v100 = {
		 x=1
		 y=0
		 z=0
	 }
	 v101 = {
		 x=1
		 y=0
		 z=1
	 }
	 v110 = {
		 x=1
		 y=1
		 z=0
	 }
	 v111 = {
		 x=1
		 y=1
		 z=1
	 }
	 vecMathTemp1 = {
		 x=0
		 y=0
		 z=0
	 }
	 vecMathTemp2 = {
		 x=0
		 y=0
		 z=0
	 }
 }
 gcc_ai=131072
 gcc_all=4.29497e+09
 gcc_all_engine=1023
 gcc_all_game=4.29497e+09
 gcc_animal=8.38861e+06
 gcc_decoy_projectile=6.71089e+07
 gcc_horse=65536
 gcc_horse_bridle=1.67772e+07
 gcc_ignore_z_correction=8192
 gcc_interactive=262144
 gcc_item=1.34218e+08
 gcc_ledge=4.1943e+06
 gcc_npc_avoiding_types=2.62144e+06
 gcc_npc_ignored_type=2.09715e+06
 gcc_npc_reported_type=524288
 gcc_player_all=3072
 gcc_player_body=2048
 gcc_player_capsule=1024
 gcc_player_ghostable_type=3.35544e+07
 gcc_player_type=1.04858e+06
 gcc_ragdoll=16384
 gcc_rigid=32768
 gcc_vehicle=4096
 gcinfo()
 geom_collides=65535
 geom_colltype0=1
 geom_colltype_explosion=4
 geom_colltype_foliage_proxy=8192
 geom_colltype_player=2
 geom_colltype_ray=32768
 geom_colltype_vehicle=8
 geom_floats=65536
 getfenv()
 getmetatable()
 gun_fired=14
 hunting_alarm=21
 imod()
 inr_alchemy=2
 inr_bedSit=35
 inr_bedSleep=34
 inr_bench=33
 inr_bookReading=1
 inr_captionRead=42
 inr_carryItem=46
 inr_chair=32
 inr_chatFollow=23
 inr_dice=8
 inr_doorClose=30
 inr_doorLockpick=31
 inr_doorOpen=29
 inr_doorUnlock=28
 inr_herbGathering=6
 inr_holeDigging=5
 inr_horseBond=37
 inr_horseInspect=39
 inr_horseLoot=38
 inr_horseMount=36
 inr_indulgence=45
 inr_knockOut=20
 inr_ladder=43
 inr_lockpickableLockpick=41
 inr_lockpickableUnlock=40
 inr_loot=26
 inr_mercyKill=25
 inr_pickableLoot=16
 inr_pickablePickup=17
 inr_pickableShop=15
 inr_pickableSteal=14
 inr_pickupCorpse=18
 inr_pullDown=21
 inr_scriptTrigger=44
 inr_sharpening=4
 inr_stashClose=9
 inr_stashLockpick=13
 inr_stashOpen=10
 inr_stashShop=11
 inr_stashUnlock=12
 inr_steal=24
 inr_stealthKill=19
 inr_stoneThrowing=7
 inr_talk=22
 inr_transcription=3
 inr_use_alch=27
 ipairs()
 json = {
	 _version=0.1.1
	 decode()
	 encode()
 }
 lef_push_objects=1
 lef_push_players=2
 lef_snap_velocities=4
 load()
 loadfile()
 loadstring()
 lockpick=2
 lshift()
 lure_distract=26
 mat_default = {
	 AI = {
		 crouchMult=0.5
		 fFootStepRadius=15
		 fImpactRadius=5
		 movingMult=1
		 proneMult=0.2
	 }
 }
 mat_water = {
	 AI = {
		 crouchMult=0.5
		 fFootStepRadius=15
		 fImpactRadius=5
		 movingMult=1
		 proneMult=0.2
	 }
 }
 math = {
	 Clamp()
	 Lerp()
	 PseudoGaussPDF()
	 RandomFloat()
	 Round()
	 Sign()
	 SkewedPseudoGauss()
	 Sqr()
	 abs()
	 acos()
	 asin()
	 atan()
	 atan2()
	 ceil()
	 cos()
	 cosh()
	 deg()
	 exp()
	 floor()
	 fmod()
	 frexp()
	 huge=inf
	 ldexp()
	 log()
	 log10()
	 max()
	 min()
	 mod()
	 modf()
	 pi=3.14159
	 pow()
	 rad()
	 random()
	 randomseed()
	 sin()
	 sinh()
	 sqrt()
	 tan()
	 tanh()
 }
 module()
 movement=3
 newproxy()
 next()
 nullGuid=00000000-0000-0000-0000-000000000000
 os = {
	 clock()
	 time()
 }
 package = {
	 config=\
;
?
!
-
	 cpath=.\?.dll;!\?.dll;!\loadall.dll
	 loaded = {
	 }
	 loaders = {
		 [02]()
		 [03]()
		 [01]()
		 [04]()
	 }
	 loadlib()
	 path=.\?.lua;!\lua\?.lua;!\lua\?\init.lua;!\?.lua;!\?\init.lua
	 seeall()
 }
 pairs()
 particle_constant_orientation=2
 particle_no_path_alignment=8
 particle_no_roll=4
 particle_no_spin=16
 particle_single_contact=1
 particle_traceable=1024
 pcall()
 pef_always_notify_on_deletion=1.04858e+06
 pef_always_shoot_ray_down=5.36871e+08
 pef_cannot_squash_players=2.68435e+08
 pef_disabled=32
 pef_fixed_damping=262144
 pef_ignore_areas=8.38861e+06
 pef_monitor_state_changes=4096
 pef_never_affect_triggers=32768
 pef_never_break=64
 pef_override_impulse_scale=2.09715e+06
 pef_pushable_by_players=512
 pef_traceable=1024
 perfume=28
 photo_mode=27
 print()
 q = {
	 ci()
	 dd()
	 en()
	 nen()
	 sm()
	 utils = {
		 parseEntityParam()
	 }
 }
 random()
 rawequal()
 rawget()
 rawset()
 rd()
 ref_use_simple_solver=1
 require()
 rope_collides=2.09715e+06
 rope_subdivide_segs=256
 rope_traceable=1024
 rp()
 rshift()
 select()
 setfenv()
 setmetatable()
 sharpener=4
 smell=9
 speech=17
 startled_critter=20
 string = {
	 CapitaliseFirst()
	 Explode()
	 IsEmpty()
	 Split()
	 StartsWith()
	 Trim()
	 byte()
	 char()
	 dump()
	 find()
	 format()
	 gfind()
	 gmatch()
	 gsub()
	 len()
	 lower()
	 match()
	 rep()
	 reverse()
	 sub()
	 upper()
 }
 table = {
	 Append()
	 ArrayShiftOne()
	 ArrayShiftZero()
	 Contains()
	 ContainsIgnoreCase()
	 Count()
	 CountWithPredicate()
	 DeepCopy()
	 Find()
	 IndexArrayOfObjects()
	 IsEmpty()
	 Lookup()
	 MakeFromType()
	 Merge()
	 PopFirst()
	 PopLast()
	 ReindexTableToMBT()
	 RemoveValue()
	 RemoveWithPredicate()
	 ReservoirSample()
	 RollingSample()
	 SafeGet()
	 Select()
	 SelectOne()
	 SelectValues()
	 ShallowCopy()
	 Shuffle()
	 SortArrayOfObjects()
	 WeightedReservoirSample()
	 WeightedSample()
	 concat()
	 foreach()
	 foreachi()
	 getn()
	 insert()
	 maxn()
	 remove()
	 setn()
	 sort()
 }
 thrash=25
 tonumber()
 tostring()
 twister = {
	 __presets__ = {
		 recognition:instant = {
			 RecognitionTimeKNegativeCoef=0
			 RecognitionTimeKPositiveCoef=0
			 RecognitionTimePCoef=0
		 }
	 }
 }
 type()
 unpack()
 whistle=5
 xpcall()
