<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="speech_switchDialog_participantChecks" is_function="1">
		<Variables>
			<Variable name="behaviorPriorityCheckPassed" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="contextCheckPassed" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="numberOfNpcParticipants" type="_int" values="" isPersistent="0" form="array" />
			<Variable name="scheduledPriority" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="synchronizationCheckPassed" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="participantChecksPassed" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="switchDialog" type="speech:switchDialog" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<IfElseCondition failOnCondition="false" condition="$switchDialog.context ~= &apos;-&apos; &amp; $switchDialog.context ~= &apos;&apos;" saveVersion="2">
						<Then canSkip="1">
							<Loop count="-1">
								<EntityContextBarrier context="$switchDialog.context" target="$this.id" Negation="false" RunLogic="Halt">
									<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<Expression expressions="$contextCheckPassed = true" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Child>
										<OnFail canSkip="1">
											<Expression expressions="$contextCheckPassed = false" />
										</OnFail>
									</FuseBox>
								</EntityContextBarrier>
							</Loop>
						</Then>
						<Else canSkip="1">
							<IfElseCondition failOnCondition="false" condition="$switchDialog.maxScheduledPriority &gt;= 0" saveVersion="2">
								<Then canSkip="1">
									<Loop count="-1">
										<Sequence>
											<GetScheduledPriority Priority="$scheduledPriority" />
											<IfElseCondition failOnCondition="false" condition="$switchDialog.maxScheduledPriority &gt;= $scheduledPriority" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$behaviorPriorityCheckPassed = true" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$behaviorPriorityCheckPassed = false" />
												</Else>
											</IfElseCondition>
											<Wait duration="&apos;500&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
								</Then>
								<Else canSkip="1">
									<ErrorNode Message="&apos;Either context or maximum scheduler priority needs to be provided&apos;" />
								</Else>
							</IfElseCondition>
						</Else>
					</IfElseCondition>
					<Loop count="-1">
						<IfElseCondition failOnCondition="false" condition="$switchDialog.ingameDialogType == $enum:speech_ingameDialogType.Bark" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<Expression expressions="$synchronizationCheckPassed = true" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Then>
							<Else canSkip="1">
								<IfGate atomic="false" condition="$behaviorPriorityCheckPassed | $contextCheckPassed" RunLogic="Halt">
									<Sequence>
										<IfElseCondition failOnCondition="false" condition="$switchDialog.playerInDialog" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$numberOfNpcParticipants = #participants - 1" />
											</Then>
											<Else canSkip="1">
												<Expression expressions="$numberOfNpcParticipants = #participants" />
											</Else>
										</IfElseCondition>
										<Function_speech_createLock alias="$switchDialog.alias" initiator="$switchDialog.initiator" metarole="$switchDialog.metarole" lockName="$lockName" nodeLabel="68468976" />
										<Synchronize SemaphoreCount="$numberOfNpcParticipants" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
											<Sequence>
												<Expression expressions="$synchronizationCheckPassed = true" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Synchronize>
										<Expression expressions="$synchronizationCheckPassed = false" />
									</Sequence>
								</IfGate>
							</Else>
						</IfElseCondition>
					</Loop>
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="($behaviorPriorityCheckPassed | $contextCheckPassed) &amp; $synchronizationCheckPassed">
							<Sequence>
								<Expression expressions="$participantChecksPassed = true" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="true">
							<Sequence>
								<Expression expressions="$participantChecksPassed = false" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
					</ContinuousSwitch>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorPriorityCheckPassed" comment="" />
				<Variable name="contextCheckPassed" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="numberOfNpcParticipants" comment="" />
				<Variable name="scheduledPriority" comment="" />
				<Variable name="synchronizationCheckPassed" comment="" />
				<Variable name="participantChecksPassed" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="switchDialog" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Child>
											<OnFail>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</OnFail>
										</FuseBox>
									</EntityContextBarrier>
								</Loop>
							</Then>
							<Else>
								<IfElseCondition hasInputBreakpoint="0" comment="$switchDialog.maximumSchedulerPriority &gt; 0" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetScheduledPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetScheduledPriority>
												<IfElseCondition hasInputBreakpoint="0" comment="$scheduledPriority &lt;= $switchDialog.playerDistance" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</IfElseCondition>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</Then>
									<Else>
										<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ErrorNode>
									</Else>
								</IfElseCondition>
							</Else>
						</IfElseCondition>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Then>
								<Else>
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
												<Else>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Else>
											</IfElseCondition>
											<Function_speech_createLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_createLock>
											<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Synchronize>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</IfGate>
								</Else>
							</IfElseCondition>
						</Loop>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>