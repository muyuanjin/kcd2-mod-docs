<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_drawWeaponDecorator" is_function="1">
		<Variables>
			<Variable name="drawWeapon_local" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand_content" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand_enabled" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leftHand_secondary" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand_content" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand_enabled" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="rightHand_secondary" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="drawWeapon" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="subtreeData_canUrge" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_crimesResolved" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_followPlayer" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_goIntoResolve" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_playerHasFreeRoam" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_playerLeft" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeData_teleport" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="subtreeFile" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="subtreeName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="weaponSet" type="_string" values="Primary" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<IfElseCondition failOnCondition="false" condition="$drawWeapon" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<Sequence>
											<GetWeaponsFromWeaponSet WeaponSet="$weaponSet" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											<Sequence>
												<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand_secondary" RightHand="$rightHand_secondary" UseTorchWhenAppropriate="true" />
												<IfCondition failOnCondition="false" condition="$rightHand_secondary ~= $__null | &#10;$leftHand_secondary ~= $__null">
													<Sequence>
														<HandCheck who="$this.id" LeftHand="$leftHand_content" RightHand="$rightHand_content" />
														<IfCondition failOnCondition="false" condition="$leftHand_secondary == $leftHand_content &amp; &#10;$rightHand_secondary == $rightHand_content">
															<Expression expressions="$rightHand = $rightHand_secondary &#10;$leftHand = $leftHand_secondary" />
														</IfCondition>
													</Sequence>
												</IfCondition>
											</Sequence>
										</Sequence>
									</Else>
								</IsWeaponDrawn>
								<Expression expressions="$rightHand_enabled = $rightHand ~= $__null &#10;$leftHand_enabled = $leftHand ~= $__null" />
								<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="crime_weapon_rightHand" useDecision="true" enabled="$rightHand_enabled" saveVersion="2">
									<Search canSkip="1">
										<Success />
									</Search>
									<Exec canSkip="1">
										<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="crime_weapon_leftHand" useDecision="true" enabled="$leftHand_enabled" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<Parallel successMode="Any" failureMode="Any">
													<IncludeTree File="$subtreeFile" Name="$subtreeName" nodeLabel="53020492" />
													<Sequence>
														<Expression expressions="$drawWeapon_local = $drawWeapon" />
														<IfGate atomic="false" condition="$drawWeapon ~= $drawWeapon_local" RunLogic="Halt">
															<Success />
														</IfGate>
													</Sequence>
												</Parallel>
											</Exec>
										</HandContentElement>
									</Exec>
								</HandContentElement>
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Parallel successMode="Any" failureMode="Any">
								<IncludeTree File="$subtreeFile" Name="$subtreeName" nodeLabel="77415263" />
								<Sequence>
									<Expression expressions="$drawWeapon_local = $drawWeapon" />
									<IfGate atomic="false" condition="$drawWeapon ~= $drawWeapon_local" RunLogic="Halt">
										<Success />
									</IfGate>
								</Sequence>
							</Parallel>
						</Else>
					</IfElseCondition>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="drawWeapon_local" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="leftHand_content" comment="" />
				<Variable name="leftHand_enabled" comment="" />
				<Variable name="leftHand_secondary" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="rightHand_content" comment="" />
				<Variable name="rightHand_enabled" comment="" />
				<Variable name="rightHand_secondary" comment="" />
				<Variable name="drawWeapon" comment="" />
				<Variable name="subtreeData_canUrge" comment="" />
				<Variable name="subtreeData_crimesResolved" comment="" />
				<Variable name="subtreeData_followPlayer" comment="" />
				<Variable name="subtreeData_goIntoResolve" comment="" />
				<Variable name="subtreeData_playerHasFreeRoam" comment="" />
				<Variable name="subtreeData_playerLeft" comment="" />
				<Variable name="subtreeData_target" comment="" />
				<Variable name="subtreeData_teleport" comment="" />
				<Variable name="subtreeFile" comment="" />
				<Variable name="subtreeName" comment="" />
				<Variable name="weaponSet" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetWeaponsFromWeaponSet>
												<Sequence hasInputBreakpoint="0" comment="#KCD2-328373" breakpointFlags="0">
													<OutputBreakpoints />
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
														</Sequence>
													</IfCondition>
												</Sequence>
											</Sequence>
										</Else>
									</IsWeaponDrawn>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Search>
										<Exec>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</IncludeTree>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfGate>
														</Sequence>
													</Parallel>
												</Exec>
											</HandContentElement>
										</Exec>
									</HandContentElement>
								</Sequence>
							</Then>
							<Else>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</IfGate>
									</Sequence>
								</Parallel>
							</Else>
						</IfElseCondition>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>