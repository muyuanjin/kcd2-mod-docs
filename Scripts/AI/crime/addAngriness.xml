<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_addAngriness" is_function="1">
		<Variables>
			<Variable name="faction" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="angriness" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetFactionWithLabel Soul="$target" Label="settlement" OutputFaction="$faction" />
					<IfCondition failOnCondition="false" condition="$faction == &apos;&apos;">
						<Sequence>
							<GetFactionWithLabel Soul="$target" Label="camp" OutputFaction="$faction" />
							<IfCondition failOnCondition="false" condition="$faction == &apos;&apos;">
								<GetFactionWithLabel Soul="$target" Label="solitude" OutputFaction="$faction" />
							</IfCondition>
						</Sequence>
					</IfCondition>
					<IfElseCondition failOnCondition="false" condition="$faction ~= &apos;&apos;" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<Expression expressions="$angriness = &apos;auto_&apos; + $angriness" />
								<IsBandit Npc="$target" IsBandit="$isBandit" />
								<IfCondition failOnCondition="false" condition="$isBandit">
									<Expression expressions="$angriness += &apos;_bandit&apos;" />
								</IfCondition>
								<AddAngriness Value="$angriness" FactionId="$faction" LocationGUID="" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<AffectFeelings Npc="$target" Token="$angriness" AffectNervousness="true" AffectReputation="false" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="faction" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="angriness" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetFactionWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetFactionWithLabel>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetFactionWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetFactionWithLabel>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetFactionWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetFactionWithLabel>
								</IfCondition>
							</Sequence>
						</IfCondition>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IsBandit>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<AddAngriness hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddAngriness>
								</Sequence>
							</Then>
							<Else>
								<AffectFeelings hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AffectFeelings>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>