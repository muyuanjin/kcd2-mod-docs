<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="test_endingJoinedUnstance" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;test_NPCState_addLink&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						</GraphSearch>
						<Expression expressions="$newActivity = true" />
					</Selector>
					<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;test_NPCState_addLink&apos;" data="" enabled="true">
						<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;party_duo_standing_lock_unstance&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="$unstanceName" locationObject="$__object.id" slaveObject="" />
					</AddLinkElement>
					<Selector>
						<IfElseCondition failOnCondition="false" condition="$newActivity" saveVersion="2">
							<Then canSkip="1">
								<Parallel successMode="Any" failureMode="Any">
									<LinkListener operation="Add" from="$__object.id" to="" tag="&apos;test_NPCState_addLink&apos;" reportInitialState="true">
										<IfCondition failOnCondition="false" condition="$__to ~= $this.id">
											<Expression expressions="$partner = $__to" />
										</IfCondition>
									</LinkListener>
									<IfGate atomic="false" condition="$partner ~= $__null" RunLogic="KeepRunning">
										<Success />
									</IfGate>
									<Sequence>
										<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
										<Fail />
									</Sequence>
								</Parallel>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;test_NPCState_addLink&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
											<Child0 canSkip="1">
												<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</Child0>
										</NegationOp>
										<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$partner" />
									</GraphSearch>
								</Sequence>
							</Else>
						</IfElseCondition>
						<Sequence>
							<UrgencyDecorator Urgency="Slow">
								<WaitAction />
							</UrgencyDecorator>
							<Fail />
						</Sequence>
					</Selector>
					<Parallel successMode="Any" failureMode="Any">
						<LinkGate from="$__object.id" to="$partner" tag="&apos;test_NPCState_addLink&apos;" amount="All" presence="NotThere" RunLogic="KeepRunning">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;leavingDancing&apos;">
								<Sequence>
									<UrgencyDecorator Urgency="Slow">
										<WaitAction />
									</UrgencyDecorator>
									<Fail />
								</Sequence>
							</Semaphore>
						</LinkGate>
						<Sequence>
							<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;leavingDancing&apos;">
								<Success />
							</Semaphore>
						</Sequence>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WUIDFilter>
							</GraphSearch>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Selector>
						<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedUnstanceAction>
						</AddLinkElement>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</LinkListener>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</IfGate>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</Sequence>
									</Parallel>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WUIDFilter>
												</Child0>
											</NegationOp>
											<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnyLinkFilter>
										</GraphSearch>
									</Sequence>
								</Else>
							</IfElseCondition>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</UrgencyDecorator>
								<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Fail>
							</Sequence>
						</Selector>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</UrgencyDecorator>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Sequence>
								</Semaphore>
							</LinkGate>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Semaphore>
							</Sequence>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>